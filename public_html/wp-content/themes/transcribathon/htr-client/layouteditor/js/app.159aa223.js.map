{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?62f7","webpack:///./src/components/LayoutEditor.vue?f752","webpack:///./src/components/singletons/actionHandler.js","webpack:///./src/components/singletons/IdHandler.js","webpack:///./src/components/editor-config.js","webpack:///./src/components/singletons/settings.js","webpack:///./src/components/myFabric.js","webpack:///./src/components/geometryFunctions.js","webpack:///./src/components/shapes/Shape.js","webpack:///./src/components/shapes/Word.js","webpack:///./src/components/shapes/Baseline.js","webpack:///./src/components/shapes/Region.js","webpack:///./src/components/singletons/ModalHandler.js","webpack:///./src/components/shapes/Cell.js","webpack:///./src/components/shapes/CellMatrix.js","webpack:///./src/components/shapes/Table.js","webpack:///./src/components/jsonParser.js","webpack:///./src/components/shapes/Relation.js","webpack:///./src/components/stateProperties.js","webpack:///./src/components/actions.js","webpack:///./src/components/editor.js","webpack:///./src/components/vueComponents/StructureTypeManager.vue?325e","webpack:///./src/components/vueComponents/AddStructureType.vue?7d38","webpack:///src/components/vueComponents/AddStructureType.vue","webpack:///./src/components/vueComponents/AddStructureType.vue?9cb4","webpack:///./src/components/vueComponents/AddStructureType.vue","webpack:///src/components/vueComponents/StructureTypeManager.vue","webpack:///./src/components/vueComponents/StructureTypeManager.vue?2a14","webpack:///./src/components/vueComponents/StructureTypeManager.vue?ab7b","webpack:///./src/components/vueComponents/SettingsModal.vue?68bf","webpack:///./src/components/vueComponents/ShortcutManager.vue?6c02","webpack:///src/components/vueComponents/ShortcutManager.vue","webpack:///./src/components/vueComponents/ShortcutManager.vue?9fec","webpack:///./src/components/vueComponents/ShortcutManager.vue","webpack:///src/components/vueComponents/SettingsModal.vue","webpack:///./src/components/vueComponents/SettingsModal.vue?7439","webpack:///./src/components/vueComponents/SettingsModal.vue?06c6","webpack:///./src/components/vueComponents/Modal.vue?f6d1","webpack:///src/components/vueComponents/Modal.vue","webpack:///./src/components/vueComponents/Modal.vue?462a","webpack:///./src/components/vueComponents/Modal.vue","webpack:///./src/components/vueComponents/LayoutTree.vue?7682","webpack:///src/components/vueComponents/LayoutTree.vue","webpack:///./src/components/vueComponents/LayoutTree.vue?c963","webpack:///./src/components/vueComponents/LayoutTree.vue?c8ad","webpack:///src/components/LayoutEditor.vue","webpack:///./src/components/LayoutEditor.vue?4032","webpack:///./src/components/LayoutEditor.vue?f4f6","webpack:///./src/xml-examples/dutch-handwriting.xml","webpack:///./src/pageXML.js","webpack:///./src/tileSource.js","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/i18n.js","webpack:///./src/main.js","webpack:///./src/components/vueComponents/StructureTypeManager.vue?50f0","webpack:///./src/components/vueComponents/LayoutTree.vue?9390","webpack:///./src/components/LayoutEditor.vue?ea22","webpack:///./src/components/vueComponents/SettingsModal.vue?730e"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","pageXml","tileSource","color","default","on","save","staticRenderFns","staticClass","style","windowWidth","width","ref","$t","zoomIn","zoomOut","setHome","fitToWidth","getButtonStyle","Editor","BUTTON","POINTER","$event","buttonClick","ADD_BASELINES","ADD_REGIONS","ADD_TABLES","UNDO","REDO","scopedSlots","_u","fn","_v","_s","_l","shortcut","string","domProps","openSettingsModal","open","treeOpen","fetchLayout","layout","settings","Singleton","instance","createInstance","ActionHandler","actionStack","actionIndex","setEdited","ACTION_TYPE","freeze","ADD_POINT","REMOVE_POINT","MOVE_POINT","MOVE_SHAPE","MULTI_ACTION","REMOVE_SHAPE","ADD_SHAPE","ADD_TABLE_COLUM","REMOVE_TABLE_COLUM","ADD_TABLE_ROW","REMOVE_TABLE_ROW","ADD_CELL","REMOVE_CELL","CHANGE_CELL_SPAN","CHANGE_PARENT","MOVE_SHAPE_WITH_VECTOR","SET_STRUCTUR_TYPE","CHANGE_READING_ORDER","POSITION_MOVE","ADD_RELATION","REMOVE_RELATION","UPDATE_RELATION_IDS","SELECTION_TYPE","ADD","REMOVE","CLEAR","getActionType","action","_","isEmpty","entries","find","number","type","warn","getSelectionType","selection","logAction","transformActionType","newAction","log","actions","map","a","protocolLog","redo","nextAction","doAction","undo","lastAction","reversedAction","reverse","editor","performAction","vueFunctions","addAction","select","performSelection","index","shape","parent_id","shape_id","point_id","point_index","old_coords","new_coords","col_index","row_index","table","cell","row","col","cell_id","old_row_span","new_row_span","old_col_span","new_col_span","shape_count","old_parent_id","new_parent_id","old_index","new_index","vector","x","y","old_type","new_type","distance","relation","reset","IdHandler","idCounter","ids","id","requestId","extendId","newId","includes","DEFAULT_SETTINGS","showStructureTypes","showReadingOrder","showRelations","showRegions","showBaselines","showWords","structureTypeSize","splitLineAngle","reeShowTextOnly","treeExpand","circleSize","Settings","structureTypes","eventHandlers","update","set","emit","getAll","handler","event","h","MyFabric","scaleFactor","idHandler","init","scale","tileSourceWidth","circleRadius","largeCircleRadius","vertexRadius","wordBackground","wordLineColor","baselineColor","tableColor","regionColor","defaultVertexColor","selectedVertexColor","deleteColor","getRelationBubble","vertices","points","left","top","hull","polygonScale","polygonHull","coords","size","topLeft","getTopLeft","Math","sqrt","fabric","Polyline","strokeWidth","originX","originY","stroke","fill","selectable","evented","Text","fontSize","backgroundColor","getWordCircle","Circle","radius","hasControls","hasBorders","defaultRadius","defaultColor","selectedColor","getWordPolyLine","getBaselineCircle","getPolygon","initId","polyline","getPolyline","concat","fpointsOffset","polygon","opacity","polyCoords","getLineElements","line","arrows","pointObjects","reduce","first","second","angle","lineAngle","midPoint","lineMidpoint","arrow","getArrow","lines","polyLine","initDistance","degreeMinusdegree","drawTranslatedMidPoints","degree","distFactor","pow","pointAngle","startPoint","translatedPoint","pointTranslate","drawTranslatedStartPoint","drawTranslatedEndPoint","degreeFirstToSecond","getRegionCircle","getRegionBackground","getRegionLine","getRunningCircle","hoverCursor","moveCursor","getTableCircle","padding","getHoverLine","vertical","lockMovementX","lockMovementY","getCellBackground","getCellFrame","getStructureText","shapeType","newPoint","getROText","roIndex","indexInt","parseInt","toString","acc","v","abs","Triangle","height","getSplitLine","canvasDiagonal","mousePosition","Line","getNewAssignLine","x1","y1","x2","y2","startPos","getNewAssignCircle","getPreviewLine","getPreviewRect","Rect","getSelectionRect","rect","initX","initY","updated","getArea","halfWidth","halfHeight","getInvalidTableBackground","getInvalidTableFrame","getInvalidTableSign","mean","polygonMean","clone","objectClone","getGroupData","group","getData","circles","getObjects","filter","groups","scaleX","scaleY","g","getDock","getRelationArrow","p1","p2","lineInterpolate","arrowLine","Group","array_move","arr","k","undefined","projectPointer","pointer","minMargin","min","point","foundLine","enoughDistance","distToFirst","distanceBetween","distToSecond","pointInPolygon","interpolator","sum","ratio","calcLines","areDifferent","offset","Offset","margin","parentIds","getSplitCoords","splitLine","splitList","splitSegment","segment","geometricLines","lineSegment","flat","intersectionPoint","intersect","vertexAfterId","afterIntersection","newSplit","whatSideOfLine","sign","getRectCoords","position","initCoord","coordsList","getClosestLinePair","pairsOfArray","array","val","i1","Array","i2","lineObjects","last","pairs","closest","pair","dist1","dist2","newDist","newPair","dist","Infinity","newLines","e","f","b","createSplitline","origin","initPoint","newEndPoint","pointRotate","newStartPoint","Shape","canvas","attributes","elements","text","state","STATE","EDIT","selected","showStructure","prevLines","deletedPoints","actionHandler","myFabric","hoveredVertex","preview","runningVertex","lastMousePosition","FIRST_DRAW","GROUP_SELECTION","ADD_VERTEX","REMOVE_VERTEX","DISPLAY_RO","RESIZE","LARGE_GROUP_SELECTION","M_ACTIONS","V_DIV","H_DIV","REMOVE_DIV","TYPE","REGION","TABLE","BASELINE","CELL","WORD","SHAPE","setState","addPoint","removePoint","movePoint","moveAllPoints","moveAllPointsWithVector","cellMatrix","createColumn","deleteColumn","createRow","deleteRow","setCell","removeCellById","getCellById","rowSpan","colSpan","setStructureType","getReadingOrder","custom","readingOrder","getStructureType","structureType","setReadingOrder","getType","pointId","vertex","setCoords","add","addMultiplePoints","console","remove","discardActiveObject","getVertexIndex","foundIndex","findIndex","getVertexById","foundVertex","showDock","dock","getMidPoint","removeDock","handleClickEvent","handleDBLClickEvent","setButtonState","handleMouseMoveEvent","handleMouseOut","mouseDownBefore","handleMouseUpEvent","mouseUp","unSelect","showStructureType","show","settingsUpdate","isVisible","superUpdate","updateVertexSize","updateStructureText","updateReadingOrderText","updateVisibility","removeFromCanvas","updateVertices","contains","updateGeometricLines","chop","structureText","readingOrderText","Word","blueprint","constructor","getBlueprint","myIndex","parentId","keepId","getGroup","cornerStyle","cornerSize","cornerColor","transparentCorners","cornerStrokeColor","lockSkewingX","lockSkewingY","setControlsVisibility","mtr","sendToBack","Baseline","activeVertex","tempCoords","prevLine","lastAddedVertex","alive","modified","insertionPosition","previewCircle","words","baselineCoords","coord","newVertex","getVertex","getPolygonCoords","word","getLayout","me","requestRenderAll","target","previewVertex","insertVertex","removeLastAddedVertex","getPointer","previewFirstDraw","minDistanceToCreate","self","parent1","parent2","parentDistance","distanceOverVertex","setActiveObject","fire","addWord","indexOf","current","newestVertex","getCenter","members","showRed","showNormal","bounds","updateLineAndArrows","updatePolygon","polyVertices","removeChildsFromCanvas","w","Region","baselines","background","pointerOnLine","invisibleVertex","textLines","children","adjustToBaseline","polygonCoords","coordsArrays","polygonBounds","previewRect","bl","mark","unMark","subTargetCheck","getLargeGroup","addBaseline","expectedIndex","removeBaseline","newLineY","yValues","parentLine","sort","newIndex","getBaselines","updateLine","updateBackground","getCoords","showPreviewRect","moveVertexById","ModalHandler","Cell","spanVertices","invisibleVertices","tableSelected","REGULAR","setOpenFn","openFn","heading","PARENT","CHILD","isSpanParent","cornerPoints","getCornerPointsIndices","showFrameOnly","updateFrame","frame","getColor","getOpacity","isSpanChild","setType","getCellPolygon","setVertices","setSpanVertices","getLeftVertices","getBottomVertices","third","getRightVertices","fourth","getTopVertices","CellMatrix","rowNumber","colNumber","matrix","deletedCells","ROWSPAN","span","rowspan","COLSPAN","colspan","SPAN_PACK","pack","rowIndex","JSON","stringify","newString","removeCell","oldCell","allCells","getCell","getWidth","getHeight","getCellsOfColumn","transposed","getTransposedMatrix","getCellsOfRow","colIndex","noVerticalSplit","cells","horizontalCellLines","some","lineIntersectsLine","noHorizontalSplit","verticalCellLines","splitForbidden","bools","intem","verticalCorrect","horizontalCorrect","bool","removeForbidden","lineIndex","isVertical","lastIndex","areVerticalNeighbors","cell1","cell2","position1","getPosition","position2","neighborRow","sameCol","areHorizontalNeighbors","neighborCol","sameRow","getSharedVertexIds","updateCellProperties","incorrectValues","newVertices","getSpanVertices","getSpanChilds","child","rowSteps","from","colSteps","step","Set","childs","rStep","cStep","foundError","allVertices","all","rowExists","colExists","getVerticalCircles","takenVertices","list","cols","leftVertices","rightVertices","getHorizontalCircles","rows","topVertices","bottomVertices","getCellParent","found","getNeighbor","direction","neighbor","currentParent","newParent","mergeParents","minRow","minCol","maxRow","max","maxCol","newRowSpan","newColSpan","getAllParents","getCellsOfVertex","Table","prev","hoverLine","markedCell","horizontalLines","verticalLines","createCell","validateCells","setTableInvalid","requestChop","numberOfRows","numberOfCols","getVertexByCoords","creatVertex","getTableCoords","maxRowIndex","maxColIndex","topRight","bottomRight","bottomLeft","getCorrectedCoords","tubes","getTubes","tube","getCellsOfTube","newParentCoords","positions","expectedPositions","allCellsValid","expectedCoordsLength","validCornerpoints","validCoordsLength","validPositions","every","ep","isEqual","notSpanning","singleTube","coordsLength","leftFirst","leftSecond","lowerRest","rightFirst","rightSecond","upperMidCoords","lowerMidCoords","nextCoords","newCells","popLast","startIndex","newCell","copy","updateMatrix","updateLines","updateCells","circleLine","polygons","updateCircles","relations","lineTransform","util","multiplyTransformMatrices","calcTransformMatrix","decomposed","qrDecompose","currentCircle","translateX","translateY","getPositionOfLine","getRelations","vertexMatrix","inverseLineMatrix","invertTransform","allLines","backgrounds","getCellBackgrounds","strokeUniform","circle","circleMatrix","inverseGroupMatrix","selectNewCell","getFrame","bottom","right","removeLine","index1","index2","getPairActions","mergeCells","saveTempCoords","updateCellFrames","tolerance","addVerticalLine","getCellFromPointer","columnCells","splitCellVertical","oldCell1","addHorizontalLine","rowCells","splitCellHorizontal","currentCell","points1","points2","rest","pop","vertices1","vertices2","mergeRow","parent","getCellSpanAction","mergeColumn","dissolveCells","getParentFromPointer","mergeRightCell","mergeNeighbors","mergeLeftCell","mergeTopCell","mergeBottomCell","cell1Parent","cell2Parent","sortedCells","aPostition","bPostition","mergeTwoCells","sharedVertexIds","removeShared","removeDuplicates","positionCloseToVertex","updateHoveredLine","removeOldLine","setNewLine","newLine","isDragging","findLine","updateVertexSizes","createDragVertex","dragVertex","getDragCircle","lineMatrix","inverseVertexMatrix","lineRelation","controlPressed","getSelectedCells","updateCellSelection","invalid","frameInvalid","backgroundInvalid","signInvalid","parseCustom","parser","cssjs","parsed","parseCSS","customObject","selector","rules","relationType","relationName","tags","stringifyCustom","tag","ruleString","directive","substring","jsonToBlueprint","globalJson","sortByReadingOrder","regions","sortLines","region","estimateBaselineCoords","isClockwise","area","getNextCoord","collectCoords","collection","endCoord","getMostLeft","left1","left2","getMostRight","right1","right2","clockwise","simplify","getRelationsBlueprint","getAttributesBlueprint","getRelationBlueprint","getIdFromRegionRef","regionRef","getRegionBlueprint","textRegion","getCoordsBlueprint","getTextLineBlueprint","getTextEquivBlueprint","getTableBlueprint","tableRegion","getCellBlueprint","getCornerPtsBlueprint","split","textLine","getBaselineBlueprint","getWordBlueprint","scalePointList","getPointListfromString","baseline","textEquiv","rootElements","getPage","relationsBlueprint","unSortedRegions","regionBlueprints","blueprintToJson","globalJsonCopy","parse","otherRegions","getRelationsJson","getAttributesJson","getRelationJson","getRegionRefFromId","getRegionJson","getCoordsJson","getTextLineJson","getTextEquivJson","getTableJson","getCellJson","getCornerPtsJson","getBaselineJson","getWordJson","blueprintAttributes","getStringfromPointList","unScalePointList","join","regionJsons","relationsJson","allRegions","pcgts","page","rounded","round","scaledPoints","unScaledPoints","Relation","getRandomColor","LINK","JOIN","SAME_AS","FOLLOWED_BY","setIds","getIds","letters","floor","random","getStatePropertyWrappers","addRelation","draftArrows","activeArrow","activeInit","createAction","parameters","getIndex","xml","throttleCounter","moveCounter","pageJSON","xml2js","compact","trim","alwaysArray","alwaysChildren","shapes","filterByShapeId","shapeId","relId","relationGraveyard","relationArrow","allRealtionArrows","statePropertyWrappers","activeShapes","isSingle","isWord","isBaseline","isRegion","isTextRegion","isTable","areMultiple","haveState","areBaselines","areTextRegions","areTables","areRegions","areTableAndCell","tables","areSiblings","getBaselineParent","removeAll","withoutCells","getTable","draft","mouseEventHandlers","containerEventHandlers","keyEventHandlers","deletedShapes","shifted","rPressed","lastHovered","getCanvasHeight","markedParent","mouseDown","dblClick","mouseMove","mouseOut","containerMouseUp","keyDown","keyUp","document","getElementById","addEventListener","getTileSourceWidth","openModal","finishRelation","finishBaseline","VERTICAL_SPLIT","HORIZONTAL_SPLIT","CUSTOM_SPLIT","ASSIGN_NEW_PARENT","DUPLICATE","updateRelationArrow","MULTI_SELECT","selectionRect","rectArea","foundShapes","allShapesAndCellsAndWords","polygonIntersectsPolygon","polygonInPolygon","currentIds","foundIds","newIds","removeIds","updateDuplicate","previewNewAssign","canvasDrag","lastDownEvent","createSelectionRect","setDrag","properties","getStateProperties","initRelationCreation","baseShape","getShape","oldParent","oldParentLinesCopy","newParentLinesCopy","getNewAssignAction","oldIndex","finalAction","newAssignStartPos","animate","onChange","renderAll","duration","onComplete","button","foundShape","findShape","selectSingleShape","updateContextMenu","resetContextMenu","getTableOfCell","newRegion","coordList","expectedRegionIndex","newTable","selectionIds","resultShapes","newShapes","splitShape","getSplitAction","xShift","prevDuplicate","initPosition","yShift","getRemoveAction","preventDefault","readFromClipboard","allShapesAndCells","writeToClipboard","then","selectLinesOfRegion","mergeSmallLines","merge","correctAttrVal","imgUrl","replaceAll","NONE","CREATE_RELATION","CURSOR","SELECTION","TEXTLINE","TEXTREGION","SHAPE_TYPE","newState","cursorUrl","endState","startState","removeDocks","unGroupSelect","defaultCursor","getCursorUrl","updateRelationArrows","showDocks","dockPositions","getDockPositions","groupSelect","previewDuplicate","setEditorState","removeRelation","removeShape","updateReadingOrder","addRegion","addTable","movedShapes","textRegions","shapeGroups","childRelations","vertexRelations","oldCoords","oldMatrix","newCoords","vertexTransform","newMatrix","tableRegions","isCell","findParentByPolygon","parentShape","getTextRegionsAndCells","findBaseline","getSelectionParter","render","createPageXML","json","isValid","js2xml","ignoreComment","spaces","attributesFn","attributeValueFn","error","shapeRelations","getWordParent","pointRemoveAllowed","allShapes","removePointWithAction","markNewParent","removeCanvasListeners","off","removeKeyListeners","removeEventListener","newRelation","newRegionY","splitTextLine","currentLine","splitItem","splitTextRegion","currentRegion","newRegions","splittedLines","sides","sideIndex","lineSideIndex","side","getMergeAction","oldShapes","newShape","oldShape","prop","getRegion","foundRegion","addShape","mergeTextLines","mergeTextRegions","getClosestLine","line1","line2","allRegionPoints","allPoints","allTextLines","cursor","getRouterBase","updateRelationIds","id1","id2","s1","s2","rIndex","lIndex","ctxmenu","element","getStructureItem","shapeInfo","bold","oldType","getAssignStructure","structureTypeList","cellStructureType","cellStructureTypeIndex","el","subMenu","indices","currentStructureType","structureTypeIndex","getDelete","getTableItems","getMerge","getVerticalSplit","getHorizontalSplit","getCustomSplit","getDeletePoint","getRemoveDivider","getAssignNewParent","getSelectAll","getDuplicate","getCreateRelation","values","getDeleteRelation","itemList","filterTextlines","tl","lineIds","regionInfos","bluePrint","lineInfos","infos","navigator","clipboard","writeText","dimensionAlreadyExists","vert","requestVertexShift","readText","info","polyParent","$emit","props","label","backgroundDot","format","model","callback","$$v","$set","expression","swatchesExists","_e","openConfirm","openAdd","saveConfig","$parent","close","currentTypes","required","methods","$router","openToast","$buefy","toast","message","component","initTypes","types","mounted","dialog","confirm","title","confirmText","hasIcon","onConfirm","AddStructureType","events","closeModal","modal","removeTag","changed","handles","display","openStructureManager","openShortcutManager","shortcuts","fetchSettings","StructureTypeManager","ShortcutManager","String","showTextOnly","margins","defaultTreeIndent","panelClick","treeData","layoutDragStart","layoutDragEnd","node","path","tree","layoutClick","toggleFold","$folded","getIdStyle","getReadingOrderStyle","getStructureStyle","getTextStyle","components","initData","isOpen","Boolean","activeShapeIds","watch","hasChanged","newSettings","unfoldAll","foldAll","treeShowTextOnly","extendTree","rootNode","$droppable","setTimeout","unFoldNodePath","unfold","getTreeNodeInfo","$refs","walkTreeData","scrollContainerByNodeId","container","scrollTop","newScrollTop","halfContainerHeight","$nodeStyle","$nodeBackClass","styleSelected","addProperties","expand","selectionAddShape","selectionRemoveShape","dragType","dragNode","pPathFirst","pPathSecond","activeIndices","oldParentId","newParentId","isTooBig","correctDistance","isTooSmall","currentTarget","getDragAction","getMoveAction","that","overlay","editorState","canvasHeight","leftClickTracker","drag","instructions","options","$store","dispatch","fullScreen","isFullscreen","computed","deep","created","viewerWidth","innerWidth","showLog","showProtocolLog","showWarn","prefixUrl","tabIndex","tileSources","controlsFadeDelay","showZoomControl","showHomeControl","showFullPageControl","minZoomImageRatio","maxZoomPixelRatio","visibilityRatio","viewer","addOnceHandler","uniformScaling","fireRightClick","uniScaleKey","centeredKey","selectionKey","altActionKey","altSelectionKey","tileSourceRatio2","zoomPerClick","setControlsEnabled","layouteditor","addHandler","buffer","beforeDestroy","setMouseNavEnabled","enable","getSettingsFromCookie","$cookies","saveSettingsToCookie","config","layoutSettings","SettingsModal","layoutTree","setLeftClickDrag","Modal","editorButton","boolean","restartEditor","clear","viewport","goHome","fullscreen","$fullscreen","toggle","newBounds","viewportAspect","fitBounds","zoomBy","dutchHandwriting","source","protocol","sizes","tiles","scaleFactors","profile","formats","maxArea","qualities","supports","iiifJson","iiifString","LayoutEditor","onLayoutSave","Vue","use","VueI18n","locale","process","fallbackLocale","messages","silentTranslationWarn","Buefy","i18n","App","$mount"],"mappings":"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","file":"js/app.159aa223.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100vw\",\"height\":\"100vh\"}},[_c('LayoutEditor',{attrs:{\"pageXml\":_vm.pageXml,\"tileSource\":_vm.tileSource,\"structureTypes\":[\n      { name: 'paragraph', color: '#1CE6FF', default: 'true' },\n      { name: 'heading', color: '#FF34FF', default: 'true' },\n      { name: 'caption', color: '#008941', default: 'true' },\n      { name: 'header', color: '#006FA6', default: 'true' },\n      { name: 'footer', color: '#A30059', default: 'true' },\n      { name: 'page-number', color: '#FFFF00', default: 'true' },\n      { name: 'drop-capital', color: '#00846F', default: 'true' },\n      { name: 'credit', color: '#FFDBE5', default: 'true' },\n      { name: 'floating', color: '#7A4900', default: 'true' },\n      { name: 'signature-mark', color: '#0000A6', default: 'true' },\n      { name: 'catch-word', color: '#63FFAC', default: 'true' },\n      { name: 'marginalia', color: '#B79762', default: 'true' },\n      { name: 'footnote', color: '#004D43', default: 'true' },\n      { name: 'footnote-continued', color: '#8FB0FF', default: 'true' },\n      { name: 'endnote', color: '#997D87', default: 'true' },\n      { name: 'TOC-entry', color: '#5A0007', default: 'true' } ]},on:{\"publishXml\":_vm.save}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"is-relative\",style:({\n    'min-width': _vm.windowWidth + 'px',\n    width: _vm.windowWidth + 'px',\n  }),attrs:{\"id\":\"box\"}},[_c('div',{ref:\"osd\",staticClass:\"is-relative has-background-dark\",attrs:{\"id\":\"osd\"}}),_c('div',{attrs:{\"id\":\"navigator-overlay\"}},[_c('div',{staticStyle:{\"margin-top\":\"2px\"}},[_c('b-tooltip',{attrs:{\"position\":\"is-left\",\"label\":_vm.$t('Increase zoom level')}},[_c('b-button',{on:{\"click\":_vm.zoomIn}},[_c('b-icon',{staticClass:\"button-icon\",attrs:{\"icon\":\"plus-box-outline\"}})],1)],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-left\",\"label\":_vm.$t('Decrease zoom level')}},[_c('b-button',{on:{\"click\":_vm.zoomOut}},[_c('b-icon',{staticClass:\"button-icon\",attrs:{\"icon\":\"minus-box-outline\"}})],1)],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-left\",\"label\":_vm.$t('Center')}},[_c('b-button',{on:{\"click\":_vm.setHome}},[_c('b-icon',{staticClass:\"button-icon\",attrs:{\"icon\":\"image-filter-center-focus\"}})],1)],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-left\",\"label\":_vm.$t('Fit to width')}},[_c('b-button',{on:{\"click\":_vm.fitToWidth}},[_c('b-icon',{staticClass:\"button-icon\",attrs:{\"icon\":\"arrow-left-right\"}})],1)],1)],1)]),_c('div',{attrs:{\"id\":\"editor-overlay\"}},[_c('div',{staticStyle:{\"margin-bottom\":\"20px\"}},[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Save')}},[_c('b-button',{staticClass:\"editor-button\",staticStyle:{\"background-color\":\"#48c774\"},attrs:{\"icon-left\":\"content-save\"},on:{\"click\":_vm.save}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Selection Mode')}},[_c('b-button',{staticClass:\"editor-button\",style:(_vm.getButtonStyle(_vm.Editor.BUTTON.POINTER)),attrs:{\"id\":\"pointer\"},on:{\"click\":function($event){return _vm.buttonClick(_vm.Editor.BUTTON.POINTER)}}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Add Line')}},[_c('b-button',{staticClass:\"editor-button\",style:(_vm.getButtonStyle(_vm.Editor.BUTTON.ADD_BASELINES)),attrs:{\"id\":\"add-textline\"},on:{\"click\":function($event){return _vm.buttonClick(_vm.Editor.BUTTON.ADD_BASELINES)}}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Add Region')}},[_c('b-button',{staticClass:\"editor-button\",style:(_vm.getButtonStyle(_vm.Editor.BUTTON.ADD_REGIONS)),attrs:{\"id\":\"add-textregion\"},on:{\"click\":function($event){return _vm.buttonClick(_vm.Editor.BUTTON.ADD_REGIONS)}}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Add Table')}},[_c('b-button',{staticClass:\"editor-button\",style:(_vm.getButtonStyle(_vm.Editor.BUTTON.ADD_TABLES)),attrs:{\"id\":\"add-table\"},on:{\"click\":function($event){return _vm.buttonClick(_vm.Editor.BUTTON.ADD_TABLES)}}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Undo')}},[_c('b-button',{staticClass:\"editor-button\",attrs:{\"icon-left\":\"undo\",\"id\":\"undo-button\"},on:{\"click\":function($event){return _vm.buttonClick(_vm.Editor.BUTTON.UNDO)}}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Redo')}},[_c('b-button',{staticClass:\"editor-button\",attrs:{\"icon-left\":\"redo\",\"id\":\"redo-button\"},on:{\"click\":function($event){return _vm.buttonClick(_vm.Editor.BUTTON.REDO)}}})],1)],1),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('References')}},[_c('b-dropdown',{attrs:{\"position\":\"is-top-right\"},scopedSlots:_vm._u([{key:\"trigger\",fn:function(ref){return [_c('b-button',{staticClass:\"editor-button\",attrs:{\"icon-left\":\"message-outline\",\"id\":\"shortcut-button\"}})]}}])},[_c('b-dropdown-item',{attrs:{\"custom\":true}},[_c('div',{staticClass:\"description\"},[_c('span',{style:({ 'margin-bottom': '10px' })},[_vm._v(_vm._s(((_vm.$t('References')) + \":\")))]),_c('ul',_vm._l((_vm.instructions),function(shortcut){return _c('li',{key:shortcut.string},[_c('span',{domProps:{\"innerHTML\":_vm._s(shortcut.string)}})])}),0)])])],1)],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Settings')}},[_c('b-button',{staticClass:\"editor-button\",attrs:{\"icon-left\":\"cogs\",\"id\":\"settings-button\"},on:{\"click\":_vm.openSettingsModal}})],1)],1),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-bottom\",\"label\":_vm.$t('Layout'),\"id\":\"tree-dropdown\"}},[_c('b-dropdown',{attrs:{\"position\":\"is-bottom-right\",\"can-close\":false},on:{\"active-change\":function (open) {\n              _vm.treeOpen = open\n            }},scopedSlots:_vm._u([{key:\"trigger\",fn:function(ref){return [_c('b-button',{staticClass:\"editor-button\",attrs:{\"icon-left\":\"format-list-bulleted-square\",\"id\":\"layout-button\"},on:{\"click\":_vm.fetchLayout}})]}}])},[_c('b-dropdown-item',{attrs:{\"custom\":true}},[_c('LayoutTree',{ref:\"layoutTree\",attrs:{\"initData\":_vm.layout,\"settings\":_vm.settings,\"isOpen\":_vm.treeOpen}})],1)],1)],1)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _ from 'lodash'\n\nvar Singleton = (function () {\n  var instance\n\n  function createInstance() {\n    var object = new ActionHandler()\n    return object\n  }\n\n  return {\n    instance: function () {\n      if (!instance) {\n        instance = createInstance()\n      }\n      return instance\n    },\n  }\n})()\n\nfunction ActionHandler() {\n  this.actionStack = [{}]\n  this.actionIndex = 0\n  this.setEdited = function () {}\n}\n\nconst ACTION_TYPE = Object.freeze({\n  ADD_POINT: 1,\n  REMOVE_POINT: 2,\n  MOVE_POINT: 3,\n  MOVE_SHAPE: 4,\n  MULTI_ACTION: 11,\n  REMOVE_SHAPE: 12,\n  ADD_SHAPE: 13,\n  ADD_TABLE_COLUM: 14,\n  REMOVE_TABLE_COLUM: 15,\n  ADD_TABLE_ROW: 16,\n  REMOVE_TABLE_ROW: 17,\n  ADD_CELL: 18,\n  REMOVE_CELL: 19,\n  CHANGE_CELL_SPAN: 20,\n  CHANGE_PARENT: 21,\n  MOVE_SHAPE_WITH_VECTOR: 22,\n  SET_STRUCTUR_TYPE: 23,\n  CHANGE_READING_ORDER: 24,\n  POSITION_MOVE: 25,\n  ADD_RELATION: 26,\n  REMOVE_RELATION: 27,\n  UPDATE_RELATION_IDS: 28,\n})\n\nconst SELECTION_TYPE = Object.freeze({\n  ADD: 1,\n  REMOVE: 2,\n  CLEAR: 3,\n})\n\nActionHandler.prototype.getActionType = function (action) {\n  if (action == null || _.isEmpty(action)) {\n    warn('Action is invalid!')\n    return\n  }\n  return Object.entries(ACTION_TYPE).find(\n    ([_, number]) => number === action.type\n  )[0]\n}\n\nActionHandler.prototype.getSelectionType = function (selection) {\n  if (selection == null) {\n    warn('Selection is invalid!')\n    return\n  }\n  return Object.entries(SELECTION_TYPE).find(\n    ([_, number]) => number === selection.type\n  )[0]\n}\n\nActionHandler.prototype.logAction = function (action) {\n  const transformActionType = (action) => {\n    const newAction = { ...action }\n    log(newAction)\n    newAction.type = this.getActionType(newAction)\n    if ('actions' in newAction) {\n      newAction.actions = newAction.actions.map((a) => transformActionType(a))\n    }\n    return newAction\n  }\n  protocolLog(\n    `%caction performed: %o`,\n    'color: yellow',\n    transformActionType(action)\n  )\n}\n\nActionHandler.prototype.redo = function () {\n  if (this.actionIndex < this.actionStack.length - 1) {\n    this.actionIndex++\n    let nextAction = this.actionStack[this.actionIndex]\n    if (this.actionIndex === 1) {\n      this.setEdited(true)\n    }\n    this.doAction(nextAction)\n  }\n}\n\nActionHandler.prototype.undo = function () {\n  if (this.actionIndex > 0) {\n    let lastAction = this.actionStack[this.actionIndex]\n    this.actionIndex--\n    if (this.actionIndex === 0) {\n      this.setEdited(false)\n    }\n    const reversedAction = this.reverse(lastAction)\n    this.doAction(reversedAction)\n  }\n}\n\nActionHandler.prototype.doAction = function (action) {\n  this.logAction(action)\n  this.editor.performAction(action)\n  this.editor.vueFunctions.performAction(action)\n}\n\nActionHandler.prototype.addAction = function (action) {\n  if (this.actionIndex + 1 < this.actionStack.length) {\n    this.actionStack = this.actionStack.slice(0, this.actionIndex + 1)\n  }\n  this.actionStack.push(action)\n  this.actionIndex = this.actionStack.length - 1\n  if (this.actionIndex === 1) {\n    this.setEdited(true)\n  }\n}\n\nActionHandler.prototype.select = function (selection) {\n  protocolLog(\n    `%cselection performed: ${this.getSelectionType(selection)} %o`,\n    'color: orange',\n    selection\n  )\n  this.editor.performSelection(selection)\n  this.editor.vueFunctions.performSelection(selection)\n}\n\nActionHandler.prototype.reverse = function (action) {\n  switch (action.type) {\n    case ACTION_TYPE.ADD_SHAPE:\n      return {\n        type: ACTION_TYPE.REMOVE_SHAPE,\n        index: action.index,\n        shape: action.shape,\n        parent_id: action.parent_id,\n      }\n    case ACTION_TYPE.REMOVE_SHAPE:\n      return {\n        type: ACTION_TYPE.ADD_SHAPE,\n        index: action.index,\n        shape: action.shape,\n        parent_id: action.parent_id,\n      }\n    case ACTION_TYPE.ADD_POINT:\n      return {\n        type: ACTION_TYPE.REMOVE_POINT,\n        shape_id: action.shape_id,\n        point_id: action.point_id,\n        point_index: action.point_index,\n      }\n    case ACTION_TYPE.REMOVE_POINT:\n      return {\n        type: ACTION_TYPE.ADD_POINT,\n        shape_id: action.shape_id,\n        point_id: action.point_id,\n        point_index: action.point_index,\n      }\n    case ACTION_TYPE.MOVE_POINT:\n      return {\n        type: ACTION_TYPE.MOVE_POINT,\n        shape_id: action.shape_id,\n        point_id: action.point_id,\n        old_coords: action.new_coords,\n        new_coords: action.old_coords,\n      }\n    case ACTION_TYPE.MOVE_SHAPE:\n      return {\n        type: ACTION_TYPE.MOVE_SHAPE,\n        shape_id: action.shape_id,\n        old_coords: action.new_coords,\n        new_coords: action.old_coords,\n      }\n    case ACTION_TYPE.MULTI_ACTION:\n      return {\n        type: ACTION_TYPE.MULTI_ACTION,\n        shape_id: action.shape_id,\n        actions: action.actions.map((action) => this.reverse(action)).reverse(),\n      }\n    case ACTION_TYPE.ADD_TABLE_COLUM:\n      return {\n        type: ACTION_TYPE.REMOVE_TABLE_COLUM,\n        shape_id: action.shape_id,\n        col_index: action.col_index,\n      }\n    case ACTION_TYPE.REMOVE_TABLE_COLUM:\n      return {\n        type: ACTION_TYPE.ADD_TABLE_COLUM,\n        shape_id: action.shape_id,\n        col_index: action.col_index,\n      }\n    case ACTION_TYPE.ADD_TABLE_ROW:\n      return {\n        type: ACTION_TYPE.REMOVE_TABLE_ROW,\n        shape_id: action.shape_id,\n        row_index: action.row_index,\n      }\n    case ACTION_TYPE.REMOVE_TABLE_ROW:\n      return {\n        type: ACTION_TYPE.ADD_TABLE_ROW,\n        shape_id: action.shape_id,\n        row_index: action.row_index,\n      }\n    case ACTION_TYPE.ADD_CELL:\n      return {\n        type: ACTION_TYPE.REMOVE_CELL,\n        shape_id: action.shape_id,\n        table: action.table,\n        cell: action.cell,\n        row: action.row,\n        col: action.col,\n      }\n    case ACTION_TYPE.REMOVE_CELL:\n      return {\n        type: ACTION_TYPE.ADD_CELL,\n        shape_id: action.shape_id,\n        table: action.table,\n        cell: action.cell,\n        row: action.row,\n        col: action.col,\n      }\n    case ACTION_TYPE.CHANGE_CELL_SPAN:\n      return {\n        type: ACTION_TYPE.CHANGE_CELL_SPAN,\n        shape_id: action.shape_id,\n        cell_id: action.cell_id,\n        old_row_span: action.new_row_span,\n        old_col_span: action.new_col_span,\n        new_row_span: action.old_row_span,\n        new_col_span: action.old_col_span,\n      }\n    case ACTION_TYPE.CHANGE_PARENT:\n      return {\n        type: ACTION_TYPE.CHANGE_PARENT,\n        shape_count: action.shape_count,\n        old_parent_id: action.new_parent_id,\n        new_parent_id: action.old_parent_id,\n        old_index: action.new_index,\n        new_index: action.old_index,\n      }\n    case ACTION_TYPE.MOVE_SHAPE_WITH_VECTOR:\n      return {\n        type: ACTION_TYPE.MOVE_SHAPE_WITH_VECTOR,\n        shape_id: action.shape_id,\n        vector: { x: action.vector.x * -1, y: action.vector.y * -1 },\n      }\n    case ACTION_TYPE.SET_STRUCTUR_TYPE:\n      return {\n        type: ACTION_TYPE.SET_STRUCTUR_TYPE,\n        shape_id: action.shape_id,\n        old_type: action.new_type,\n        new_type: action.old_type,\n      }\n    case ACTION_TYPE.CHANGE_READING_ORDER:\n      return {\n        type: ACTION_TYPE.CHANGE_READING_ORDER,\n        shape_id: action.shape_id,\n        old_index: action.new_index,\n        new_index: action.old_index,\n      }\n    case ACTION_TYPE.POSITION_MOVE:\n      return {\n        type: ACTION_TYPE.POSITION_MOVE,\n        shape_id: action.shape_id,\n        distance: -action.distance,\n      }\n    case ACTION_TYPE.ADD_RELATION:\n      return {\n        type: ACTION_TYPE.REMOVE_RELATION,\n        relation: action.relation,\n      }\n    case ACTION_TYPE.REMOVE_RELATION:\n      return {\n        type: ACTION_TYPE.ADD_RELATION,\n        relation: action.relation,\n      }\n  }\n}\n\nActionHandler.prototype.reset = function (setEdited, editor) {\n  this.editor = editor\n  this.setEdited = setEdited\n  this.setEdited(false)\n  this.actionStack = [{}]\n  this.actionIndex = 0\n}\n\nexport { Singleton, ACTION_TYPE, SELECTION_TYPE }\n","var Singleton = (function () {\n  var instance\n\n  function createInstance() {\n    var object = new IdHandler()\n    return object\n  }\n\n  return {\n    instance: function () {\n      if (!instance) {\n        instance = createInstance()\n      }\n      return instance\n    },\n  }\n})()\n\nfunction IdHandler() {\n  this.idCounter = 100\n  this.ids = []\n}\n\nIdHandler.prototype.get = function (id = '') {\n  // const newId = this.generateNew(prefix)\n  // this.ids.push(newId)\n  // protocolLog(`%cid registered: ${newId}`, 'color: aqua')\n  // return newId\n  this.requestId(id)\n}\n\nIdHandler.prototype.extendId = function (id) {\n  this.idCounter++\n  const newId = `${id}_${this.idCounter}`\n  if (this.ids.includes(newId)) {\n    return this.extendId(id)\n  }\n  this.ids.push(newId)\n  return newId\n}\n\n// IdHandler.prototype.register = function (id) {\n//   protocolLog(`%cid registered: ${id}`, 'color: aqua')\n//   if (this.ids.includes(id)) {\n//     warn('Error: Id already exists')\n//   } else {\n//     this.ids.push(id)\n//   }\n// }\n\nIdHandler.prototype.requestId = function (id) {\n  //protocolLog(`%cid requested: ${id}`, 'color: aqua')\n  if (!this.ids.includes(id)) {\n    this.ids.push(id)\n    return id\n  }\n  const newId = this.extendId(id)\n  //protocolLog(`%cid extended to: ${newId}`, 'color: aliceblue')\n  return newId\n}\n\nexport { Singleton }\n","export const DEFAULT_SETTINGS = {\n  showStructureTypes: false,\n  showReadingOrder: false,\n  showRelations: true,\n  showRegions: true,\n  showBaselines: true,\n  showWords: false,\n  structureTypeSize: 15,\n  splitLineAngle: 0,\n  reeShowTextOnly: false,\n  treeExpand: false,\n  circleSize: 4,\n}\n\nexport const REGION_COLOR = 'green'\nexport const BASELINE_COLOR = 'blue'\nexport const TABLE_COLOR = 'yellow'\nexport const CELL_COLOR = 'orange'\nexport const WORD_COLOR = 'pink'\n","import { DEFAULT_SETTINGS } from '../editor-config.js'\nvar Singleton = (function () {\n  var instance\n\n  function createInstance() {\n    var object = new Settings()\n    return object\n  }\n\n  return {\n    instance: function () {\n      if (!instance) {\n        instance = createInstance()\n      }\n      return instance\n    },\n  }\n})()\n\nfunction Settings() {\n  this.settings = { ...DEFAULT_SETTINGS }\n\n  this.structureTypes = []\n\n  this.eventHandlers = {\n    update: [],\n  }\n}\n\nSettings.prototype.set = function (settings) {\n  // console.log(settings)\n  if (settings == null) return\n  this.settings = { ...this.settings, ...settings }\n  protocolLog(`%csetting changed: %o`, 'color: purple', settings)\n  this.emit('update', this.settings)\n}\n\nSettings.prototype.reset = function (key) {\n  if (this.settings[key] == null) return\n  this.settings[key] = DEFAULT_SETTINGS[key]\n}\n\nSettings.prototype.get = function (key) {\n  if (key == null) return\n  return this.settings[key]\n}\n\nSettings.prototype.getAll = function () {\n  return { ...this.settings }\n}\n\nSettings.prototype.on = function (key, handler) {\n  // console.log('register')\n  this.eventHandlers[key].push(handler)\n}\n\nSettings.prototype.emit = function (key, event) {\n  this.eventHandlers[key].map((h) => h(event))\n}\n\nexport { Singleton }\n","import {\n  lineAngle,\n  lineMidpoint,\n  pointTranslate,\n  lineLength,\n  polygonMean,\n  polygonBounds,\n  polygonHull,\n  polygonScale,\n  lineInterpolate,\n} from 'geometric'\nimport offset from 'polygon-offset'\nimport { Singleton as IdHandler } from './singletons/IdHandler.js'\nimport { Singleton as Settings } from './singletons/settings.js'\n\nvar Singleton = (function () {\n  var instance\n\n  function createInstance() {\n    var object = new MyFabric()\n    return object\n  }\n\n  return {\n    instance: function () {\n      if (!instance) {\n        instance = createInstance()\n      }\n      return instance\n    },\n  }\n})()\n\nfunction MyFabric() {\n  this.scaleFactor = null\n  this.idHandler = IdHandler.instance()\n  this.settings = Settings.instance()\n}\n\nMyFabric.prototype.init = function (scale, tileSourceWidth) {\n  //console.log(tileSourceWidth)\n  this.scaleFactor = scale\n  this.circleRadius = 4\n  this.largeCircleRadius = 6\n  this.vertexRadius = 1\n  this.wordBackground = 'rgba(255,165,0,0.2)'\n  this.wordLineColor = 'rgb(255,165,0)'\n  this.baselineColor = 'blue'\n  this.tableColor = 'orange'\n  this.regionColor = 'green'\n  this.defaultVertexColor = 'white'\n  this.selectedVertexColor = 'yellow'\n  this.deleteColor = 'red'\n}\n\nMyFabric.prototype.getRelationBubble = function (vertices, type) {\n  const points = vertices.map(({ left, top }) => [left, top])\n  const hull = polygonScale(polygonHull(points), 1.5)\n  const coords = hull.map(([x, y]) => ({ x, y }))\n  coords.push(coords[0])\n\n  const size = this.settings.get('structureTypeSize')\n\n  const topLeft = this.getTopLeft(\n    coords.map(({ x, y }) => ({ left: x, top: y }))\n  )\n  const left = topLeft.left + Math.sqrt(size) * this.scaleFactor\n  const top = topLeft.top + Math.sqrt(size) * this.scaleFactor\n\n  return [\n    new fabric.Polyline(coords, {\n      strokeWidth: 1,\n      originX: 'center',\n      originY: 'center',\n      stroke: 'white',\n      fill: 'transparent',\n      selectable: false,\n      evented: false,\n    }),\n    new fabric.Text(type, {\n      originX: 'left',\n      originY: 'top',\n      fontSize: size,\n      fill: 'black',\n      backgroundColor: 'rgba(255,255,255,0.8)',\n      evented: false,\n      left,\n      top,\n    }),\n  ]\n}\n\nMyFabric.prototype.getWordCircle = function (\n  x,\n  y,\n  id = this.idHandler.requestId('c')\n) {\n  const circleSize = this.settings.get('circleSize')\n  return new fabric.Circle({\n    radius: circleSize,\n    fill: this.defaultVertexColor,\n    strokeWidth: this.vertexRadius,\n    stroke: this.baselineColor,\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    id: id,\n    defaultRadius: circleSize,\n    defaultColor: this.defaultVertexColor,\n    selectedColor: this.baselineColor,\n  })\n}\n\nMyFabric.prototype.getWordPolyLine = function (coords, id) {\n  // const coordsAsArray = coords.map(({ x, y }) => [x, y])\n\n  coords.push(coords[0])\n  return new fabric.Polyline(coords, {\n    strokeWidth: 1,\n    originX: 'center',\n    originY: 'center',\n    stroke: this.wordLineColor,\n    selectable: false,\n    evented: false,\n    id,\n    color: this.wordBackground,\n  })\n}\n\nMyFabric.prototype.getBaselineCircle = function (\n  x,\n  y,\n  id = this.idHandler.requestId('c')\n) {\n  const circleSize = this.settings.get('circleSize')\n  return new fabric.Circle({\n    radius: circleSize,\n    fill: this.defaultVertexColor,\n    strokeWidth: this.vertexRadius,\n    stroke: this.baselineColor,\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    id: id,\n    defaultRadius: circleSize,\n    defaultColor: this.defaultVertexColor,\n    selectedColor: this.baselineColor,\n  })\n}\n\nMyFabric.prototype.getPolygon = function (points, initId) {\n  let polyline = this.getPolyline(points)\n  polyline.reverse()\n  polyline = points.concat(polyline)\n\n  let fpointsOffset = polyline.map((p) => ({ x: p[0], y: p[1] }))\n\n  return {\n    polygon: new fabric.Polyline(fpointsOffset, {\n      strokeWidth: 0,\n      originX: 'center',\n      originY: 'center',\n      stroke: this.baselineColor,\n      fill: this.baselineColor,\n      opacity: 0.2,\n      selectable: false,\n      evented: false,\n      id: initId,\n      defaultColor: this.baselineColor,\n      deleteColor: this.deleteColor,\n    }),\n    polyCoords: polyline,\n  }\n}\n\nMyFabric.prototype.getLineElements = function (points, initId) {\n  let line = {}\n  let arrows = []\n\n  let pointObjects = points.map((p) => ({ x: p[0], y: p[1] }))\n\n  line = new fabric.Polyline(pointObjects, {\n    strokeWidth: 1,\n    stroke: 'blue',\n    fill: 'transparent',\n    selectable: false,\n    evented: false,\n    id: initId,\n  })\n\n  if (points.length > 0) {\n    points.reduce((first, second) => {\n      let line = [first, second]\n\n      let angle = lineAngle(line)\n      let midPoint = lineMidpoint(line)\n      let arrow = this.getArrow(midPoint[0], midPoint[1], angle, initId)\n      arrows.push(arrow)\n      return second\n    })\n  }\n  return { line: line, arrows: arrows }\n}\n\nMyFabric.prototype.getPolyline = function (points) {\n  // const areEqual = (points) => {\n  //   let equal = true\n  //   points.reduce((first, second) => {\n  //     if (JSON.stringify(first) != JSON.stringify(second)) {\n  //       equal = false\n  //     }\n  //     return second\n  //   })\n  //   return equal\n  // }\n  if (points.length <= 1) {\n    return []\n  }\n  let lines = []\n  let polyLine = []\n  let initDistance = 30 * this.scaleFactor\n\n  const degreeMinusdegree = (first, second) => {\n    let result = first - second\n    if (result < 0) {\n      result = 360 + result\n    }\n    return result\n  }\n  const drawTranslatedMidPoints = (line, degree) => {\n    let distance = initDistance\n\n    //this makes corners smoother\n    if (degree < 135) {\n      let distFactor = Math.pow(-(degree / 135 - 1), 1)\n      distance = distance + distance * distFactor\n    }\n    if (degree > 225) {\n      let distFactor = Math.pow(-(225 / degree - 1), 0.5)\n      distance = distance + distance * distFactor\n    }\n\n    degree = degree / 2\n\n    let angle = lineAngle(line)\n    let pointAngle = degreeMinusdegree(angle, degree)\n    let startPoint = line[0]\n    let translatedPoint = pointTranslate(startPoint, pointAngle, distance)\n    polyLine.push(translatedPoint)\n  }\n\n  const drawTranslatedStartPoint = (line) => {\n    let angle = lineAngle(line)\n    let pointAngle = degreeMinusdegree(angle, 90)\n    let startPoint = line[0]\n    let translatedPoint = pointTranslate(startPoint, pointAngle, initDistance)\n    polyLine.push(translatedPoint)\n  }\n\n  const drawTranslatedEndPoint = (line) => {\n    let angle = lineAngle(line)\n    let pointAngle = degreeMinusdegree(angle, 90)\n    let startPoint = line[1]\n    let translatedPoint = pointTranslate(startPoint, pointAngle, initDistance)\n    polyLine.push(translatedPoint)\n  }\n\n  points.reduce((first, second) => {\n    lines.push([first, second])\n    return second\n  })\n\n  //draw first\n  drawTranslatedStartPoint(lines[0])\n\n  //drawMidpoints starting with the second line (the degree to the previous line is passed)\n  lines.reduce((first, second) => {\n    let degreeFirstToSecond = degreeMinusdegree(\n      degreeMinusdegree(lineAngle(second), lineAngle(first)),\n      180\n    )\n    drawTranslatedMidPoints(second, degreeFirstToSecond)\n\n    return second\n  })\n\n  //draw last\n  drawTranslatedEndPoint(lines[lines.length - 1])\n\n  return polyLine\n}\n\nMyFabric.prototype.getRegionCircle = function (\n  x,\n  y,\n  id = this.idHandler.requestId('c')\n) {\n  const circleSize = this.settings.get('circleSize')\n  return new fabric.Circle({\n    radius: circleSize,\n    fill: this.defaultVertexColor,\n    strokeWidth: this.vertexRadius,\n    stroke: this.regionColor,\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    id: id,\n    defaultRadius: circleSize,\n    defaultColor: this.defaultVertexColor,\n    selectedColor: this.regionColor,\n  })\n}\n\nMyFabric.prototype.getRegionBackground = function (points, initId) {\n  points.push(points[0])\n\n  let line = new fabric.Polyline(points, {\n    strokeWidth: 0,\n    fill: 'green',\n    opacity: 0.2,\n    selectable: false,\n    evented: false,\n    id: initId,\n    defaultColor: this.regionColor,\n    deleteColor: this.deleteColor,\n  })\n  return line\n}\n\nMyFabric.prototype.getRegionLine = function (points, initId) {\n  points.push(points[0])\n\n  let line = new fabric.Polyline(points, {\n    strokeWidth: 1,\n    stroke: 'green',\n    fill: 'transparent',\n    opacity: 1,\n    selectable: false,\n    evented: false,\n    id: initId,\n  })\n  return line\n}\n\nMyFabric.prototype.getRunningCircle = function (x, y) {\n  const circleSize = this.settings.get('circleSize')\n  return new fabric.Circle({\n    radius: circleSize,\n    fill: 'blue',\n    strokeWidth: 0.6,\n    stroke: 'black',\n    opacity: 0.2,\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    hoverCursor: 'pointer',\n    moveCursor: 'grabbing',\n  })\n}\n\nMyFabric.prototype.getTableCircle = function (\n  x,\n  y,\n  id = this.idHandler.requestId('c')\n) {\n  const circleSize = this.settings.get('circleSize')\n  return new fabric.Circle({\n    radius: circleSize,\n    fill: this.defaultVertexColor,\n    strokeWidth: this.vertexRadius,\n    stroke: this.tableColor,\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    id: id,\n    padding: 5,\n    defaultRadius: circleSize,\n    defaultColor: this.defaultVertexColor,\n    selectedColor: this.baselineColor,\n  })\n}\n\nMyFabric.prototype.getHoverLine = function (\n  vertices,\n  id = this.idHandler.requestId('hl'),\n  vertical\n) {\n  return new fabric.Polyline(\n    vertices.map((c) => ({ x: c.left, y: c.top })),\n    {\n      id: id,\n      strokeWidth: 3,\n      originX: 'center',\n      originY: 'center',\n      stroke: 'black',\n      padding: 20,\n      fill: 'transparent',\n      opacity: 0.6,\n      hasControls: false,\n      hasBorders: false,\n      lockMovementX: !vertical,\n      lockMovementY: vertical,\n      evented: true,\n      hoverCursor: vertical ? 'col-resize' : 'row-resize',\n      vertices: vertices,\n    }\n  )\n}\n\nMyFabric.prototype.getCellBackground = function (points, color, opacity) {\n  return new fabric.Polyline(points, {\n    strokeWidth: 0,\n    fill: color,\n    opacity: opacity,\n    selectable: false,\n    evented: false,\n  })\n}\n\nMyFabric.prototype.getCellFrame = function (points) {\n  points.push(points[0])\n  return new fabric.Polyline(points, {\n    strokeWidth: 1.5,\n    opacity: 0.8,\n    stroke: 'orange',\n    fill: 'transparent',\n    selectable: false,\n    evented: false,\n  })\n}\n\nMyFabric.prototype.getStructureText = function (type, vertices, shapeType) {\n  const polygon = vertices.map(({ left, top }) => [left, top])\n  const color = this.settings.structureTypes.find((t) => t.name === type)?.color\n\n  if (polygon.length === 2) {\n    const newPoint = [polygon[0][0] + 0.1, polygon[0][1] + 0.1]\n    polygon.push(newPoint)\n  }\n  const topLeft = this.getTopLeft(vertices)\n\n  const size = this.settings.get('structureTypeSize')\n  const left = topLeft.left + Math.sqrt(size) * this.scaleFactor\n  const top = topLeft.top + Math.sqrt(size) * this.scaleFactor\n\n  if (type == null) return\n\n  return new fabric.Text(type, {\n    originX: 'left',\n    originY: 'top',\n    fontSize: size,\n    fill: color,\n    // backgroundColor:\n    //   shapeType === 'Baseline'\n    //     ? 'rgba(0, 0, 255, 0.2)'\n    //     : shapeType === 'Region'\n    //     ? 'rgba(0, 128, 0, 0.2)'\n    //     : shapeType === 'Table'\n    //     ? 'rgba(249, 180, 45, 0.2)'\n    //     : 'rgba(255,255, 0, 0.2)',\n    backgroundColor: 'rgba(255,255,255,0.8)',\n    evented: false,\n    // left: topLeft[0][0],\n    // top: topLeft[0][1] - 30 * this.scaleFactor,\n    left,\n    top,\n  })\n}\n\nMyFabric.prototype.getROText = function (roIndex, vertices, shapeType) {\n  const polygon = vertices.map(({ left, top }) => [left, top])\n\n  if (polygon.length === 2) {\n    const newPoint = [polygon[0][0] + 0.1, polygon[0][1] + 0.1]\n    polygon.push(newPoint)\n  }\n  //const topLeft = polygonBounds(polygon)\n\n  const topLeft = this.getTopLeft(vertices)\n\n  const size = this.settings.get('structureTypeSize')\n  const left = topLeft.left - Math.sqrt(size) * this.scaleFactor\n  const top = topLeft.top + Math.sqrt(size) * this.scaleFactor\n\n  if (roIndex == null) return\n\n  const indexInt = parseInt(roIndex) + 1\n\n  return new fabric.Text(indexInt.toString(), {\n    originX: 'right',\n    originY: 'top',\n    fontSize: size,\n    fill: 'black',\n    backgroundColor: 'white',\n    // backgroundColor:\n    //   shapeType === 'Baseline'\n    //     ? 'rgba(0, 0, 255, 0.2)'\n    //     : shapeType === 'Region'\n    //     ? 'rgba(0, 128, 0, 0.2)'\n    //     : 'rgba(249, 180, 45, 0.2)',\n    evented: false,\n    //left: topLeft[0][0],\n    //top: topLeft[0][1] - 30 * this.scaleFactor - 25,\n    left,\n    top,\n  })\n}\n\nMyFabric.prototype.getTopLeft = function (vertices) {\n  return vertices.reduce((acc, v) =>\n    Math.abs(acc.left) + Math.abs(acc.top) > Math.abs(v.left) + Math.abs(v.top)\n      ? v\n      : acc\n  )\n}\n// MyFabric.prototype.getHorizontalTableLine = function (circles) {\n//   return new fabric.Polyline(\n//     circles.map((c) => ({ x: c.left, y: c.top })),\n//     {\n//       id: this.idHandler.get(),\n//       strokeWidth: 1,\n//       originX: 'center',\n//       originY: 'center',\n//       stroke: 'red',\n//       padding: 20,\n//       fill: 'transparent',\n//       opacity: 0.5,\n//       hasControls: false,\n//       lockMovementX: true,\n//       evented: false,\n//       hasBorders: false,\n//       hoverCursor: 'row-resize',\n//     }\n//   )\n// }\n\n// MyFabric.prototype.getTableLine = function (circles) {\n//   return new fabric.Polyline(\n//     circles.map((c) => ({ x: c.left, y: c.top })),\n//     {\n//       strokeWidth: 1,\n//       originX: 'center',\n//       originY: 'center',\n//       stroke: 'red',\n//       fill: 'transparent',\n//       opacity: 0.5,\n//       hasControls: false,\n//       evented: false,\n//       hasBorders: false,\n//     }\n//   )\n// }\n\n// MyFabric.prototype.getTableBackground = function (midPoint, width, height) {\n//   let rect = new fabric.Rect({\n//     id: this.idHandler.get(),\n//     left: midPoint[0],\n//     top: midPoint[1],\n//     width: width,\n//     height: height,\n//     originX: 'center',\n//     originY: 'center',\n//     strokeWidth: 0,\n//     fill: 'yellow',\n//     opacity: 0.1,\n//     selectable: false,\n//     evented: false,\n//   })\n//   return rect\n// }\n\n// MyFabric.prototype.getTableCornerPoints = function (frameCoords) {\n//   const updateLine = (circle, neighbor) => {\n//     let distLine = [\n//       [circle.left, circle.top],\n//       [neighbor.circle.left, neighbor.circle.top],\n//     ]\n//     if (neighbor.line.isVertical) {\n//       neighbor.line.set({\n//         height: lineLength(distLine),\n//         top: lineMidpoint(distLine)[1],\n//       })\n//     } else {\n//       neighbor.line.set({\n//         width: lineLength(distLine),\n//         left: lineMidpoint(distLine)[0],\n//       })\n//     }\n//     neighbor.relation = getLineCircleRelation(circle, neighbor.line)\n//   }\n\n//   const getLineCircleRelation = (circle, line) => {\n//     let circleMatrix = circle.calcTransformMatrix()\n//     let inverseLineMatrix = fabric.util.invertTransform(\n//       line.calcTransformMatrix()\n//     )\n//     return fabric.util.multiplyTransformMatrices(\n//       inverseLineMatrix,\n//       circleMatrix\n//     )\n//   }\n\n//   let circles = frameCoords.map(\n//     (coord) =>\n//       new fabric.Circle({\n//         id: this.idHandler.get(),\n//         radius: 5,\n//         fill: 'black',\n//         strokeWidth: 1,\n//         stroke: 'black',\n//         left: coord.x,\n//         top: coord.y,\n//         originX: 'center',\n//         originY: 'center',\n//         hasControls: false,\n//         hasBorders: false,\n//         update: function () {\n//           updateLine(this, this.ancestor)\n//           updateLine(this, this.successor)\n//         },\n//         ancestor: {\n//           circle: {},\n//           line: {},\n//           relation: {},\n//         },\n//         successor: {\n//           circle: {},\n//           line: {},\n//           relation: {},\n//         },\n//       })\n//   )\n//   circles.map((circle, index) => {\n//     circle.ancestor.circle =\n//       circles[index - 1 >= 0 ? index - 1 : circles.length - 1]\n//     circle.successor.circle =\n//       circles[index + 1 <= circles.length - 1 ? index + 1 : 0]\n\n//     // circle.on('moved', function () {\n//     //   console.log('moved!')\n//     //   updateLine(this, this.ancestor)\n//     //   updateLine(this, this.successor)\n//     // })\n//   })\n//   return circles\n// }\n\n// MyFabric.prototype.getTableFrameLines = function (cornerPoints) {\n//   const getLineCircleRelation = (circle, line) => {\n//     let circleMatrix = circle.calcTransformMatrix()\n//     let inverseLineMatrix = fabric.util.invertTransform(\n//       line.calcTransformMatrix()\n//     )\n//     return fabric.util.multiplyTransformMatrices(\n//       inverseLineMatrix,\n//       circleMatrix\n//     )\n//   }\n\n//   const updateLine = (circle, neighbor) => {\n//     let distLine = [\n//       [circle.left, circle.top],\n//       [neighbor.circle.left, neighbor.circle.top],\n//     ]\n//     if (neighbor.line.isVertical) {\n//       neighbor.line.set({\n//         height: lineLength(distLine),\n//         top: lineMidpoint(distLine)[1],\n//       })\n//     } else {\n//       neighbor.line.set({\n//         width: lineLength(distLine),\n//         left: lineMidpoint(distLine)[0],\n//       })\n//     }\n//     neighbor.relation = getLineCircleRelation(circle, neighbor.line)\n//   }\n\n//   const moveWithLine = (circle, line, relation) => {\n//     let circleTransform = fabric.util.multiplyTransformMatrices(\n//       line.calcTransformMatrix(),\n//       relation\n//     )\n//     let decomposed = fabric.util.qrDecompose(circleTransform)\n//     circle.set({\n//       left: decomposed.translateX,\n//       top: decomposed.translateY,\n//     })\n//   }\n\n//   let myFabric = this\n\n//   let pointsForLines = cornerPoints.concat([cornerPoints[0]])\n\n//   let lines = []\n\n//   pointsForLines.reduce((first, second, index) => {\n//     let isVertical = index % 2 === 0\n//     let line = new fabric.Line(\n//       [first.left, first.top, second.left, second.top],\n//       {\n//         strokeWidth: 2,\n//         originX: 'center',\n//         originY: 'center',\n//         fill: 'black',\n//         stroke: 'black',\n//         padding: 10,\n//         hasControls: false,\n//         // selectable: false,\n//         lockMovementX: isVertical ? false : true,\n//         lockMovementY: isVertical ? true : false,\n//         id: this.idHandler.get(),\n//         isVertical: isVertical,\n//       }\n//     )\n//     lines.push(line)\n//     first.successor.line = line\n//     second.ancestor.line = line\n\n//     return second\n//   })\n\n//   cornerPoints.map((p) => {\n//     p.update()\n//   })\n\n//   lines.map((line) => {\n//     line.on('moving', function () {\n//       moveWithLine(p, this, p.ancestor.relation)\n//       updateLine(p, p.successor)\n//     })\n//   })\n\n//   return lines\n\n//   return lines\n// }\n\n// MyFabric.prototype.getVerticalTableLines = function (\n//   seperators,\n//   [topLine, rightLine, bottomLine, leftLine]\n// ) {\n//   let buffer = 5\n\n//   let lines = seperators.map((s) => {\n//     return {\n//       circles: [],\n//       stroke: new fabric.Line(\n//         [s, topLine.stroke.top, s, bottomLine.stroke.top],\n//         {\n//           strokeWidth: 1,\n//           fill: 'blue',\n//           stroke: 'blue',\n//           lockMovementY: true,\n//           padding: 10,\n//         }\n//       ),\n//     }\n//   })\n//   lines.map((line, index) => {\n//     let stroke = line.stroke\n//     stroke.on('moving', function (e) {\n//       let leftBefore = lines[index - 1]?.stroke.left || leftLine.stroke.left\n//       let leftAfter = lines[index + 1]?.stroke.left || rightLine.stroke.left\n\n//       if (stroke.left < leftBefore + buffer) {\n//         this.set('left', leftBefore + buffer)\n//       }\n//       if (stroke.left > leftAfter - buffer) {\n//         this.set('left', leftAfter - buffer)\n//       }\n//     })\n//   })\n//   return lines\n// }\n\n// MyFabric.prototype.getHorizontalTableLines = function (\n//   seperators,\n//   [topLine, rightLine, bottomLine, leftLine]\n// ) {\n//   let buffer = 5\n\n//   let lines = seperators.map((s) => {\n//     return {\n//       circles: [],\n//       stroke: new fabric.Line(\n//         [leftLine.stroke.left, s, rightLine.stroke.left, s],\n//         {\n//           strokeWidth: 1,\n//           fill: 'blue',\n//           stroke: 'blue',\n//           lockMovementX: true,\n//           padding: 10,\n//         }\n//       ),\n//     }\n//   })\n//   lines.map((line, index) => {\n//     let stroke = line.stroke\n//     stroke.on('moving', function (e) {\n//       let topBefore = lines[index - 1]?.stroke.top || topLine.stroke.top\n//       let topAfter = lines[index + 1]?.stroke.top || bottomLine.stroke.top\n\n//       if (stroke.top < topBefore + buffer) {\n//         this.set('top', topBefore + buffer)\n//       }\n//       if (stroke.top > topAfter - buffer) {\n//         this.set('top', topAfter - buffer)\n//       }\n//     })\n//   })\n//   return lines\n// }\n\n// MyFabric.prototype.getInvisibleVertex = function (\n//   x,\n//   y,\n//   id = this.idHandler.get()\n// ) {\n//   return new fabric.Circle({\n//     radius: this.largeCircleRadius,\n//     fill: 'red',\n//     left: x,\n//     top: y,\n//     originX: 'center',\n//     originY: 'center',\n//     hasControls: false,\n//     hasBorders: false,\n//     id: id,\n//     hoverCursor: 'pointer',\n//     moveCursor: 'pointer',\n//   })\n// }\n\nMyFabric.prototype.getArrow = function (\n  x,\n  y,\n  angle,\n  initId,\n  size = 4,\n  color = 'black',\n  opacity = 0.4\n) {\n  return new fabric.Triangle({\n    width: size,\n    height: size,\n    left: x,\n    top: y,\n    angle: angle + 90,\n    fill: color,\n    strokeWidth: 0.6,\n    stroke: 'black',\n    originX: 'center',\n    originY: 'center',\n    opacity,\n    strokeWidth: 0.8,\n    selectable: false,\n    evented: false,\n    id: initId,\n  })\n}\n\n// MyFabric.prototype.getPreviewCircle = function (x, y) {\n//   return new fabric.Circle({\n//     radius: this.circleRadius,\n//     fill: 'blue',\n//     strokeWidth: 0.6,\n//     stroke: 'black',\n//     opacity: 0.3,\n//     left: x,\n//     top: y,\n//     originX: 'center',\n//     originY: 'center',\n//     selectable: false,\n//     evented: false,\n//   })\n// }\n\nMyFabric.prototype.getSplitLine = function (\n  canvasDiagonal,\n  mousePosition,\n  angle\n) {\n  return new fabric.Line(\n    [\n      mousePosition.x - canvasDiagonal,\n      mousePosition.y,\n      mousePosition.x + canvasDiagonal,\n      mousePosition.y,\n    ],\n    {\n      strokeWidth: 1,\n      fill: 'blue',\n      stroke: 'blue',\n      selectable: false,\n      evented: false,\n      originX: 'center',\n      originY: 'center',\n      angle,\n    }\n  )\n}\n\n// MyFabric.prototype.getVerticalSplitLine = function (\n//   canvasHeight,\n//   mousePosition\n// ) {\n//   return new fabric.Line([mousePosition.x, 0, mousePosition.x, canvasHeight], {\n//     strokeWidth: 1,\n//     fill: 'blue',\n//     stroke: 'blue',\n//     selectable: false,\n//     evented: false,\n//   })\n// }\n\n// MyFabric.prototype.getHorizontalSplitLine = function (\n//   canvasWidth,\n//   mousePosition\n// ) {\n//   return new fabric.Line([0, mousePosition.y, canvasWidth, mousePosition.y], {\n//     strokeWidth: 1,\n//     fill: 'blue',\n//     stroke: 'blue',\n//     selectable: false,\n//     evented: false,\n//   })\n// }\n\nMyFabric.prototype.getNewAssignLine = function ([x1, y1], [x2, y2]) {\n  return new fabric.Line([x1, y1, x2, y2], {\n    strokeWidth: 1,\n    fill: 'black',\n    stroke: 'black',\n    selectable: false,\n    evented: false,\n    startPos: [x1, y1],\n  })\n}\n\nMyFabric.prototype.getNewAssignCircle = function (x, y) {\n  return new fabric.Circle({\n    radius: this.circleRadius,\n    fill: 'black',\n    strokeWidth: this.vertexRadius,\n    stroke: 'black',\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    evented: false,\n  })\n}\n\n// MyFabric.prototype.getTextRect = function () {\n//   let rect = new fabric.Rect({\n//     left: 0,\n//     top: 0,\n//     width: 100,\n//     height: 100,\n//     strokeWidth: 1,\n//     stroke: 'black',\n//     fill: 'green',\n//     selectable: false,\n//   })\n\n//   rect.on('mouseover', function (o) {\n//     //console.log('mouseOver')\n//   })\n//   rect.on('mouseout', function (o) {\n//     //console.log('mouseOut')\n//   })\n//   return rect\n// }\n\nMyFabric.prototype.getPreviewLine = function (coords, opacity = 0.3) {\n  return new fabric.Line(coords, {\n    originX: 'center',\n    originY: 'center',\n    strokeWidth: 1,\n    fill: 'blue',\n    stroke: 'blue',\n    opacity: opacity,\n    selectable: false,\n    evented: false,\n  })\n}\n\nMyFabric.prototype.getPreviewRect = function (x1, y1, x2, y2) {\n  let width = Math.abs(x1 - x2)\n  let height = Math.abs(y1 - y2)\n  let midPoint = lineMidpoint([\n    [x1, y1],\n    [x2, y2],\n  ])\n  return new fabric.Rect({\n    left: midPoint[0],\n    top: midPoint[1],\n    originX: 'center',\n    originY: 'center',\n    width: width,\n    height: height,\n    strokeWidth: 1,\n    stroke: 'black',\n    fill: 'green',\n    opacity: 0.3,\n    selectable: false,\n    evented: false,\n  })\n}\n\nMyFabric.prototype.getSelectionRect = function (x, y) {\n  const rect = new fabric.Rect({\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    width: 0,\n    height: 0,\n    strokeWidth: 2,\n    stroke: 'black',\n    fill: 'transparent',\n    opacity: 0.5,\n    selectable: false,\n    evented: false,\n    initX: x,\n    initY: y,\n    updated: false,\n  })\n  rect.update = (x, y) => {\n    rect.updated = true\n    const width = Math.abs(rect.initX - x)\n    const height = Math.abs(rect.initY - y)\n    const midPoint = lineMidpoint([\n      [rect.initX, rect.initY],\n      [x, y],\n    ])\n    rect.set({ width, height, left: midPoint[0], top: midPoint[1] })\n  }\n  rect.getArea = () => {\n    const halfWidth = rect.width / 2\n    const halfHeight = rect.height / 2\n    return [\n      [rect.left - halfWidth, rect.top - halfHeight],\n      [rect.left - halfWidth, rect.top + halfHeight],\n      [rect.left + halfWidth, rect.top + halfHeight],\n      [rect.left + halfWidth, rect.top - halfHeight],\n    ]\n  }\n  return rect\n}\n\n// MyFabric.prototype.getCanvasRect = function (canvas) {\n//   return new fabric.Rect({\n//     left: 0,\n//     top: 0,\n//     originX: 'left',\n//     originY: 'top',\n//     width: canvas.width,\n//     height: canvas.height,\n//     strokeWidth: 3,\n//     stroke: 'red',\n//     fill: 'transparent',\n//     selectable: false,\n//     evented: false,\n//   })\n// }\n\nMyFabric.prototype.getInvalidTableBackground = function (points) {\n  return new fabric.Polyline(points, {\n    strokeWidth: 0,\n    fill: 'red',\n    opacity: 0.2,\n    selectable: false,\n    evented: false,\n  })\n}\n\nMyFabric.prototype.getInvalidTableFrame = function (points) {\n  return new fabric.Polyline([...points, points[0]], {\n    strokeWidth: 1,\n    opacity: 0.6,\n    stroke: 'black',\n    fill: 'transparent',\n    selectable: false,\n    evented: false,\n  })\n}\n\nMyFabric.prototype.getInvalidTableSign = function (points) {\n  let polygon = points.map(({ x, y }) => [x, y])\n  let mean = polygonMean(polygon)\n  //console.log(mean)\n  //console.log(points)\n  return new fabric.Text('Invalid Table', {\n    originX: 'center',\n    originY: 'center',\n    fontSize: 50 * this.scaleFactor,\n    fill: 'yellow',\n    evented: false,\n    left: mean[0],\n    top: mean[1],\n  })\n}\n\n// MyFabric.prototype.getQuickPolyline = function (points) {\n//   return new fabric.Polyline([...points, points[0]], {\n//     strokeWidth: 1,\n//     stroke: 'black',\n//     fill: 'transparent',\n//     selectable: false,\n//     evented: false,\n//   })\n// }\n\nMyFabric.prototype.clone = function (object) {\n  let objectClone\n  object.clone((clone) => {\n    objectClone = clone\n  })\n  return objectClone\n}\n\nMyFabric.prototype.getGroupData = function (group) {\n  const getData = (group, left, top) => {\n    let circles = group.getObjects().filter((o) => o.type === 'circle')\n    let groups = group.getObjects().filter((o) => o.type === 'group')\n    // let horizontalMid =\n\n    //(group.left + group.width / 2) + g.left + (group.left + group.width / 2) + o.left\n\n    //This is working\n\n    // let verticalMid = top + group.height / 2\n    return {\n      vertices: circles.map((o) => ({\n        left: left + (group.width / 2 + o.left) * group.scaleX,\n        top: top + (group.height / 2 + o.top) * group.scaleY,\n      })),\n      groups: groups.map((g) =>\n        getData(\n          g,\n          left + (group.width / 2 + g.left) * group.scaleX,\n          top + (group.height / 2 + g.top) * group.scaleY\n        )\n      ),\n    }\n  }\n  return getData(group, group.left, group.top)\n}\n\nMyFabric.prototype.getDock = function ([x, y], id, type) {\n  const circleSize = this.settings.get('circleSize')\n  return new fabric.Circle({\n    radius: circleSize * 2,\n    fill: 'transparent',\n    strokeWidth: this.vertexRadius,\n    stroke:\n      type === 'baseline'\n        ? 'blue'\n        : type === 'region'\n        ? 'green'\n        : type === 'table'\n        ? 'yellow'\n        : 'orange',\n    left: x,\n    top: y,\n    originX: 'center',\n    originY: 'center',\n    hasControls: false,\n    hasBorders: false,\n    selectable: false,\n    id: id,\n    defaultRadius: circleSize * 2,\n  })\n}\n\nMyFabric.prototype.getRelationArrow = function (p1, p2, color = 'black') {\n  let line = [p1, p2]\n  let angle = lineAngle(line)\n  let midPoint = lineInterpolate(line)(0.9)\n  let arrow = this.getArrow(midPoint[0], midPoint[1], angle, -1, 20, color, 1)\n  let arrowLine = new fabric.Line([...p1, ...midPoint], {\n    strokeWidth: 1,\n    stroke: color,\n    selectable: false,\n    evented: false,\n  })\n\n  const group = new fabric.Group([arrow, arrowLine], {\n    selectable: false,\n    evented: false,\n  })\n  return group\n}\n\n// if (this.readingOrderText) {\n//   this.canvas.remove(this.readingOrderText)\n// }\n// //console.log(\"I am updated! id: \" + this.id);\n// if (this.vertices[0] && this.showReadingOrder) {\n//   this.readingOrderText = new fabric.Text(this.index + '', {\n//     left: this.vertices[0].get('left'),\n//     top: this.vertices[0].get('top'),\n//     fontSize: 20,\n//     selectable: false,\n//     evented: false,\n//     fill: 'green',\n//   })\n//   this.canvas.add(this.readingOrderText)\n// }\n\n//console.log(`${this.canvas.getWidth()} ${this.canvas.getHeight()}`)\n\n// this.canvas.add(\n//   new fabric.Polyline(\n//     [\n//       { x: 0, y: 0 },\n//       { x: 0, y: this.canvas.getHeight() },\n//       { x: this.canvas.getWidth(), y: this.canvas.getHeight() },\n//       { x: this.canvas.getWidth(), y: 0 },\n//       { x: 0, y: 0 }\n//       // { x: 10, y: 10 },\n//       // { x: 50, y: 30 },\n//       // { x: 40, y: 70 },\n//     ],\n//     {\n//       strokeWidth: 6,\n//       stroke: 'green',\n//       fill: 'transparent',\n//       selectable: false,\n//       evented: false\n//     }\n//   )\n// )\n\n// export {\n//   getCircle,\n//   getPreviewLine,\n//   getLineElements,\n//   getPreviewCircle,\n//   getPolygon,\n//   getRegionVertex,\n//   getRegionLine,\n//   getRegionBackground,\n//   getInvisibleVertex,\n//   getRunningVertex,\n//   getPreviewRect,\n// }\n\nexport { Singleton }\n","import {\n  lineInterpolate,\n  pointInPolygon,\n  polygonMean,\n  pointRotate,\n} from 'geometric'\nimport Offset from 'polygon-offset'\nimport { segment } from '@flatten-js/core'\nimport { Singleton as IdHandler } from './singletons/IdHandler.js'\n\n//From https://stackoverflow.com/questions/5306680/move-an-array-element-from-one-array-position-to-another\nfunction array_move(arr, old_index, new_index) {\n  if (new_index >= arr.length) {\n    var k = new_index - arr.length + 1\n    while (k--) {\n      arr.push(undefined)\n    }\n  }\n  arr.splice(new_index, 0, arr.splice(old_index, 1)[0])\n}\n\nfunction projectPointer(lines, pointer, minMargin) {\n  let min\n  if (minMargin) {\n    min = minMargin\n  } else {\n    min = 10\n  }\n\n  let point = null\n  let foundLine = lines.find((line) => {\n    let enoughDistance = false\n    let distToFirst = distanceBetween(line.coords[0], [pointer.x, pointer.y])\n    let distToSecond = distanceBetween(line.coords[1], [pointer.x, pointer.y])\n\n    if (distToFirst > min && distToSecond > min) {\n      enoughDistance = true\n    }\n\n    if (\n      pointInPolygon([pointer.x, pointer.y], line.polygon) &&\n      enoughDistance\n    ) {\n      let interpolator = lineInterpolate(line.coords)\n      let sum = distToFirst + distToSecond\n      let ratio = distToFirst / sum\n      point = interpolator(ratio)\n\n      return true\n    }\n    return false\n  })\n  return { line: foundLine, point: point }\n}\n\nfunction calcLines(vertices) {\n  const areDifferent = (coords) =>\n    coords[0][0] != coords[1][0] || coords[0][1] != coords[1][1]\n\n  if (vertices.length < 2) {\n    return []\n  }\n  let offset = new Offset()\n  let lines = []\n  vertices.reduce((first, second) => {\n    let coords = [\n      [first.left, first.top],\n      [second.left, second.top],\n    ]\n    if (areDifferent(coords)) {\n      let polygon = offset.data(coords).margin(10)[0]\n      lines.push({\n        coords: coords,\n        polygon: polygon,\n        parentIds: [first.id, second.id],\n      })\n    }\n    return second\n  })\n  let coords = [\n    [vertices[vertices.length - 1].left, vertices[vertices.length - 1].top],\n    [vertices[0].left, vertices[0].top],\n  ]\n  if (areDifferent(coords)) {\n    let polygon = offset.data(coords).margin(10)[0]\n    lines.push({\n      coords: coords,\n      polygon: polygon,\n      parentIds: [vertices[vertices.length - 1].id, vertices[0].id],\n    })\n  }\n  return lines\n}\n\nfunction getSplitCoords(shape, splitLine) {\n  //refactor! input parameters should be vertices and lines\n  let vertices = shape.vertices.map((v) => ({\n    id: v.id,\n    x: v.left,\n    y: v.top,\n  }))\n  //console.log(vertices, splitLine)\n  let splitList = []\n  let splitSegment = segment(\n    splitLine[0][0],\n    splitLine[0][1],\n    splitLine[1][0],\n    splitLine[1][1]\n  )\n\n  shape.geometricLines.map((line) => {\n    // console.log(line)\n    let lineSegment = segment(...line.coords.flat())\n    let intersectionPoint = lineSegment\n      .intersect(splitSegment)\n      .map(({ x, y }) => ({\n        x,\n        y,\n        id: IdHandler.instance().requestId('ls'),\n      }))[0]\n\n    if (intersectionPoint) {\n      let vertexAfterId = line.parentIds[1]\n      let afterIntersection = false\n      let newSplit = []\n      vertices = vertices.filter((v) => {\n        if (v.id === vertexAfterId) {\n          afterIntersection = true\n        }\n        if (!afterIntersection) {\n          newSplit.push(v)\n        }\n        return afterIntersection\n      })\n      vertices = [intersectionPoint].concat(vertices)\n      newSplit = newSplit.concat([intersectionPoint])\n      splitList.push({ vertices: newSplit })\n    }\n  })\n  splitList.push({ vertices: vertices })\n  //console.log(JSON.parse(JSON.stringify(splitList)))\n  return splitList\n}\n\nfunction whatSideOfLine(shape, line) {\n  let polygon = shape.vertices.map((v) => [v.left, v.top])\n  let point = polygonMean(polygon)\n\n  // console.log(point)\n\n  return Math.sign(\n    (line[1][0] - line[0][0]) * (point[1] - line[0][1]) -\n      (line[1][1] - line[0][1]) * (point[0] - line[0][0])\n  )\n}\n\nfunction sortCellVertices(cell) {\n  let topLeft = {}\n  let smalestX = Infinity\n  let smalestY = Infinity\n  cell.vertices.map((vertex) => {\n    if (vertex.left < smalestX) {\n      smalestX = vertex.left\n      topLeft = vertex\n    }\n  }, [])\n  return\n}\n\nfunction getRectCoords(position, initCoord) {\n  let coordsList = []\n  coordsList.push({ x: position.x, y: position.y })\n\n  if (\n    (position.x > initCoord.x && position.y > initCoord.y) ||\n    (position.x < initCoord.x && position.y < initCoord.y)\n  ) {\n    coordsList.push({ x: initCoord.x, y: position.y })\n  } else {\n    coordsList.push({ x: position.x, y: initCoord.y })\n  }\n\n  coordsList.push({ x: initCoord.x, y: initCoord.y })\n\n  if (\n    (position.x > initCoord.x && position.y > initCoord.y) ||\n    (position.x < initCoord.x && position.y < initCoord.y)\n  ) {\n    coordsList.push({ x: position.x, y: initCoord.y })\n  } else {\n    coordsList.push({ x: initCoord.x, y: position.y })\n  }\n\n  return coordsList\n}\n\n// function sortMergeOrder(shape1, shape2) {\n//   let shape1First = shape1.vertices[0]\n//   let shape1Last = shape1.vertices[shape1.vertices.length - 1]\n//   let shape2First = shape2.vertices[0]\n//   let shape2Last = shape2.vertices[shape2.vertices.length - 1]\n//   let dist1 = distanceBetween(\n//     shape1First.left,\n//     shape1First.top,\n//     shape2Last.left,\n//     shape2Last.top\n//   )\n//   let dist2 = distanceBetween(\n//     shape1Last.left,\n//     shape1Last.top,\n//     shape2First.left,\n//     shape2First.top\n//   )\n\n//   if (dist1 < dist2) {\n//     return [shape2, shape1]\n//   } else {\n//     return [shape1, shape2]\n//   }\n// }\n\nfunction getMergePartners(line, candidates, scaleFactor, canvasDimensions) {\n  const inPixels = (number) => number / scaleFactor\n\n  let pixelsMinYDistance = inPixels(canvasDimensions.height) * 0.005\n  let pixelsMinXDistance = inPixels(canvasDimensions.width) * 0.04\n  let candidateMaxLineLength = inPixels(canvasDimensions.width) * 0.05\n  let lineMinLineLength = inPixels(canvasDimensions.width) * 0.05\n\n  // console.log(\n  //   pixelsMinYRange,\n  //   pixelsMinXRange,\n  //   candidateMaxLineLength,\n  //   lineMinLineLength\n  // )\n\n  const getLineLength = (line) => {\n    return line.vertices.reduce(\n      (acc, vertex) => {\n        if (acc.last === null) {\n          return { last: vertex, length: acc.length }\n        }\n        return {\n          last: vertex,\n          length:\n            acc.length +\n            distanceBetween(\n              acc.last.left,\n              acc.last.top,\n              vertex.left,\n              vertex.top\n            ),\n        }\n      },\n      { last: null, length: 0 }\n    ).length\n  }\n\n  const areClose = (lineA, lineB) => {\n    let firstA = lineA.vertices[0]\n    let lastA = lineA.vertices[lineA.vertices.length - 1]\n\n    let firstB = lineB.vertices[0]\n    let lastB = lineB.vertices[lineB.vertices.length - 1]\n\n    let distances = [\n      {\n        left: Math.abs(firstA.left - lastB.left),\n        top: Math.abs(firstA.top - lastB.top),\n      },\n      {\n        left: Math.abs(lastA.left - firstB.left),\n        top: Math.abs(lastA.top - firstB.top),\n      },\n    ]\n    let distInPixels = distances.map((d) => ({\n      left: inPixels(d.left),\n      top: inPixels(d.top),\n    }))\n\n    return distInPixels.find(\n      (d) => d.left < pixelsMinXDistance && d.top < pixelsMinYDistance\n    )\n      ? true\n      : false\n  }\n\n  const shortCandiate = (candidate) => {\n    return inPixels(getLineLength(candidate)) < candidateMaxLineLength\n  }\n\n  const longLine = (line) => {\n    return inPixels(getLineLength(line)) > lineMinLineLength\n  }\n\n  if (longLine(line)) {\n    let partners = candidates.filter((candidate) => {\n      return areClose(line, candidate) && shortCandiate(candidate)\n    })\n\n    if (partners.length > 0) {\n      return [line, ...partners]\n    }\n  }\n}\n\nfunction getClosestLinePair(lines) {\n  //found here https://stackoverflow.com/questions/22566379/how-to-get-all-pairs-of-array-javascript\n  const pairsOfArray = (array) =>\n    array.reduce(\n      (acc, val, i1) => [\n        ...acc,\n        ...new Array(array.length - 1 - i1)\n          .fill(0)\n          .map((v, i2) => [array[i1], array[i1 + 1 + i2]]),\n      ],\n      []\n    )\n\n  let lineObjects = lines.map((line) => ({\n    line: line,\n    first: line.vertices[0],\n    last: line.vertices[line.vertices.length - 1],\n  }))\n\n  let pairs = pairsOfArray(lineObjects)\n\n  let closest = pairs.reduce(\n    (closest, pair) => {\n      let dist1 = distanceBetween(\n        pair[0].last.top,\n        pair[0].last.left,\n        pair[1].first.top,\n        pair[1].first.left\n      )\n      let dist2 = distanceBetween(\n        pair[1].last.top,\n        pair[1].last.left,\n        pair[0].first.top,\n        pair[0].first.left\n      )\n      let newDist = dist1 < dist2 ? dist1 : dist2\n      let newPair = dist1 < dist2 ? [pair[0], pair[1]] : [pair[1], pair[0]]\n      //console.log(dist1, dist2)\n      return newDist < closest.dist ? { pair: newPair, dist: newDist } : closest\n    },\n    { dist: Infinity }\n  )\n\n  let newLines = closest.pair.map((pair) => pair.line)\n  //console.log(closest)\n  //console.log(newLines)\n  return newLines\n}\n\nfunction distanceBetween(c, d, e, f) {\n  let x1 = c\n  let y1 = d\n  let x2 = e\n  let y2 = f\n  if (!e && !f) {\n    x1 = c[0]\n    y1 = c[1]\n    x2 = d[0]\n    y2 = d[1]\n  }\n  let a = x1 - x2\n  let b = y1 - y2\n\n  return Math.sqrt(a * a + b * b)\n}\n\nfunction createSplitline(origin, angle, length) {\n  const initPoint = [origin[0] + length / 2, origin[1]]\n  // console.log(initPoint)\n  const newEndPoint = pointRotate(initPoint, angle, origin)\n  // console.log(newEndPoint)\n  const newStartPoint = pointRotate(newEndPoint, 180, origin)\n  // console.log([newStartPoint, newEndPoint])\n  // const newTest = pointRotate([1, 1], 180, [0, 0])\n  // console.log(newTest)\n  return [newStartPoint, newEndPoint]\n}\n\nexport {\n  createSplitline,\n  projectPointer,\n  calcLines,\n  distanceBetween,\n  getRectCoords,\n  getClosestLinePair as getClosestLine,\n  getSplitCoords,\n  whatSideOfLine,\n  getMergePartners,\n  array_move,\n}\n","import {\n  Singleton as ActionHandler,\n  ACTION_TYPE,\n} from '../singletons/actionHandler.js'\nimport { Singleton as MyFabric } from '../myFabric.js'\nimport { Singleton as IdHandler } from '../singletons/IdHandler.js'\nimport { Singleton as Settings } from '../singletons/settings.js'\nimport { polygonMean } from 'geometric'\nimport { isEmpty } from 'lodash'\nimport { calcLines } from '../geometryFunctions.js'\n\nfunction Shape(canvas) {\n  this.attributes = {}\n  this.elements = {}\n  this.text = ''\n\n  this.canvas = canvas\n  this.state = Shape.STATE.EDIT\n  this.selected = false\n  this.showStructure = false\n  this.vertices = []\n  this.prevLines = []\n  this.deletedPoints = []\n  this.actionHandler = ActionHandler.instance()\n  this.myFabric = MyFabric.instance()\n  this.settings = Settings.instance()\n  this.geometricLines = []\n  this.hoveredVertex = null\n  this.preview = true\n  this.runningVertex = null\n  this.lastMousePosition = { x: 0, y: 0 }\n}\n\nShape.STATE = Object.freeze({\n  FIRST_DRAW: 1,\n  GROUP_SELECTION: 2,\n  ADD_VERTEX: 3,\n  REMOVE_VERTEX: 4,\n  EDIT: 5,\n  DISPLAY_RO: 6,\n  RESIZE: 7,\n  LARGE_GROUP_SELECTION: 8,\n})\n\nShape.M_ACTIONS = Object.freeze({\n  V_DIV: 1,\n  H_DIV: 2,\n  REMOVE_DIV: 3,\n})\n\nShape.TYPE = Object.freeze({\n  REGION: 'region',\n  TABLE: 'table',\n  BASELINE: 'baseline',\n  CELL: 'cell',\n  WORD: 'word,',\n  SHAPE: 'shape',\n})\n\nShape.prototype.performAction = function (action) {\n  if (\n    this.state === Shape.STATE.GROUP_SELECTION\n    // this.state === Shape.STATE.LARGE_GROUP_SELECTION\n  ) {\n    this.setState(Shape.STATE.EDIT)\n  }\n  // console.log('Shape performed action:')\n  // console.log(action)\n  if (action) {\n    switch (action.type) {\n      case ACTION_TYPE.ADD_POINT:\n        let newPoint\n        this.deletedPoints = this.deletedPoints.filter((point) => {\n          if (point.id === action.point_id) {\n            newPoint = point\n            return false\n          }\n          return true\n        })\n        this.addPoint(newPoint, action.point_index)\n        break\n\n      case ACTION_TYPE.REMOVE_POINT:\n        this.removePoint(action.point_id)\n        break\n\n      case ACTION_TYPE.MOVE_POINT:\n        this.movePoint(action.point_id, action.new_coords)\n        break\n      case ACTION_TYPE.MOVE_SHAPE:\n        this.moveAllPoints(action.new_coords)\n        break\n      case ACTION_TYPE.MOVE_SHAPE_WITH_VECTOR:\n        this.moveAllPointsWithVector(action.vector)\n        break\n      case ACTION_TYPE.ADD_TABLE_COLUM:\n        this.cellMatrix.createColumn(action.col_index)\n        break\n      case ACTION_TYPE.REMOVE_TABLE_COLUM:\n        this.cellMatrix.deleteColumn(action.col_index)\n        break\n      case ACTION_TYPE.ADD_TABLE_ROW:\n        this.cellMatrix.createRow(action.row_index)\n        break\n      case ACTION_TYPE.REMOVE_TABLE_ROW:\n        this.cellMatrix.deleteRow(action.row_index)\n        break\n      case ACTION_TYPE.ADD_CELL:\n        this.cellMatrix.setCell(action.cell, action.row, action.col)\n        break\n      case ACTION_TYPE.REMOVE_CELL:\n        this.cellMatrix.removeCellById(action.cell.id)\n        break\n      case ACTION_TYPE.CHANGE_CELL_SPAN:\n        let cell = this.cellMatrix.getCellById(action.cell_id)\n        cell.rowSpan = action.new_row_span\n        cell.colSpan = action.new_col_span\n        this.update()\n        break\n      case ACTION_TYPE.SET_STRUCTUR_TYPE:\n        this.setStructureType(action.new_type)\n    }\n  }\n}\n\nShape.prototype.getReadingOrder = function () {\n  return this.attributes.custom?.readingOrder\n}\n\nShape.prototype.getStructureType = function () {\n  return this.attributes.custom?.structureType\n}\n\nShape.prototype.setReadingOrder = function (index) {\n  if (!('custom' in this.attributes)) {\n    this.attributes.custom = {}\n  }\n  this.attributes.custom.readingOrder = index\n}\n\nShape.prototype.setStructureType = function (type) {\n  if (type === 'none') {\n    if (!('custom' in this.attributes)) return\n    const custom = this.attributes.custom\n    if (!('structureType' in custom)) return\n    delete custom.structureType\n    if (isEmpty(custom)) {\n      delete this.attributes.custom\n    }\n  }\n  if (!('custom' in this.attributes)) {\n    this.attributes.custom = {}\n  }\n  this.attributes.custom.structureType = type\n  //this.update()\n}\n\nShape.prototype.getType = function () {\n  return Shape.TYPE.SHAPE\n}\n\nShape.prototype.movePoint = function (pointId, coords) {\n  let vertex = this.vertices.find((v) => v.id === pointId)\n  if (vertex) {\n    vertex.set({ left: coords.left, top: coords.top })\n    vertex.setCoords()\n    this.update()\n  } else {\n    // console.log('Vertex with id+ ' + pointId + ' could not be found')\n  }\n}\n\nShape.prototype.moveAllPoints = function (coords) {\n  this.vertices.map((vertex, index) => {\n    vertex.set({ left: coords[index].left, top: coords[index].top })\n    vertex.setCoords()\n  })\n  this.update()\n}\n\nShape.prototype.moveAllPointsWithVector = function ({ x, y }) {\n  this.vertices.map((vertex) => {\n    vertex.set({ left: vertex.left + x, top: vertex.top + y })\n    vertex.setCoords()\n  })\n  // console.log('move all points')\n  this.update()\n}\n\nShape.prototype.addPoint = function (vertex, index) {\n  this.canvas.add(vertex)\n\n  this.vertices.splice(index, 0, vertex)\n\n  if (this.vertices.length > 1) {\n    this.update()\n  }\n}\n\nShape.prototype.addMultiplePoints = function (points) {\n  this.canvas.add(...points)\n\n  this.vertices = this.vertices.concat(points)\n\n  if (this.vertices.length > 1) {\n    this.update()\n  }\n}\n\nShape.prototype.removePoint = function (pointId) {\n  let vertex\n  this.vertices = this.vertices.filter((v) => {\n    if (v.id === pointId) {\n      vertex = v\n      return false\n    }\n    return true\n  })\n  this.deletedPoints.push(vertex)\n  if (!vertex) {\n    console.log('the point id ' + pointId + ' could not be found')\n    console.log(this.vertices.map((v) => v.id))\n    console.log(this.deletedPoints.map((p) => p.id))\n  }\n  vertex.set('radius', vertex.defaultRadius)\n  this.canvas.remove(vertex)\n  this.update()\n  this.canvas.discardActiveObject()\n}\n\nShape.prototype.getVertexIndex = function (id) {\n  let foundIndex = this.vertices.findIndex((v) => {\n    return v.id === id\n  })\n  return foundIndex\n}\n\nShape.prototype.getVertexById = function (id) {\n  let foundVertex = this.vertices.find((v) => {\n    return v.id === id\n  })\n  return foundVertex\n}\n\nShape.prototype.showDock = function (type) {\n  if (this.dock != null) return\n  this.dock = this.myFabric.getDock(this.getMidPoint(), this.id, type)\n  this.canvas.add(this.dock)\n}\n\nShape.prototype.removeDock = function () {\n  if (this.dock == null) return\n  this.canvas.remove(this.dock)\n  this.dock = null\n}\n\nShape.prototype.getMidPoint = function () {\n  const coords = this.vertices.map(({ left, top }) => [left, top])\n  return polygonMean(coords)\n}\n\nShape.prototype.handleClickEvent = function (event) {}\nShape.prototype.handleDBLClickEvent = function (event, setButtonState) {}\nShape.prototype.handleMouseMoveEvent = function (event) {}\nShape.prototype.handleMouseOut = function (event) {}\nShape.prototype.mouseDownBefore = function () {}\nShape.prototype.handleMouseUpEvent = function (position) {}\nShape.prototype.mouseUp = function () {}\n\nShape.prototype.update = function () {}\n\nShape.prototype.select = function () {}\n\nShape.prototype.unSelect = function () {}\n\nShape.prototype.setState = function () {}\n\nShape.prototype.showStructureType = function (show) {\n  // this.showStructure = show\n  // this.update()\n}\n\n// Shape.prototype.setStructureType = function (type) {\n//   this.attributes.custom.structureType = type\n//   this.update()\n// }\n\nShape.prototype.settingsUpdate = function () {\n  // this.updateStructureText(this.vertices, 'Baseline')\n  // this.updateReadingOrderText(this.vertices, 'Baseline')\n  // this.vertices.map((v) => {\n  //   v.set({\n  //     radius: this.settings.get('circleSize'),\n  //     defaultRadius: this.settings.get('circleSize'),\n  //   })\n  // })\n  // this.canvas.requestRenderAll()\n}\n\nShape.prototype.isVisible = function () {\n  switch (this.getType()) {\n    case Shape.TYPE.REGION: {\n      return this.settings.get('showRegions')\n    }\n    case Shape.TYPE.TABLE: {\n      return this.settings.get('showRegions')\n    }\n    case Shape.TYPE.CELL: {\n      return this.settings.get('showRegions')\n    }\n    case Shape.TYPE.BASELINE: {\n      return this.settings.get('showBaselines')\n    }\n    case Shape.TYPE.WORD: {\n      return this.settings.get('showWords')\n    }\n  }\n}\n\nShape.prototype.superUpdate = function () {\n  this.updateVertexSize()\n  this.updateStructureText()\n  this.updateReadingOrderText()\n}\n\nShape.prototype.updateVisibility = function () {\n  if (!this.isVisible()) {\n    this.removeFromCanvas()\n  }\n}\n\nShape.prototype.updateVertices = function () {\n  if (this.selected) {\n    if (!this.canvas.contains(this.vertices[0])) {\n      this.canvas.add(...this.vertices)\n    }\n  } else {\n    this.canvas.remove(...this.vertices)\n  }\n}\n\nShape.prototype.updateGeometricLines = function ({ chop } = { chop: false }) {\n  this.geometricLines = chop\n    ? calcLines(this.vertices).slice(0, -1)\n    : calcLines(this.vertices)\n}\n\nShape.prototype.updateVertexSize = function () {\n  const circleSize = this.settings.get('circleSize')\n  this.vertices.map((vertex) => {\n    if (vertex.radius != circleSize) {\n      vertex.set({\n        radius: circleSize,\n        defaultRadius: circleSize,\n      })\n    }\n  })\n}\n\nShape.prototype.updateStructureText = function () {\n  const showStructureTypes = this.settings.get('showStructureTypes')\n  this.canvas.remove(this.structureText)\n  if (showStructureTypes) {\n    this.structureText = this.myFabric.getStructureText(\n      this.getStructureType(),\n      this.vertices\n    )\n    if (this.structureText != null) {\n      this.canvas.add(this.structureText)\n    }\n  }\n}\n\nShape.prototype.updateReadingOrderText = function () {\n  const showReadingOrder = this.settings.get('showReadingOrder')\n  this.canvas.remove(this.readingOrderText)\n  if (showReadingOrder) {\n    this.readingOrderText = this.myFabric.getROText(\n      this.getReadingOrder(),\n      this.vertices\n    )\n    if (this.readingOrderText != null) {\n      this.canvas.add(this.readingOrderText)\n    }\n  }\n}\n\nexport default Shape\n","import { Singleton as IdHandler } from '../singletons/IdHandler.js'\nimport Shape from './Shape.js'\n\nfunction Word(canvas, blueprint) {\n  Shape.call(this, canvas)\n  this.id = IdHandler.instance().requestId('w')\n\n  this.selected = false\n  this.polyLine = null\n  this.vertices = []\n\n  if (blueprint) {\n    this.attributes = blueprint.attributes\n    this.elements = blueprint.elements\n    this.id = IdHandler.instance().requestId(blueprint.attributes.id)\n\n    this.text = blueprint.elements.text\n    this.polyLine = this.myFabric.getWordPolyLine(this.elements.coords, this.id)\n    this.canvas.add(this.polyLine)\n    this.elements.coords.map(({ x, y }) => {\n      this.vertices.push(this.myFabric.getWordCircle(x, y, this.id))\n    })\n    this.update()\n  }\n}\n\nWord.prototype = Object.create(Shape.prototype)\nWord.prototype.constructor = Word\n\nWord.prototype.getBlueprint = function (myIndex, parentId, keepId) {\n  //this.attributes.id = keepId ? this.id : `${parentId}w${myIndex + 1}`\n  this.attributes.id = this.id\n  this.setReadingOrder(myIndex)\n  return { attributes: this.attributes, elements: this.elements }\n}\n\nWord.prototype.getType = function () {\n  return Shape.TYPE.WORD\n}\n\nWord.prototype.select = function () {\n  this.selected = true\n  this.update()\n}\n\nWord.prototype.unSelect = function () {\n  this.selected = false\n  this.update()\n}\n\nWord.prototype.getGroup = function () {\n  let polyLine = this.myFabric\n    .clone(this.polyLine)\n    .set({ fill: this.polyLine.color })\n\n  return new fabric.Group([polyLine], {\n    id: this.id,\n    hasControls: true,\n    cornerStyle: 'circle',\n    padding: 0,\n    cornerSize: 8,\n    cornerColor: 'transparent',\n    transparentCorners: true,\n    cornerStrokeColor: 'blue',\n    lockSkewingX: true,\n    lockSkewingY: true,\n  }).setControlsVisibility({\n    mtr: false,\n  })\n}\nWord.prototype.moveAllPoints = function ({ x, y }) {}\n\nWord.prototype.removeFromCanvas = function () {\n  this.canvas.remove(this.polyLine)\n  this.canvas.remove(this.structureText)\n  this.canvas.remove(this.readingOrderText)\n}\n\nWord.prototype.getArea = function () {\n  return this.vertices.map((vertex) => [vertex.left, vertex.top])\n}\n\nWord.prototype.update = function () {\n  if (!this.isVisible()) {\n    this.removeFromCanvas()\n    return\n  }\n  this.updateVertexSize()\n  this.updateStructureText()\n  this.updateReadingOrderText()\n  if (this.selected) {\n    this.polyLine.set({ fill: this.polyLine.color })\n  } else {\n    this.polyLine.set({ fill: 'transparent' })\n  }\n  this.canvas.sendToBack(this.polyLine)\n}\n\nexport default Word\n","import { ACTION_TYPE } from '../singletons/actionHandler.js'\nimport { Singleton as IdHandler } from '../singletons/IdHandler.js'\n\nimport Shape from './Shape.js'\nimport { polygonMean } from 'geometric'\nimport Editor from '../editor.js'\nimport Word from './Word.js'\nimport { isEqual } from 'lodash'\nimport {\n  projectPointer,\n  calcLines,\n  distanceBetween,\n} from '../geometryFunctions.js'\n\nfunction Baseline(canvas, blueprint) {\n  Shape.call(this, canvas)\n  this.id = IdHandler.instance().requestId('l')\n\n  this.activeVertex = null\n  this.tempCoords = null\n  this.line = {}\n  this.arrows = []\n  this.group = null\n  this.prevLine = null\n  this.lastAddedVertex = {}\n  this.alive = true\n  this.modified = true\n  this.insertionPosition = null\n  this.polygon = null\n  this.previewCircle = {} //not used\n  this.polyCoords = []\n  this.words = []\n\n  //temp\n\n  // let polyVertices = blueprint.elements.polyCoords.map((point) => {\n  //   return [point.x, point.y]\n  // })\n  // let { line } = this.myFabric.getLineElements(polyVertices, this.id)\n  // this.canvas.add(line)\n\n  if (blueprint) {\n    this.modified = false\n    this.attributes = blueprint.attributes\n    this.elements = blueprint.elements\n    this.id = IdHandler.instance().requestId(blueprint.attributes.id)\n\n    this.text = blueprint.elements.text\n    this.words = blueprint.elements.words.map(\n      (blueprint) => new Word(canvas, blueprint)\n    )\n    blueprint.elements.baselineCoords.map((coord) => {\n      let newVertex = this.getVertex(coord.x, coord.y)\n      this.addPoint(newVertex, this.vertices.length)\n    })\n    this.update()\n  }\n}\n\nBaseline.prototype = Object.create(Shape.prototype)\nBaseline.prototype.constructor = Baseline\n\nBaseline.prototype.getBlueprint = function (myIndex, parentId, keepId) {\n  if (this.modified) {\n    this.elements.polyCoords = this.getPolygonCoords()\n  }\n  //this.attributes.id = keepId ? this.id : `${parentId}l${myIndex + 1}`\n  this.attributes.id = this.id\n\n  this.setReadingOrder(myIndex)\n\n  this.elements.baselineCoords = this.vertices.map((vertex) => ({\n    x: vertex.left,\n    y: vertex.top,\n  }))\n  this.elements.words = this.words.map((word, index) =>\n    word.getBlueprint(index, this.attributes.id, keepId)\n  )\n  this.elements.text = this.text\n  return { attributes: this.attributes, elements: this.elements }\n}\n\nBaseline.prototype.getType = function () {\n  return Shape.TYPE.BASELINE\n}\n\nBaseline.prototype.getLayout = function () {\n  return {\n    type: 'Baseline',\n    text: this.text,\n    id: this.id,\n    structureType: this.getStructureType(),\n  }\n}\n\nBaseline.prototype.getVertex = function (x, y, id) {\n  let vertex = this.myFabric.getBaselineCircle(x, y, id)\n  let me = this\n  this.lastAddedVertex = vertex\n\n  vertex.select = () => {\n    if (this.activeVertex) {\n      this.activeVertex.set('fill', vertex.defaultColor)\n    }\n    this.activeVertex = vertex\n    this.activeVertex.set('fill', vertex.selectedColor)\n    this.canvas.requestRenderAll()\n  }\n\n  vertex.unSelect = () => {\n    if (this.activeVertex) {\n      this.activeVertex.set('fill', vertex.defaultColor)\n      this.activeVertex = null\n    }\n    this.canvas.requestRenderAll()\n  }\n\n  vertex.on('mousedown', function (o) {\n    me.tempCoords = { left: this.left, top: this.top }\n\n    this.select()\n\n    if (me.state === Shape.STATE.REMOVE_VERTEX) {\n      if (me.vertices.length > 2) {\n        let index = me.vertices.findIndex((v) => v.id === o.target.id)\n        me.removePoint(o.target.id)\n        // console.log('removed at index ' + index)\n        me.modified = true\n        me.actionHandler.addAction({\n          type: ACTION_TYPE.REMOVE_POINT,\n          shape_id: me.id,\n          point_id: o.target.id,\n          point_index: index,\n        })\n      }\n    }\n  })\n  vertex.on('moving', function (o) {\n    me.update({ geometricLines: false })\n  })\n  vertex.on('mousedblclick', function (o) {\n    // me.groupSelect()\n  })\n  vertex.on('mouseup', function (o) {\n    if (\n      me.tempCoords &&\n      me.state != Shape.STATE.GROUP_SELECTION &&\n      (me.tempCoords.left != this.left || me.tempCoords.top != this.top)\n    ) {\n      //console.log('a vertex was moved!')\n      me.update()\n      me.modified = true\n      me.actionHandler.addAction({\n        type: ACTION_TYPE.MOVE_POINT,\n        shape_id: me.id,\n        point_id: this.id,\n        old_coords: me.tempCoords,\n        new_coords: { left: this.left, top: this.top },\n      })\n      me.tempCoords = null\n    }\n  })\n  // vertex.on('mouseover', () => {\n  //   if (this.state === Shape.STATE.EDIT) {\n  //     vertex.set({ radius: vertex.defaultRadius * 1.5 })\n  //     vertex.bringToFront()\n  //     this.canvas.requestRenderAll()\n  //     this.hoveredVertex = vertex\n  //   }\n  // })\n\n  return vertex\n}\n\nBaseline.prototype.setState = function (state) {\n  if (this.activeVertex) {\n    this.activeVertex.unSelect()\n  }\n\n  if (this.prevLine || this.previewCircle) {\n    this.canvas.remove(this.prevLine, this.previewCircle)\n    this.prevLine = null\n    this.previewCircle = null\n  }\n\n  // if (\n  //   this.state === Shape.STATE.GROUP_SELECTION &&\n  //   state != Shape.STATE.GROUP_SELECTION\n  // ) {\n  //   this.unGroupSelect()\n  // }\n  if (\n    this.state === Shape.STATE.REMOVE_VERTEX &&\n    state != Shape.STATE.REMOVE_VERTEX\n  ) {\n    this.vertices.map((v) => {\n      v.set({ hoverCursor: 'default' })\n    })\n  }\n  if (state === Shape.STATE.ADD_VERTEX) {\n    this.previewVertex(this.lastMousePosition.x, this.lastMousePosition.y)\n  }\n  if (state === Shape.STATE.REMOVE_VERTEX) {\n    this.vertices.map((v) => {\n      v.set({ hoverCursor: 'pointer' })\n    })\n  }\n  // if (\n  //   state === Shape.STATE.GROUP_SELECTION &&\n  //   this.state != Shape.STATE.GROUP_SELECTION\n  // ) {\n  //   this.groupSelect()\n  // }\n  if (state === Shape.STATE.EDIT && this.state != Shape.STATE.EDIT) {\n    this.canvas.discardActiveObject()\n    this.canvas.requestRenderAll()\n  }\n  log(state)\n  this.state = state\n}\n\nBaseline.prototype.handleClickEvent = function (event) {\n  if (this.state === Shape.STATE.ADD_VERTEX) {\n    if (this.insertionPosition) {\n      this.insertVertex(this.insertionPosition.x, this.insertionPosition.y)\n      //this.lines = calcLines(this.vertices)\n    }\n  }\n\n  if (this.state === Shape.STATE.GROUP_SELECTION) {\n    // // console.log(event.target)\n    // if (event.target) {\n    //   console.log(event.target.type)\n    //   //console.log(\"ungrouped\");\n    // }\n    // let pointer = this.canvas.getPointer(event)\n    // let point = [pointer.x, pointer.y]\n    // console.log(pointInPolygon(point, this.polyCoords))\n  }\n  if (this.state === Shape.STATE.EDIT) {\n    //   let pointer = this.canvas.getPointer(event)\n    //   let point = [pointer.x, pointer.y]\n    //   if (\n    //     pointInPolygon(point, this.polyCoords) &&\n    //     !event.newSelection &&\n    //     !event.target\n    //   ) {\n    //     this.setState(Shape.STATE.GROUP_SELECTION)\n    //   }\n  }\n}\n\nBaseline.prototype.handleMouseUpEvent = function (position) {\n  //console.log('mouse up')\n  if (this.state === Shape.STATE.FIRST_DRAW) {\n    let newVertex = this.getVertex(position.x, position.y)\n    this.addPoint(newVertex, this.vertices.length)\n  }\n}\n\nBaseline.prototype.handleDBLClickEvent = function (event, setButtonState) {\n  if (this.state === Shape.STATE.FIRST_DRAW) {\n    // this.removeLastAddedVertex()\n    // this.setState(Shape.STATE.EDIT)\n    // this.unSelect()\n  }\n  if (this.state === Shape.STATE.ADD_VERTEX) {\n    //move this to editor\n    this.removeLastAddedVertex()\n    this.state = Shape.STATE.EDIT\n    setButtonState(Editor.BUTTON.POINTER)\n  }\n}\n\nBaseline.prototype.handleMouseMoveEvent = function (event) {\n  if (this.state === Shape.STATE.ADD_VERTEX) {\n    let mousePosition = this.canvas.getPointer(event.e)\n    this.previewVertex(mousePosition.x, mousePosition.y)\n  } else {\n    if (this.state === Shape.STATE.FIRST_DRAW) {\n      let mousePosition = this.canvas.getPointer(event.e)\n      this.previewFirstDraw(mousePosition.x, mousePosition.y)\n    } else {\n      if (this.prevLine || this.previewCircle) {\n        this.canvas.remove(this.prevLine, this.previewCircle)\n        this.prevLine = null\n        this.previewCircle = null\n      }\n    }\n  }\n  if (this.state === Shape.STATE.EDIT) {\n    if (this.preview) {\n      let pointer = this.canvas.getPointer(event.e)\n      let minDistanceToCreate = 2\n      this.canvas.remove(this.runningVertex)\n      let { line, point } = projectPointer(this.geometricLines, pointer)\n      if (point && line) {\n        this.runningVertex = this.myFabric.getRunningCircle(point[0], point[1])\n        let self = this\n        this.runningVertex.on('mousedown', function (o) {\n          self.preview = false\n        })\n        this.runningVertex.on('moving', function (o) {\n          let parent1 = self.getVertexById(line.parentIds[0])\n          let parent2 = self.getVertexById(line.parentIds[1])\n          let parentDistance = distanceBetween(\n            parent1.left,\n            parent1.top,\n            parent2.left,\n            parent2.top\n          )\n          let distanceOverVertex =\n            distanceBetween(this.left, this.top, parent1.left, parent1.top) +\n            distanceBetween(this.left, this.top, parent2.left, parent2.top)\n\n          let opacity =\n            (distanceOverVertex - parentDistance) / minDistanceToCreate + 0.2\n\n          // console.log('distminusdist: ' + (distanceOverVertex - parentDistance))\n\n          self.canvas.remove(...self.prevLines)\n          self.prevLines = [\n            self.myFabric.getPreviewLine(\n              [this.left, this.top, parent1.left, parent1.top],\n              opacity\n            ),\n            self.myFabric.getPreviewLine(\n              [this.left, this.top, parent2.left, parent2.top],\n              opacity\n            ),\n          ]\n          this.set('opacity', opacity)\n          self.canvas.add(...self.prevLines)\n        })\n        this.runningVertex.on('mouseup', function (o) {\n          let parent1 = self.getVertexById(line.parentIds[0])\n          let parent2 = self.getVertexById(line.parentIds[1])\n          let parentDistance = distanceBetween(\n            parent1.left,\n            parent1.top,\n            parent2.left,\n            parent2.top\n          )\n          let distanceOverVertex =\n            distanceBetween(this.left, this.top, parent1.left, parent1.top) +\n            distanceBetween(this.left, this.top, parent2.left, parent2.top)\n\n          // console.log(parentDistance)\n          // console.log(distanceOverVertex)\n          if (distanceOverVertex - parentDistance > minDistanceToCreate) {\n            self.canvas.remove(this)\n            let newVertex = self.getVertex(this.left, this.top)\n            self.modified = true\n            self.actionHandler.addAction({\n              type: ACTION_TYPE.ADD_POINT,\n              shape_id: self.id,\n              point_id: newVertex.id,\n              point_index: self.getVertexIndex(line.parentIds[1]),\n            })\n            self.addPoint(newVertex, self.getVertexIndex(line.parentIds[1]))\n            self.canvas.setActiveObject(newVertex)\n            newVertex.fire('mouseover')\n            newVertex.select()\n          }\n          self.preview = true\n          self.canvas.remove(...self.prevLines)\n          self.canvas.remove(this)\n        })\n        this.canvas.add(this.runningVertex)\n        this.runningVertex.sendToBack()\n        this.canvas.requestRenderAll()\n      }\n    }\n  }\n}\n\n// Baseline.prototype.handleMouseOver = function (event) {\n//   if (event.target && event.target.id === this.id) {\n//     console.log('in ' + event.target.type)\n//   }\n// }\n\nBaseline.prototype.handleMouseOut = function (event) {\n  // if (event.target?.type === 'circle') {\n  //   if (this.hoveredVertex) {\n  //     this.hoveredVertex.set({ radius: this.hoveredVertex.defaultRadius })\n  //     this.canvas.discardActiveObject()\n  //     this.canvas.requestRenderAll()\n  //     this.hoveredVertex = null\n  //   }\n  // }\n}\n\nBaseline.prototype.addWord = function (word, index) {\n  this.words.splice(index, 0, word)\n}\n\nBaseline.prototype.select = function () {\n  this.selected = true\n  this.canvas.remove(this.polygon)\n  this.canvas.remove(...this.vertices)\n  this.canvas.add(...this.vertices)\n  this.update()\n  // console.log(`selected: ${this.id}`)\n  // console.log(`text: ${this.text}`)\n  // console.log(this.words)\n}\n\nBaseline.prototype.unSelect = function () {\n  this.selected = false\n  this.setState(Shape.STATE.EDIT)\n  this.canvas.remove(...this.arrows)\n  this.canvas.remove(...this.vertices)\n  this.canvas.remove(this.prevLine, this.previewCircle, this.runningVertex)\n  this.prevLine = null\n  this.previewCircle = null\n\n  this.polygon.set('opacity', 0.2)\n  this.line.set('opacity', 0.5)\n}\n\nBaseline.prototype.removeLastAddedVertex = function () {\n  const index = this.vertices.indexOf(this.lastAddedVertex)\n  if (index > -1) {\n    this.vertices.splice(index, 1)\n    this.canvas.remove(this.lastAddedVertex)\n    this.update()\n  }\n}\n\nBaseline.prototype.insertVertex = function (x, y) {\n  let newVertex = this.getVertex(x, y)\n  this.modified = true\n  this.actionHandler.addAction({\n    type: ACTION_TYPE.ADD_POINT,\n    shape_id: this.id,\n    point_id: newVertex.id,\n    point_index: this.insertionPosition.index,\n  })\n  this.addPoint(newVertex, this.insertionPosition.index)\n}\n\nBaseline.prototype.previewVertex = function (x, y) {\n  this.canvas.remove(this.prevLine)\n  let first = this.vertices[0]\n  let last = this.vertices[this.vertices.length - 1]\n  let current\n  let index\n  if (\n    distanceBetween(first.left, first.top, x, y) <\n    distanceBetween(last.left, last.top, x, y)\n  ) {\n    current = first\n    index = 0\n  } else {\n    current = last\n    index = this.vertices.length\n  }\n\n  this.prevLine = this.myFabric.getPreviewLine([\n    x,\n    y,\n    current.left,\n    current.top,\n  ])\n  this.insertionPosition = { x: x, y: y, index: index }\n  this.canvas.add(this.prevLine)\n\n  // this.canvas.remove(this.previewCircle, this.prevLine)\n  // this.previewCircle = null\n\n  // //this needs claenUp\n  // this.insertionPosition = null\n  // let first = this.vertices[0]\n  // let last = this.vertices[this.vertices.length - 1]\n  // let current\n  // let index\n  // let x1 = x\n  // let y1 = y\n  // let x3\n  // let y3\n  // let x2\n  // let y2\n  // if (\n  //   distanceBetween(first.left, first.top, x, y) <\n  //   distanceBetween(last.left, last.top, x, y)\n  // ) {\n  //   current = first\n  //   x3 = current.left\n  //   y3 = current.top\n  //   x2 = this.vertices[1].left\n  //   y2 = this.vertices[1].top\n  //   index = 0\n  // } else {\n  //   current = last\n  //   x3 = current.left\n  //   y3 = current.top\n  //   x2 = this.vertices[this.vertices.length - 2].left\n  //   y2 = this.vertices[this.vertices.length - 2].top\n  //   index = this.vertices.length\n  // }\n\n  // this.lines.map((line) => {\n  //   if (pointOnLine([x, y], line, 40)) {\n  //     this.previewCircle = getPreviewCircle(x, y)\n  //     this.insertionPosition = { x: x, y: y, index: line[2].index }\n  //   }\n  // })\n  // if (this.previewCircle) {\n  //   this.canvas.add(this.previewCircle)\n  // }\n\n  // const getAngle = ({ x: x1, y: y1 }, { x: x2, y: y2 }) => {\n  //   const dot = x1 * x2 + y1 * y2\n  //   const det = x1 * y2 - y1 * x2\n  //   const angle = (Math.atan2(det, dot) / Math.PI) * 180\n  //   return (angle + 360) % 360\n  // }\n  // let angle = getAngle(\n  //   {\n  //     x: x1 - x3,\n  //     y: y1 - y3,\n  //   },\n  //   {\n  //     x: x2 - x3,\n  //     y: y2 - y3,\n  //   }\n  // )\n\n  // if (angle < 270 && angle > 90) {\n  //   this.prevLine = getPreviewLine([x, y, current.left, current.top])\n  //   this.insertionPosition = { x: x, y: y, index: index }\n  //   this.canvas.add(this.prevLine)\n  // }\n}\nBaseline.prototype.previewFirstDraw = function (x, y) {\n  let newestVertex = this.vertices[this.vertices.length - 1]\n  if (newestVertex == null) return\n  this.canvas.remove(this.prevLine)\n  this.prevLine = this.myFabric.getPreviewLine([\n    x,\n    y,\n    newestVertex.left,\n    newestVertex.top,\n  ])\n\n  this.canvas.add(this.prevLine)\n}\n\nBaseline.prototype.getCenter = function () {\n  const coords = this.vertices.map(({ left, top }) => [left, top])\n  return polygonMean(coords)\n}\n\n// Baseline.prototype.groupSelect = function () {\n//   this.removeFromCanvas()\n//   this.group = this.getGroup()\n\n//   this.tempCoords = this.myFabric.getGroupData(this.group)\n\n//   this.canvas.add(this.group)\n//   this.canvas.setActiveObject(this.group)\n// }\n\n// Baseline.prototype.unGroupSelect = function () {\n//   this.canvas.remove(this.group)\n//   this.canvas.discardActiveObject()\n\n//   let coords = this.myFabric.getGroupData(this.group)\n\n//   if (!isEqual(this.tempCoords, coords)) {\n//     // console.log('the group was moved!')\n//     this.modified = true\n//     this.actionHandler.addAction({\n//       type: ACTION_TYPE.MOVE_SHAPE,\n//       shape_id: this.id,\n//       old_coords: this.tempCoords.vertices,\n//       new_coords: coords.vertices,\n//     })\n//     this.tempCoords = null\n//   }\n//   this.moveAllPoints(coords.vertices)\n// }\n\nBaseline.prototype.getGroup = function () {\n  let vertices = this.vertices.map((v) =>\n    this.myFabric.clone(v).set('opacity', 0.5)\n  )\n  let arrows = this.arrows.map((a) =>\n    this.myFabric.clone(a).set('opacity', 0.5)\n  )\n\n  let polygon = this.myFabric.clone(this.polygon)\n  let line = this.myFabric.clone(this.line).set('opacity', 0.5)\n  let members = vertices.concat(arrows).concat(polygon).concat(line)\n\n  return new fabric.Group(members, {\n    id: this.id,\n    hasControls: true,\n    cornerStyle: 'circle',\n    padding: 0,\n    cornerSize: 8,\n    cornerColor: 'transparent',\n    transparentCorners: true,\n    cornerStrokeColor: 'blue',\n    lockSkewingX: true,\n    lockSkewingY: true,\n  }).setControlsVisibility({\n    mtr: false,\n  })\n}\n\nBaseline.prototype.showRed = function () {\n  if (this.polygon.fill === this.polygon.defaultColor) {\n    this.polygon.set('fill', this.polygon.deleteColor)\n    this.canvas.requestRenderAll()\n  }\n}\n\nBaseline.prototype.showNormal = function () {\n  if (this.polygon.fill === this.polygon.deleteColor) {\n    this.polygon.set('fill', this.polygon.defaultColor)\n    this.canvas.requestRenderAll()\n  }\n}\n\n// Baseline.prototype.smallUpdate = function () {\n//   this.canvas.remove(this.line)\n//   this.canvas.remove(...this.arrows)\n//   this.canvas.remove(this.polygon)\n\n//   let polyVertices = this.vertices.map((vertex) => {\n//     return [vertex.left, vertex.top]\n//   })\n//   let { line, arrows } = this.myFabric.getLineElements(polyVertices, this.id)\n//   this.line = line\n//   this.arrows = arrows\n\n//   let { polygon, polyCoords } = this.myFabric.getPolygon(polyVertices, this.id)\n\n//   this.polygon = polygon\n//   this.polyCoords = polyCoords\n\n//   this.polygon.set('opacity', 0.3)\n//   this.canvas.add(...this.arrows)\n//   this.canvas.add(this.line)\n//   this.canvas.add(this.polygon)\n//   this.canvas.sendToBack(this.line)\n//   this.canvas.sendToBack(this.polygon)\n// }\n\nBaseline.prototype.update = function (\n  { bounds = true, geometricLines = true } = {\n    bounds: true,\n    geometricLines: true,\n  }\n) {\n  if (!this.isVisible()) {\n    this.removeFromCanvas()\n    return\n  }\n  this.updateVertexSize()\n  this.updateStructureText()\n  this.updateReadingOrderText()\n  this.updateVertices()\n  if (bounds) {\n    this.updateLineAndArrows()\n    this.updatePolygon()\n  }\n  if (geometricLines) {\n    this.updateGeometricLines({ chop: true })\n  }\n\n  // this.canvas.remove(this.line)\n  // this.canvas.remove(...this.arrows)\n  // this.canvas.remove(this.polygon)\n\n  // let polyVertices = this.vertices.map((vertex) => {\n  //   return [vertex.left, vertex.top]\n  // })\n  // let { line, arrows } = this.myFabric.getLineElements(polyVertices, this.id)\n  // this.line = line\n  // this.arrows = arrows\n\n  // let { polygon, polyCoords } = this.myFabric.getPolygon(polyVertices, this.id)\n\n  // this.lines = calcLines(this.vertices).slice(0, -1)\n\n  // this.polygon = polygon\n  // this.polyCoords = polyCoords\n\n  // if (this.selected) {\n  //   this.polygon.set('opacity', 0.3)\n  //   this.canvas.add(...this.arrows)\n  //   if (this.canvas.contains(this.vertices[0]) === false) {\n  //     this.canvas.add(...this.vertices)\n  //   }\n  // } else {\n  //   this.canvas.remove(...this.vertices)\n  //   this.polygon.set('opacity', 0.2)\n  //   this.line.set('opacity', 0.5)\n  // }\n  // this.canvas.add(this.line)\n  // this.canvas.add(this.polygon)\n  // this.canvas.sendToBack(this.line)\n  // this.canvas.sendToBack(this.polygon)\n\n  if (this.state === Shape.STATE.FIRST_DRAW) {\n    this.canvas.remove(this.polygon)\n    this.canvas.add(...this.vertices)\n  }\n}\n\nBaseline.prototype.updateLineAndArrows = function () {\n  this.canvas.remove(this.line)\n  this.canvas.remove(...this.arrows)\n  const polyVertices = this.vertices.map((vertex) => {\n    return [vertex.left, vertex.top]\n  })\n  const { line, arrows } = this.myFabric.getLineElements(polyVertices, this.id)\n  this.line = line\n  this.arrows = arrows\n  if (this.selected) {\n    this.canvas.add(...this.arrows)\n  } else {\n    this.line.set('opacity', 0.5)\n  }\n  this.canvas.add(this.line)\n  this.canvas.sendToBack(this.line)\n}\n\nBaseline.prototype.updatePolygon = function () {\n  this.canvas.remove(this.polygon)\n  const polyVertices = this.vertices.map((vertex) => {\n    return [vertex.left, vertex.top]\n  })\n  const { polygon, polyCoords } = this.myFabric.getPolygon(\n    polyVertices,\n    this.id\n  )\n  this.polygon = polygon\n  this.polyCoords = polyCoords\n  if (this.selected) {\n    this.polygon.set('opacity', 0.3)\n  } else {\n    this.polygon.set('opacity', 0.2)\n  }\n  this.canvas.add(this.polygon)\n  this.canvas.sendToBack(this.polygon)\n}\n\nBaseline.prototype.getPolygonCoords = function () {\n  return this.polyCoords.map((coord) => ({\n    x: coord[0],\n    y: coord[1],\n  }))\n}\n\nBaseline.prototype.getArea = function () {\n  return this.polyCoords\n}\n\nBaseline.prototype.removeFromCanvas = function () {\n  this.canvas.remove(...this.vertices)\n  this.canvas.remove(this.line)\n  this.canvas.remove(...this.arrows)\n  this.canvas.remove(this.polygon)\n  this.canvas.remove(this.prevLine)\n  this.canvas.remove(this.runningVertex)\n  this.canvas.remove(this.structureText)\n  this.canvas.remove(this.readingOrderText)\n  this.canvas.discardActiveObject()\n  //console.log('Removed! id: ' + this.id)\n}\n\nBaseline.prototype.removeChildsFromCanvas = function () {\n  this.words.map((w) => {\n    w.unSelect()\n    w.removeFromCanvas()\n  })\n}\n\nexport default Baseline\n","import {\n  projectPointer,\n  calcLines,\n  distanceBetween,\n  getRectCoords,\n} from '../geometryFunctions.js'\nimport Shape from './Shape.js'\nimport { polygonBounds, lineAngle, lineLength, pointTranslate } from 'geometric'\nimport { ACTION_TYPE } from '../singletons/actionHandler.js'\nimport { Singleton as IdHandler } from '../singletons/IdHandler.js'\n\nimport Baseline from './Baseline.js'\nimport { isEqual } from 'lodash'\n\nfunction Region(canvas, blueprint) {\n  Shape.call(this, canvas)\n  this.id = IdHandler.instance().requestId('r')\n\n  this.baselines = []\n  this.line = {}\n  this.background = {}\n  this.group = {}\n\n  this.pointerOnLine = false\n  this.invisibleVertex = null\n  this.tempCoords = {}\n\n  this.initCoord = null\n\n  if (blueprint) {\n    this.attributes = blueprint.attributes\n    this.elements = blueprint.elements\n    this.id = IdHandler.instance().requestId(blueprint.attributes.id)\n\n    this.text = blueprint.elements.text\n    this.baselines = blueprint.elements.textLines.map(\n      (blueprint) => new Baseline(this.canvas, blueprint)\n    )\n    blueprint.elements.coords.map((coord) => {\n      let newVertex = this.getVertex(coord.x, coord.y)\n      this.addPoint(newVertex, this.vertices.length)\n    })\n    this.update()\n  }\n  //console.log(this.attributes)\n}\nRegion.prototype = Object.create(Shape.prototype)\nRegion.prototype.constructor = Region\n\nRegion.prototype.getBlueprint = function (myIndex, keepId) {\n  if (!this.attributes || !this.elements) {\n    this.elements = {\n      coords: {},\n      textLines: [],\n      text: '',\n    }\n  }\n  //this.attributes.id = keepId ? this.id : `r${myIndex + 1}`\n  this.attributes.id = this.id\n  this.setReadingOrder(myIndex)\n  this.elements.coords = this.vertices.map((vertex) => ({\n    x: vertex.left,\n    y: vertex.top,\n  }))\n  this.elements.textLines = this.baselines.map((line, index) =>\n    line.getBlueprint(index, this.attributes.id, keepId)\n  )\n  this.elements.text = this.text\n\n  return { type: 'text', attributes: this.attributes, elements: this.elements }\n}\n\nRegion.prototype.getType = function () {\n  return Shape.TYPE.REGION\n}\n\nRegion.prototype.getLayout = function () {\n  return {\n    type: 'Region',\n    id: this.id,\n    children: this.baselines.map((l) => l.getLayout()),\n    structureType: this.getStructureType(),\n  }\n}\n\nRegion.prototype.setState = function (state) {\n  // if (state === Shape.STATE.ADD_VERTEX) {\n  //   this.lines = calcLines(this.vertices)\n  // }\n  // if (\n  //   this.state === Shape.STATE.GROUP_SELECTION &&\n  //   state != Shape.STATE.GROUP_SELECTION\n  // ) {\n  //   this.unGroupSelect()\n  // }\n  // if (\n  //   this.state === Shape.STATE.LARGE_GROUP_SELECTION &&\n  //   state != Shape.STATE.LARGE_GROUP_SELECTION\n  // ) {\n  //   this.unLargeGroupSelect()\n  // }\n  // if (\n  //   state === Shape.STATE.GROUP_SELECTION &&\n  //   this.state != Shape.STATE.GROUP_SELECTION\n  // ) {\n  //   this.groupSelect()\n  // }\n  // if (\n  //   state === Shape.STATE.LARGE_GROUP_SELECTION &&\n  //   this.state != Shape.STATE.LARGE_GROUP_SELECTION\n  // ) {\n  //   this.largeGroupSelect()\n  // }\n  if (this.activeVertex) {\n    this.activeVertex.unSelect()\n  }\n  // if (this.vertices.length > 1) {\n  //   this.lines = calcLines(this.vertices)\n  // }\n  this.state = state\n}\n\nRegion.prototype.adjustToBaseline = function (polygonCoords) {\n  // console.log(polygonCoords)\n  let coordsArrays = polygonCoords.map((coord) => {\n    return [coord.x, coord.y]\n  })\n  //console.log(coordsArrays)\n  let bounds = polygonBounds(coordsArrays)\n  //console.log(bounds)\n  let coords = [\n    { x: bounds[0][0], y: bounds[0][1] },\n    { x: bounds[1][0], y: bounds[0][1] },\n    { x: bounds[1][0], y: bounds[1][1] },\n    { x: bounds[0][0], y: bounds[1][1] },\n  ]\n  coords.map((coord) => {\n    let newVertex = this.getVertex(coord.x, coord.y)\n    this.addPoint(newVertex, this.vertices.length)\n  })\n}\n\nRegion.prototype.removeFromCanvas = function () {\n  this.canvas.remove(...this.vertices)\n  this.canvas.remove(this.background)\n  this.canvas.remove(this.line)\n  this.canvas.remove(this.previewRect)\n  this.canvas.remove(this.runningVertex)\n  this.canvas.remove(this.structureText)\n  this.canvas.remove(this.readingOrderText)\n  this.canvas.discardActiveObject()\n}\n\nRegion.prototype.removeChildsFromCanvas = function () {\n  this.baselines.map((bl) => {\n    bl.unSelect()\n    bl.removeFromCanvas()\n    bl.removeChildsFromCanvas()\n  })\n}\n\nRegion.prototype.mark = function () {\n  this.background.set('opacity', 0.1)\n  this.canvas.contains(this.background) || this.canvas.add(this.background)\n}\n\nRegion.prototype.unMark = function () {\n  this.background.set('opacity', 0.2)\n  this.canvas.remove(this.background)\n}\n\nRegion.prototype.select = function () {\n  this.selected = true\n  this.update()\n}\n\nRegion.prototype.unSelect = function () {\n  this.selected = false\n  this.canvas.remove(...this.vertices)\n  this.canvas.remove(this.background)\n  this.canvas.remove(this.previewRect, this.runningVertex)\n}\n\n// Region.prototype.groupSelect = function () {\n//   this.removeFromCanvas()\n//   this.group = this.getGroup()\n\n//   this.tempCoords = this.myFabric.getGroupData(this.group)\n\n//   this.canvas.add(this.group)\n//   this.canvas.setActiveObject(this.group)\n// }\n\n// Region.prototype.unGroupSelect = function () {\n//   this.canvas.remove(this.group)\n//   this.canvas.discardActiveObject()\n\n//   let coords = this.myFabric.getGroupData(this.group)\n\n//   if (!isEqual(this.tempCoords, coords)) {\n//     // console.log('the group was moved!')\n//     this.modified = true\n//     this.actionHandler.addAction({\n//       type: ACTION_TYPE.MOVE_SHAPE,\n//       shape_id: this.id,\n//       old_coords: this.tempCoords.vertices,\n//       new_coords: coords.vertices,\n//     })\n//     this.tempCoords = null\n//   }\n//   this.moveAllPoints(coords.vertices)\n// }\n\n// Region.prototype.largeGroupSelect = function () {\n//   this.removeFromCanvas()\n//   this.baselines.map((line) => line.removeFromCanvas())\n//   this.group = this.getLargeGroup()\n\n//   this.tempCoords = this.myFabric.getGroupData(this.group)\n\n//   this.canvas.add(this.group)\n//   this.canvas.setActiveObject(this.group)\n// }\n\n// Region.prototype.unLargeGroupSelect = function () {\n//   this.canvas.remove(this.group)\n//   this.canvas.discardActiveObject()\n\n//   let coords = this.myFabric.getGroupData(this.group)\n\n//   if (!isEqual(this.tempCoords, coords)) {\n//     // console.log('the group was moved!')\n//     this.actionHandler.addAction({\n//       type: ACTION_TYPE.MULTI_ACTION,\n//       actions: this.baselines\n//         .map((line, index) => ({\n//           type: ACTION_TYPE.MOVE_SHAPE,\n//           shape_id: line.id,\n//           old_coords: this.tempCoords.groups[index].vertices,\n//           new_coords: coords.groups[index].vertices,\n//         }))\n//         .concat({\n//           type: ACTION_TYPE.MOVE_SHAPE,\n//           shape_id: this.id,\n//           old_coords: this.tempCoords.vertices,\n//           new_coords: coords.vertices,\n//         }),\n//     })\n//   }\n//   this.modified = true\n//   this.moveAllPoints(coords.vertices)\n//   this.baselines.map((line, index) => {\n//     line.moveAllPoints(coords.groups[index].vertices)\n//   })\n//   this.tempCoords = null\n// }\n\nRegion.prototype.getGroup = function () {\n  let vertices = this.vertices.map((v) =>\n    this.myFabric.clone(v).set({ radius: 0 })\n  )\n  let background = this.myFabric.clone(this.background)\n  let members = vertices.concat(background)\n\n  return new fabric.Group(members, {\n    id: this.id,\n    hasControls: true,\n    subTargetCheck: true,\n    cornerStyle: 'circle',\n    padding: 0,\n    cornerSize: 8,\n    cornerColor: 'transparent',\n    transparentCorners: true,\n    cornerStrokeColor: 'green',\n    lockSkewingX: true,\n    lockSkewingY: true,\n  }).setControlsVisibility({\n    mtr: false,\n  })\n}\n\nRegion.prototype.getLargeGroup = function () {\n  // let vertices = this.vertices.map((v) => this.myFabric.clone(v))\n  // let background = this.myFabric.clone(this.background)\n  // let lines = this.baselines.map((line) => line.getGroup())\n  // let members = vertices.concat(background).concat(lines)\n  // return new fabric.Group(members, {\n  //   id: this.id,\n  //   hasControls: false,\n  // })\n}\n\nRegion.prototype.addBaseline = function (line, index) {\n  if (index == null) {\n    index = this.expectedIndex(line)\n  }\n  this.baselines.splice(index, 0, line)\n}\n\nRegion.prototype.removeBaseline = function (id) {\n  this.baselines = this.baselines.filter((l) => l.id != id)\n}\n\nRegion.prototype.expectedIndex = function (line) {\n  let newLineY = line.vertices[0].top\n  let yValues = this.baselines\n    .map((parentLine) => parentLine.vertices[0].top)\n    .sort(function (a, b) {\n      return a - b\n    })\n  let newIndex = yValues.findIndex((value) => value > newLineY)\n  return newIndex === -1 ? yValues.length : newIndex\n}\n\nRegion.prototype.getBaselines = function () {\n  return [...this.baselines]\n}\n\nRegion.prototype.showRed = function () {\n  if (this.background.fill === this.background.defaultColor) {\n    this.background.set('fill', this.background.deleteColor)\n    this.canvas.add(this.background)\n  }\n}\n\nRegion.prototype.showNormal = function () {\n  if (this.background.fill === this.background.deleteColor) {\n    this.background.set('fill', this.background.defaultColor)\n    this.canvas.remove(this.background)\n  }\n}\n\nRegion.prototype.update = function (\n  { bounds = true, geometricLines = true } = {\n    bounds: true,\n    geometricLines: true,\n  }\n) {\n  if (!this.isVisible()) {\n    this.removeFromCanvas()\n    return\n  }\n  this.updateVertexSize()\n  this.updateStructureText()\n  this.updateReadingOrderText()\n  this.updateVertices()\n  if (bounds) {\n    this.updateLine()\n    this.updateBackground()\n  }\n  if (geometricLines) {\n    this.updateGeometricLines()\n  }\n}\n\nRegion.prototype.updateLine = function () {\n  this.canvas.remove(this.line)\n  const polyVertices = this.vertices.map((vertex) => {\n    return { x: vertex.left, y: vertex.top }\n  })\n  this.line = this.myFabric.getRegionLine(polyVertices, this.id)\n  this.canvas.add(this.line)\n  this.canvas.sendToBack(this.line)\n}\n\nRegion.prototype.updateBackground = function () {\n  this.canvas.remove(this.background)\n  const polyVertices = this.vertices.map((vertex) => {\n    return { x: vertex.left, y: vertex.top }\n  })\n  this.background = this.myFabric.getRegionBackground(polyVertices, this.id)\n  if (this.selected) {\n    this.canvas.add(this.background)\n    this.canvas.sendToBack(this.background)\n  }\n}\n\n// Region.prototype.smallUpdate = function () {\n//   this.canvas.remove(this.line)\n//   this.canvas.remove(this.background)\n\n//   let polyVertices = this.vertices.map((vertex) => {\n//     return { x: vertex.left, y: vertex.top }\n//   })\n//   this.line = this.myFabric.getRegionLine(polyVertices, this.id)\n//   this.background = this.myFabric.getRegionBackground(polyVertices, this.id)\n\n//   //this.canvas.add(this.line)\n//   this.canvas.add(this.background)\n//   this.canvas.sendToBack(this.line)\n//   this.canvas.sendToBack(this.background)\n// }\n\nRegion.prototype.getArea = function () {\n  return this.vertices.map((vertex) => {\n    return [vertex.left, vertex.top]\n  })\n}\n\nRegion.prototype.getCoords = function () {\n  return this.vertices.map((vertex) => ({\n    x: vertex.left,\n    y: vertex.top,\n  }))\n}\n\nRegion.prototype.showPreviewRect = function (x, y) {\n  this.canvas.remove(this.previewRect)\n  this.previewRect = this.myFabric.getPreviewRect(\n    this.initCoord.x,\n    this.initCoord.y,\n    x,\n    y\n  )\n  // console.log(this.previewRect)\n  this.canvas.add(this.previewRect)\n}\n\n// Region.prototype.handleClickEvent = function (event) {\n//   if (this.state === Shape.STATE.GROUP_SELECTION) {\n//     this.canvas.setActiveObject(this.group)\n//   }\n// }\n\nRegion.prototype.handleDBLClickEvent = function (event, setButtonState) {}\n\nRegion.prototype.handleMouseMoveEvent = function (event) {\n  if (this.state === Shape.STATE.FIRST_DRAW) {\n    if (this.initCoord) {\n      let mousePosition = this.canvas.getPointer(event.e)\n      this.showPreviewRect(mousePosition.x, mousePosition.y)\n    }\n  } else if (this.state === Shape.STATE.EDIT) {\n    if (this.preview) {\n      let pointer = this.canvas.getPointer(event.e)\n      let minDistanceToCreate = 2\n      this.canvas.remove(this.runningVertex)\n      let { line, point } = projectPointer(this.geometricLines, pointer)\n      if (point && line) {\n        this.runningVertex = this.myFabric.getRunningCircle(point[0], point[1])\n        let self = this\n        this.runningVertex.on('mousedown', function (o) {\n          self.preview = false\n        })\n        this.runningVertex.on('moving', function (o) {\n          let parent1 = self.getVertexById(line.parentIds[0])\n          let parent2 = self.getVertexById(line.parentIds[1])\n          let parentDistance = distanceBetween(\n            parent1.left,\n            parent1.top,\n            parent2.left,\n            parent2.top\n          )\n          let distanceOverVertex =\n            distanceBetween(this.left, this.top, parent1.left, parent1.top) +\n            distanceBetween(this.left, this.top, parent2.left, parent2.top)\n\n          let opacity =\n            (distanceOverVertex - parentDistance) / minDistanceToCreate + 0.2\n\n          // console.log('distminusdist: ' + (distanceOverVertex - parentDistance))\n\n          self.canvas.remove(...self.prevLines)\n          self.prevLines = [\n            self.myFabric\n              .getPreviewLine(\n                [this.left, this.top, parent1.left, parent1.top],\n                opacity\n              )\n              .set('stroke', 'green'),\n            self.myFabric\n              .getPreviewLine(\n                [this.left, this.top, parent2.left, parent2.top],\n                opacity\n              )\n              .set('stroke', 'green'),\n          ]\n          this.set('opacity', opacity)\n          self.canvas.add(...self.prevLines)\n        })\n        this.runningVertex.on('mouseup', function (o) {\n          let parent1 = self.getVertexById(line.parentIds[0])\n          let parent2 = self.getVertexById(line.parentIds[1])\n          let parentDistance = distanceBetween(\n            parent1.left,\n            parent1.top,\n            parent2.left,\n            parent2.top\n          )\n          let distanceOverVertex =\n            distanceBetween(this.left, this.top, parent1.left, parent1.top) +\n            distanceBetween(this.left, this.top, parent2.left, parent2.top)\n\n          // console.log(parentDistance)\n          // console.log(distanceOverVertex)\n          if (distanceOverVertex - parentDistance > minDistanceToCreate) {\n            self.canvas.remove(this)\n            let newVertex = self.getVertex(this.left, this.top)\n            self.actionHandler.addAction({\n              type: ACTION_TYPE.ADD_POINT,\n              shape_id: self.id,\n              point_id: newVertex.id,\n              point_index: self.getVertexIndex(line.parentIds[1]),\n            })\n            self.addPoint(newVertex, self.getVertexIndex(line.parentIds[1]))\n            self.canvas.setActiveObject(newVertex)\n            newVertex.fire('mouseover')\n            newVertex.select()\n          }\n          self.preview = true\n          self.canvas.remove(...self.prevLines)\n          self.canvas.remove(this)\n        })\n        this.canvas.add(this.runningVertex)\n        this.runningVertex.set('fill', 'green')\n        this.runningVertex.sendToBack()\n        this.canvas.requestRenderAll()\n      }\n    }\n  } else if (this.previewRect || this.runningVertex) {\n    this.canvas.remove(this.previewRect, this.runningVertex)\n    this.previewRect = null\n    this.runningVertex = null\n  }\n\n  // if (this.state === Shape.STATE.RESIZE) {\n  //   //Here a helper vertex is defined, that can move a line together with its parent Vertices\n  //   let pointer = this.canvas.getPointer(event.e)\n  //   this.canvas.remove(this.invisibleVertex)\n  //   let { line, point } = projectPointer(this.lines, pointer)\n  //   if (point && line) {\n  //     this.invisibleVertex = this.myFabric.getInvisibleVertex(\n  //       point[0],\n  //       point[1],\n  //       getRandomId()\n  //     )\n  //     let self = this\n  //     this.invisibleVertex.on('mousedown', function (o) {\n  //       self.startDragPosition = [this.left, this.top]\n  //       self.parents = {\n  //         first: [\n  //           self.getVertexById(line.parentIds[0]).left,\n  //           self.getVertexById(line.parentIds[0]).top,\n  //         ],\n  //         second: [\n  //           self.getVertexById(line.parentIds[1]).left,\n  //           self.getVertexById(line.parentIds[1]).top,\n  //         ],\n  //       }\n  //     })\n  //     this.invisibleVertex.on('moving', function (o) {\n  //       let stopDragPosition = [this.left, this.top]\n  //       let length = lineLength([self.startDragPosition, stopDragPosition])\n  //       let angle = lineAngle([self.startDragPosition, stopDragPosition])\n  //       let point = pointTranslate(self.parents.first, angle, length)\n  //       self.moveVertexById(line.parentIds[0], point)\n  //       point = pointTranslate(self.parents.second, angle, length)\n  //       self.moveVertexById(line.parentIds[1], point)\n  //       self.update()\n  //     })\n  //     this.canvas.add(this.invisibleVertex)\n  //   }\n  // }\n\n  // // if (this.state === Shape.STATE.ADD_VERTEX) {\n  // //   let pointer = this.canvas.getPointer(event.e)\n  // //   this.canvas.remove(this.prevVertex)\n  // //   let { point } = projectPointer(this.lines, pointer)\n  // //   if (point) {\n  // //     this.prevVertex = getRegionVertex(point[0], point[1], getRandomId())\n  // //     this.canvas.add(this.prevVertex)\n  // //   }\n  // // }\n}\n\nRegion.prototype.handleMouseOut = function (event) {\n  //console.log(event.target.type)\n  // if (event.target && event.target.type === 'circle') {\n  //   if (this.hoveredVertex) {\n  //     //this.setState(Shape.STATE.GROUP_SELECTION)\n  //     this.hoveredVertex.set({ radius: this.hoveredVertex.smallSize })\n  //     if (this.hoveredVertex.fill === this.hoveredVertex.deleteColor) {\n  //       this.hoveredVertex.set({ fill: this.hoveredVertex.defaultColor })\n  //     }\n  //     this.canvas.discardActiveObject()\n  //     this.canvas.requestRenderAll()\n  //     this.hoveredVertex = null\n  //   }\n  // }\n}\n\n// Region.prototype.drawVertex = function (x, y) {\n//   let vertex = getRegionVertex(x, y, getRandomId())\n//   this.canvas.add(vertex)\n//   let me = this\n//   vertex.on('moving', function (o) {\n//     me.update()\n//   })\n//   vertex.on('mouseover', function (o) {\n//     if (this.radius != 5) {\n//       this.set({ radius: 5 })\n//       this.bringToFront()\n//       me.canvas.requestRenderAll()\n//       me.hoveredVertex = this\n//     }\n//   })\n//   this.vertices.push(vertex)\n// }\n\nRegion.prototype.getVertex = function (x, y, id) {\n  let vertex = this.myFabric.getRegionCircle(x, y, id)\n\n  this.lastAddedVertex = vertex\n  let me = this\n\n  vertex.select = function () {\n    if (me.activeVertex) {\n      me.activeVertex.set('fill', this.defaultColor)\n    }\n    me.activeVertex = this\n    me.activeVertex.set('fill', this.selectedColor)\n  }\n\n  vertex.unSelect = function () {\n    if (me.activeVertex) {\n      me.activeVertex.set('fill', this.defaultColor)\n      me.activeVertex = null\n    }\n  }\n\n  vertex.on('mousedown', function (o) {\n    me.tempCoords = { left: this.left, top: this.top }\n    this.select()\n    if (me.state === Shape.STATE.REMOVE_VERTEX) {\n      if (me.vertices.length > 3) {\n        let index = me.vertices.findIndex((v) => v.id === o.target.id)\n        me.removePoint(o.target.id)\n        // console.log('removed at index ' + index)\n        me.actionHandler.addAction({\n          type: ACTION_TYPE.REMOVE_POINT,\n          shape_id: me.id,\n          point_id: o.target.id,\n          point_index: index,\n        })\n      }\n    }\n  })\n  vertex.on('moving', function (o) {\n    me.update({ geometricLines: false })\n  })\n  vertex.on('mouseup', function (o) {\n    if (\n      me.tempCoords &&\n      me.state != Shape.STATE.GROUP_SELECTION &&\n      (me.tempCoords.left != this.left || me.tempCoords.top != this.top)\n    ) {\n      // console.log('a vertex was moved!')\n      me.update()\n      me.actionHandler.addAction({\n        type: ACTION_TYPE.MOVE_POINT,\n        shape_id: me.id,\n        point_id: this.id,\n        old_coords: me.tempCoords,\n        new_coords: { left: this.left, top: this.top },\n      })\n      me.tempCoords = null\n    }\n  })\n  // vertex.on('mouseover', function (o) {\n  //   if (\n  //     this.radius != this.largeSize &&\n  //     (me.state === Shape.STATE.EDIT || me.state === Shape.STATE.REMOVE_VERTEX)\n  //   ) {\n  //     this.set({ radius: this.largeSize })\n  //     this.bringToFront()\n  //     me.canvas.requestRenderAll()\n  //     me.hoveredVertex = this\n  //     if (me.state === Shape.STATE.REMOVE_VERTEX) {\n  //       this.set({ fill: this.deleteColor })\n  //     }\n  //   }\n  // })\n  return vertex\n}\n\nRegion.prototype.moveVertexById = function (id, position) {\n  let foundVertex = this.vertices.find((v) => {\n    return v.id === id\n  })\n  foundVertex.set({ left: position[0], top: position[1] })\n  foundVertex.setCoords()\n  this.canvas.requestRenderAll()\n}\n\nexport default Region\n","var Singleton = (function () {\n  var instance\n\n  function createInstance() {\n    var object = new ModalHandler()\n    return object\n  }\n\n  return {\n    instance: function () {\n      if (!instance) {\n        instance = createInstance()\n      }\n      return instance\n    },\n  }\n})()\n\nfunction ModalHandler() {\n  this.open = null\n}\n\nModalHandler.prototype.setOpenFn = function (openFn) {\n  this.open = openFn\n}\n\nModalHandler.prototype.open = function (heading, text) {\n  this.openFn(heading, text)\n}\n\nexport { Singleton }\n","import { calcLines } from '../geometryFunctions.js'\nimport { Singleton as IdHandler } from '../singletons/IdHandler.js'\nimport { Singleton as MyFabric } from '../myFabric.js'\n\nimport Shape from './Shape.js'\nimport Baseline from './Baseline.js'\nimport { polygonHull } from 'geometric'\n\nfunction Cell(canvas, blueprint) {\n  Shape.call(this, canvas)\n  this.id = IdHandler.instance().requestId('c')\n  this.canvas = canvas\n  this.myFabric = MyFabric.instance()\n  this.row = null\n  this.col = null\n  this.rowSpan = 1\n  this.colSpan = 1\n  this.spanVertices = null\n  this.vertices = []\n  this.invisibleVertices = []\n  this.baselines = []\n  this.selected = false\n  this.tableSelected = false\n  this.type = Cell.TYPE.REGULAR\n\n  if (blueprint) {\n    this.attributes = blueprint.attributes\n    let { row, col, rowSpan, colSpan } = blueprint.attributes\n    this.row = parseInt(row)\n    this.col = parseInt(col)\n    this.rowSpan = rowSpan ? parseInt(rowSpan) : 1\n    this.colSpan = colSpan ? parseInt(colSpan) : 1\n    this.elements = blueprint.elements\n    this.id = IdHandler.instance().requestId(blueprint.attributes.id)\n\n    this.baselines = blueprint.elements.textLines.map(\n      (blueprint) => new Baseline(this.canvas, blueprint)\n    )\n  }\n}\nCell.prototype = Object.create(Shape.prototype)\nCell.prototype.constructor = Cell\n\nCell.TYPE = Object.freeze({\n  REGULAR: 0,\n  PARENT: 1,\n  CHILD: 2,\n})\n\nCell.prototype.getBlueprint = function (myIndex, parentId, keepId) {\n  //this.attributes.id = keepId ? this.id : `${parentId}c${myIndex + 1}`\n  this.attributes.id = this.id\n  this.attributes.row = this.row\n  this.attributes.col = this.col\n  this.attributes.rowSpan = this.rowSpan\n  this.attributes.colSpan = this.colSpan\n\n  if (this.isSpanParent()) {\n    this.elements.coords = this.spanVertices.map((vertex) => ({\n      x: vertex.left,\n      y: vertex.top,\n    }))\n  } else {\n    this.elements.coords = this.vertices.map((vertex) => ({\n      x: vertex.left,\n      y: vertex.top,\n    }))\n  }\n  this.elements.textLines = this.baselines.map((line, index) =>\n    line.getBlueprint(index, this.attributes.id, keepId)\n  )\n  this.elements.cornerPoints = this.getCornerPointsIndices()\n\n  return { attributes: this.attributes, elements: this.elements }\n}\n\nCell.prototype.getType = function () {\n  return Shape.TYPE.CELL\n}\n\nCell.prototype.getLayout = function () {\n  return {\n    type: 'Cell',\n    id: this.id,\n    children: this.baselines.map((l) => l.getLayout()),\n    structureType: this.getStructureType(),\n  }\n}\n\n// Cell.prototype.on = function (key, handler) {\n//   this.eventHandlers[key].push(handler)\n// }\n\n// Cell.prototype.emit = function (key, event) {\n//   this.eventHandlers[key].map((h) => h(event))\n// }\n\nCell.prototype.select = function () {\n  // console.log('cell selected')\n  let vertices = this.isSpanParent() ? this.spanVertices : this.vertices\n  if (this.selected) return\n  this.selected = true\n  this.baselines.map((line) => {\n    line.polygon.set('fill', 'purple')\n  })\n  this.canvas.add(...vertices)\n  this.updateBackground(vertices)\n}\n\nCell.prototype.unSelect = function () {\n  // console.log('unselected called')\n  if (!this.selected) return\n  let vertices = this.isSpanParent() ? this.spanVertices : this.vertices\n  this.selected = false\n  this.baselines.map((line) => {\n    line.polygon.set('fill', 'blue')\n  })\n  this.canvas.remove(...vertices)\n  this.updateBackground(vertices)\n  if (!this.tableSelected) {\n    this.showFrameOnly()\n  }\n}\n\nCell.prototype.handleMouseMoveEvent = function (event) {\n  // this.emit('mouseMove', event)\n}\n\nCell.prototype.updateFrame = function (vertices) {\n  this.canvas.remove(this.frame)\n  this.frame = this.myFabric.getCellFrame(\n    vertices.map(({ left, top }) => ({ x: left, y: top }))\n  )\n  this.canvas.add(this.frame)\n  this.canvas.sendToBack(this.frame)\n}\n\nCell.prototype.updateBackground = function (vertices, opacity) {\n  this.canvas.remove(this.background)\n  this.background = this.myFabric.getCellBackground(\n    vertices.map(({ left, top }) => ({ x: left, y: top })),\n    this.getColor(),\n    opacity || this.getOpacity()\n  )\n  this.canvas.add(this.background)\n  this.canvas.sendToBack(this.background)\n}\n\nCell.prototype.isSpanParent = function () {\n  return this.type === Cell.TYPE.PARENT\n}\n\nCell.prototype.isSpanChild = function () {\n  return this.type === Cell.TYPE.CHILD\n}\n\nCell.prototype.getCornerPointsIndices = function () {\n  return [\n    0,\n    this.rowSpan,\n    this.rowSpan + this.colSpan,\n    this.rowSpan * 2 + this.colSpan,\n  ]\n}\n\nCell.prototype.getColor = function () {\n  if (this.selected) return 'green'\n  if (this.isSpanParent()) return 'purple'\n  return (this.row + this.col) % 2 === 0 ? 'yellow' : 'orange'\n}\n\nCell.prototype.getOpacity = function () {\n  if (this.selected) return 0.3\n  return 0.1\n}\n\nCell.prototype.mark = function () {\n  let vertices = this.isSpanParent() ? this.spanVertices : this.vertices\n  this.updateBackground(vertices, 0.1)\n}\n\nCell.prototype.unMark = function () {\n  this.showFrameOnly()\n}\n\nCell.prototype.update = function () {\n  if (!this.isVisible()) {\n    this.removeFromCanvas()\n    return\n  }\n  this.updateVertexSize()\n  this.updateStructureText()\n  this.updateGeometricLines()\n\n  if (this.isSpanChild()) return\n  let vertices = this.isSpanParent() ? this.spanVertices : this.vertices\n  this.updateFrame(vertices)\n  this.updateBackground(vertices)\n  if (this.selected) {\n    this.canvas.remove(...vertices)\n    this.canvas.add(...vertices)\n  }\n  if (!this.tableSelected) {\n    this.showFrameOnly()\n  }\n}\n\nCell.prototype.setType = function (type) {\n  this.type = type\n}\n\nCell.prototype.addBaseline = function (line, index) {\n  if (index == null) {\n    let newLineY = line.vertices[0].top\n    let yValues = this.baselines\n      .map((parentLine) => parentLine.vertices[0].top)\n      .sort(function (a, b) {\n        return a - b\n      })\n    let newIndex = yValues.findIndex((value) => value > newLineY)\n    newIndex = newIndex === -1 ? yValues.length : newIndex\n    // console.log(newIndex)\n    this.baselines.splice(newIndex, 0, line)\n    return\n  }\n  this.baselines.splice(index, 0, line)\n}\n\nCell.prototype.removeBaseline = function (id) {\n  this.baselines = this.baselines.filter((l) => l.id != id)\n}\n\nCell.prototype.expectedIndex = function (line) {\n  let newLineY = line.vertices[0].top\n  let yValues = this.baselines\n    .map((parentLine) => parentLine.vertices[0].top)\n    .sort(function (a, b) {\n      return a - b\n    })\n  let newIndex = yValues.findIndex((value) => value > newLineY)\n  return newIndex === -1 ? yValues.length : newIndex\n}\n\nCell.prototype.removeFromCanvas = function () {\n  // console.log('remove calleds')\n  this.canvas.remove(this.background)\n  this.canvas.remove(this.frame)\n  this.canvas.remove(...this.vertices)\n  this.canvas.remove(this.structureText)\n  this.canvas.remove(this.readingOrderText)\n}\n\nCell.prototype.showFrameOnly = function () {\n  // console.log('sfo')\n  let vertices = this.isSpanParent() ? this.spanVertices : this.vertices\n  this.canvas.remove(this.background)\n  this.canvas.remove(...vertices)\n  if (this.isSpanChild()) {\n    this.canvas.remove(this.frame)\n  } else {\n    // console.log('add frame1')\n    if (!this.canvas.contains(this.frame)) {\n      // console.log('add frame2')\n      this.canvas.add(this.frame)\n    }\n  }\n}\n\nCell.prototype.getArea = function () {\n  let vertices = this.isSpanParent()\n    ? this.spanVertices\n    : this.isSpanChild()\n    ? []\n    : this.vertices\n  return vertices.map((p) => [p.left, p.top])\n}\n\nCell.prototype.getCellPolygon = function () {\n  return this.vertices.map((p) => [p.left, p.top])\n}\n\nCell.prototype.setVertices = function (vertices) {\n  this.vertices = [...vertices]\n}\n\nCell.prototype.setSpanVertices = function (vertices) {\n  this.spanVertices = [...vertices]\n}\n\nCell.prototype.getLeftVertices = function () {\n  let [first, second] = this.vertices\n  return [first, second]\n}\nCell.prototype.getBottomVertices = function () {\n  let [, second, third] = this.vertices\n  return [second, third]\n}\nCell.prototype.getRightVertices = function () {\n  let [, , third, fourth] = this.vertices\n  return [fourth, third]\n}\nCell.prototype.getTopVertices = function () {\n  let [first, , , fourth] = this.vertices\n  return [first, fourth]\n}\n\nexport default Cell\n","import Cell from './Cell'\nimport {\n  getRectCoords,\n  getClosestLine,\n  getSplitCoords,\n  whatSideOfLine,\n  getMergePartners,\n} from '../geometryFunctions.js'\n\nimport { lineIntersectsLine } from 'geometric'\n\nfunction CellMatrix(rowNumber, colNumber) {\n  this.matrix = [...Array(rowNumber)].map((e) => Array(colNumber).fill(null))\n  this.deletedCells = []\n}\n\nCellMatrix.ROWSPAN = Object.freeze({\n  span: true,\n  rowspan: true,\n})\nCellMatrix.COLSPAN = Object.freeze({\n  span: true,\n  colspan: true,\n})\n\nCellMatrix.SPAN_PACK = Object.freeze({\n  pack: true,\n})\n\nCellMatrix.prototype.log = function () {\n  let stringMatrix = this.matrix.map((row, rowIndex) =>\n    row.map((c) => {\n      if (!c) return 'null'\n      if (!c.id) return JSON.stringify(c)\n      let string = c.vertices.reduce((string, v) => {\n        let newString = `${string}${v.id}, `\n        return newString\n      }, '')\n      return `[${c.id}] ${string.slice(0, -2)}`\n    })\n  )\n  //console.table(stringMatrix)\n}\n\nCellMatrix.prototype.setCell = function (cell, row, col) {\n  if (row > this.matrix.length - 1 || col > this.matrix[0].length - 1) return\n  this.removeCell(row, col)\n  this.matrix[row][col] = cell\n  //console.log('cell was set at ' + row + ' ' + col)\n}\n\nCellMatrix.prototype.removeCell = function (row, col) {\n  let oldCell = this.matrix[row]?.[col]\n  if (oldCell == null) return\n  // console.log('cell removed at ' + row + ' ' + col)\n  oldCell.unSelect()\n  oldCell.removeFromCanvas()\n  this.deletedCells.push({ object: oldCell, row, col })\n  this.matrix[row][col] = null\n  return oldCell\n}\n\nCellMatrix.prototype.removeCellById = function (id) {\n  let { row, col } = this.allCells().find((c) => c?.id === id)\n  this.removeCell(row, col)\n}\n\nCellMatrix.prototype.getCell = function (row, col) {\n  if (!this.matrix[row]) return\n  return this.matrix[row][col]\n}\n\nCellMatrix.prototype.getCellById = function (id) {\n  return this.allCells().find((c) => c?.id === id)\n}\n\nCellMatrix.prototype.getWidth = function () {\n  return this.matrix[0].length\n}\n\nCellMatrix.prototype.getHeight = function () {\n  return this.matrix.length\n}\n\nCellMatrix.prototype.getCellsOfColumn = function (col) {\n  let transposed = this.getTransposedMatrix()\n  return transposed[col]\n}\n\nCellMatrix.prototype.getCellsOfRow = function (row) {\n  return this.matrix[row]\n}\n\nCellMatrix.prototype.createColumn = function (colIndex) {\n  this.matrix.map((row) => {\n    row.splice(colIndex, 0, null)\n  })\n  //console.log('column was created at ' + colIndex)\n}\n\nCellMatrix.prototype.createRow = function (rowIndex) {\n  this.matrix.splice(\n    rowIndex,\n    0,\n    this.matrix[0].map((r) => null)\n  )\n  //console.log('row was created at ' + rowIndex)\n}\n\nCellMatrix.prototype.deleteColumn = function (colIndex) {\n  this.matrix.map((row, rowIndex) => {\n    this.removeCell(rowIndex, colIndex)\n    row.splice(colIndex, 1)\n  })\n  //console.log('column was deleted at ' + colIndex)\n}\n\nCellMatrix.prototype.deleteRow = function (rowIndex) {\n  this.matrix[rowIndex].map((_, colIndex) => {\n    this.removeCell(rowIndex, colIndex)\n  })\n  this.matrix.splice(rowIndex, 1)\n  //console.log('row was deleted at ' + rowIndex)\n}\n\nCellMatrix.prototype.noVerticalSplit = function (splitLine, cells) {\n  const horizontalCellLines = cells.reduce(\n    (acc, cell) => [\n      ...acc,\n      cell\n        .getTopVertices()\n        .reduce((points, v) => [...points, [v.left, v.top]], []),\n      cell\n        .getBottomVertices()\n        .reduce((points, v) => [...points, [v.left, v.top]], []),\n    ],\n    []\n  )\n  log(horizontalCellLines)\n  return horizontalCellLines.some((line) => {\n    log(!lineIntersectsLine(line, splitLine))\n    log(line)\n    log(splitLine)\n    return !lineIntersectsLine(line, splitLine)\n  })\n}\n\nCellMatrix.prototype.noHorizontalSplit = function (splitLine, cells) {\n  const verticalCellLines = cells.reduce(\n    (acc, cell) => [\n      ...acc,\n      cell\n        .getLeftVertices()\n        .reduce((points, v) => [...points, [v.left, v.top]], []),\n      cell\n        .getRightVertices()\n        .reduce((points, v) => [...points, [v.left, v.top]], []),\n    ],\n    []\n  )\n  // console.log(verticalCellLines)\n  return verticalCellLines.some((line) => !lineIntersectsLine(line, splitLine))\n}\n\nCellMatrix.prototype.splitForbidden = function (line, cells) {\n  console.log(cells)\n  console.log(line)\n  let bools = cells.map((cell) => {\n    let coords = getSplitCoords(cell, line).map((intem) => intem.vertices)\n    // console.log(coords)\n    if (coords.length != 3) return true\n    let verticalCorrect =\n      coords[0].length === 3 && coords[1].length === 4 && coords[2].length === 1\n    let horizontalCorrect =\n      coords[0].length === 2 && coords[1].length === 4 && coords[2].length === 2\n    if (verticalCorrect || horizontalCorrect) return false\n    return true\n  })\n  return bools.some((bool) => bool)\n}\n\nCellMatrix.prototype.removeForbidden = function (lineIndex, isVertical) {\n  if (lineIndex <= 0) return true\n  let lastIndex = isVertical ? this.matrix[0].length : this.matrix.length\n  return lastIndex <= lineIndex\n}\n\nCellMatrix.prototype.areVerticalNeighbors = function (cell1, cell2) {\n  let position1 = this.getPosition(cell1)\n  let position2 = this.getPosition(cell2)\n  let neighborRow =\n    position1.row === position2.row + 1 || position1.row === position2.row - 1\n  let sameCol = position1.col === position2.col\n  return neighborRow && sameCol\n}\n\nCellMatrix.prototype.areHorizontalNeighbors = function (cell1, cell2) {\n  let position1 = this.getPosition(cell1)\n  let position2 = this.getPosition(cell2)\n  let neighborCol =\n    position1.col === position2.col + 1 || position1.col === position2.col - 1\n  let sameRow = position1.row === position2.row\n  return neighborCol && sameRow\n}\n\nCellMatrix.prototype.getSharedVertexIds = function (cell1, cell2) {\n  return cell1.vertices\n    .filter((v) => cell2.vertices.includes(v))\n    .map((v) => v.id)\n}\n\nCellMatrix.prototype.updateCellProperties = function () {\n  if (this.allCells().some((cell) => cell == null)) {\n    console.log('Error: invalid Table (missing cell definition)')\n  }\n  this.allCells().map((c) => {\n    c.setType(Cell.TYPE.REGULAR)\n  })\n  this.matrix.map((row, rowIndex) => {\n    row.map((c, colIndex) => {\n      c.row = rowIndex\n      c.col = colIndex\n      if (c.rowSpan != 1 || c.colSpan != 1) {\n        if (this.incorrectValues(c)) {\n          c.rowSpan = 1\n          c.colSpan = 1\n          //console.log('SPAN WAS SET BACK')\n          return\n        }\n        let newVertices = this.getSpanVertices(\n          rowIndex,\n          colIndex,\n          c.rowSpan,\n          c.colSpan\n        )\n        c.setSpanVertices(newVertices)\n        c.setType(Cell.TYPE.PARENT)\n        this.getSpanChilds(rowIndex, colIndex, c.rowSpan, c.colSpan).map(\n          (child) => {\n            child.setType(Cell.TYPE.CHILD)\n            c.baselines.push(...child.baselines)\n            c.text = c.text + child.text\n            child.baselines = []\n            child.text = ''\n            child.unSelect()\n            child.removeFromCanvas()\n          }\n        )\n      }\n    })\n  })\n}\n\nCellMatrix.prototype.getSpanVertices = function (row, col, rowspan, colspan) {\n  // console.log(rowspan, colspan)\n  let rowSteps = Array.from({ length: rowspan }, (_, i) => i)\n  let colSteps = Array.from({ length: colspan }, (_, i) => i)\n  // console.log(rowSteps, colSteps)\n  let vertices = []\n  rowSteps.map((step) => {\n    vertices.push(...this.getCell(row + step, col).getLeftVertices())\n  })\n  // console.log(vertices.map((v) => v.id))\n  colSteps.map((step) => {\n    vertices.push(\n      ...this.getCell(row + rowSteps.length - 1, col + step).getBottomVertices()\n    )\n  })\n  rowSteps.reverse().map((step) => {\n    vertices.push(\n      ...this.getCell(row + step, col + colSteps.length - 1).getRightVertices()\n    )\n  })\n  colSteps.reverse().map((step) => {\n    vertices.push(...this.getCell(row, col + step).getTopVertices())\n  })\n  // console.log(vertices.map((v) => v.id))\n  return [...new Set(vertices)]\n}\n\nCellMatrix.prototype.getSpanChilds = function (row, col, rowspan, colspan) {\n  let rowSteps = Array.from({ length: rowspan }, (_, i) => i)\n  let colSteps = Array.from({ length: colspan }, (_, i) => i)\n  let childs = []\n  rowSteps.map((rStep) => {\n    colSteps.map((cStep) => {\n      if (rStep > 0 || cStep > 0) {\n        childs.push(this.getCell(row + rStep, col + cStep))\n      }\n    })\n  })\n  return childs\n}\n\nCellMatrix.prototype.incorrectValues = function (cell) {\n  let rowSteps = Array.from({ length: cell.rowSpan }, (_, i) => i)\n  let colSteps = Array.from({ length: cell.colSpan }, (_, i) => i)\n  // console.log(rowSteps, colSteps)\n  let { row, col } = this.getPosition(cell)\n\n  let foundError = rowSteps.some((rStep) =>\n    colSteps.some((cStep) => {\n      let child = this.getCell(row + rStep, col + cStep)\n      return child == null || child.isSpanParent() || child.isSpanChild()\n    })\n  )\n  //console.log(foundError)\n  return foundError\n}\n\nCellMatrix.prototype.getPosition = function (cell) {\n  let position = {}\n  this.matrix.find((row, rowIndex) => {\n    return row.find((c, colIndex) => {\n      position.row = rowIndex\n      position.col = colIndex\n      return c === cell\n    })\n  })\n  return position\n}\n\nCellMatrix.prototype.allCells = function () {\n  return this.matrix.flat()\n}\n\nCellMatrix.prototype.allVertices = function () {\n  return [\n    ...this.allCells().reduce(\n      (all, c) => new Set([...all, ...c.vertices]),\n      new Set()\n    ),\n  ]\n}\n\nCellMatrix.prototype.getTransposedMatrix = function () {\n  return this.matrix[0].map((_, colIndex) =>\n    this.matrix.map((row) => row[colIndex])\n  )\n}\n\nCellMatrix.prototype.rowExists = function (row) {\n  return this.matrix[row] ? true : false\n}\n\nCellMatrix.prototype.colExists = function (col) {\n  return this.matrix[0][col] ? true : false\n}\n\nCellMatrix.prototype.getVerticalCircles = function () {\n  let takenVertices = []\n\n  let list = []\n  this.getTransposedMatrix().map((col, index, cols) => {\n    list.push(\n      col.reduce((list, cell) => {\n        let leftVertices = cell\n          .getLeftVertices()\n          .filter((v) => !takenVertices.includes(v))\n        takenVertices.push(...leftVertices)\n        return [...list, ...leftVertices]\n      }, [])\n    )\n\n    if (index >= cols.length - 1) {\n      list.push(\n        col.reduce((list, cell) => {\n          let rightVertices = cell\n            .getRightVertices()\n            .filter((v) => !takenVertices.includes(v))\n          takenVertices.push(...rightVertices)\n          return [...list, ...rightVertices]\n        }, [])\n      )\n    }\n  })\n  return list\n}\n\nCellMatrix.prototype.getHorizontalCircles = function () {\n  let takenVertices = []\n\n  let list = []\n  this.matrix.map((row, index, rows) => {\n    list.push(\n      row.reduce((list, cell) => {\n        let topVertices = cell\n          .getTopVertices()\n          .filter((v) => !takenVertices.includes(v))\n        takenVertices.push(...topVertices)\n        return [...list, ...topVertices]\n      }, [])\n    )\n    if (index >= rows.length - 1) {\n      list.push(\n        row.reduce((list, cell) => {\n          let bottomVertices = cell\n            .getBottomVertices()\n            .filter((v) => !takenVertices.includes(v))\n          takenVertices.push(...bottomVertices)\n          return [...list, ...bottomVertices]\n        }, [])\n      )\n    }\n  })\n  return list\n}\n\nCellMatrix.prototype.getCellParent = function (row, col) {\n  return this.allCells().find((p) => {\n    // console.log(row, col)\n    // console.log(p.row, p.col)\n    // console.log(row >= p.row)\n    // console.log(row < p.row + p.rowSpan)\n    // console.log(col >= p.col)\n    // console.log(col < p.col + p.colSpan)\n    let found =\n      row >= p.row &&\n      row < p.row + p.rowSpan &&\n      col >= p.col &&\n      col < p.col + p.colSpan\n    // console.log(found)\n    return found\n  })\n}\n\nCellMatrix.prototype.getNeighbor = function (row, col, direction) {\n  const currentParent = this.getCellParent(row, col)\n  let neighbor\n  switch (direction) {\n    case 'right':\n      neighbor = this.getCell(row, col + 1)\n      break\n    case 'left':\n      neighbor = this.getCell(row, col - 1)\n      break\n    case 'top':\n      neighbor = this.getCell(row - 1, col)\n      break\n    case 'bottom':\n      neighbor = this.getCell(row + 1, col)\n      break\n  }\n  if (neighbor == null) return\n  const newParent = this.getCellParent(neighbor.row, neighbor.col)\n  if (currentParent === newParent) {\n    return this.getNeighbor(neighbor.row, neighbor.col, direction)\n  }\n  return neighbor\n}\n\nCellMatrix.prototype.mergeParents = function (cell1, cell2) {\n  const minRow = Math.min(cell1.row, cell2.row)\n  const minCol = Math.min(cell1.col, cell2.col)\n  const maxRow = Math.max(\n    cell1.row + cell1.rowSpan - 1,\n    cell2.row + cell2.rowSpan - 1\n  )\n  const maxCol = Math.max(\n    cell1.col + cell1.colSpan - 1,\n    cell2.col + cell2.colSpan - 1\n  )\n  // console.log(minRow, minCol, maxRow, maxCol)\n  const newParent = this.getCell(minRow, minCol)\n\n  const newRowSpan = maxRow - minRow + 1\n  const newColSpan = maxCol - minCol + 1\n  return { newParent, newRowSpan, newColSpan }\n}\n\nCellMatrix.prototype.getAllParents = function () {\n  return this.allCells().filter((c) => c.isSpanParent())\n}\n\nCellMatrix.prototype.getCellsOfVertex = function (id) {\n  return this.allCells().filter((cell) =>\n    cell.vertices.some((v) => v.id === id)\n  )\n}\n\nexport default CellMatrix\n","import { lineMidpoint, polygonHull, pointInPolygon } from 'geometric'\nimport { isEqual } from 'lodash'\nimport { ACTION_TYPE } from '../singletons/actionHandler.js'\nimport { Singleton as MyFabric } from '../myFabric.js'\nimport { Singleton as IdHandler } from '../singletons/IdHandler.js'\nimport { Singleton as ModalHandler } from '../singletons/ModalHandler.js'\n\nimport {\n  getRectCoords,\n  getClosestLine,\n  getSplitCoords,\n  whatSideOfLine,\n  getMergePartners,\n} from '../geometryFunctions.js'\nimport Cell from './Cell'\nimport CellMatrix from './CellMatrix.js'\nimport Shape from './Shape.js'\nimport {\n  projectPointer,\n  calcLines,\n  distanceBetween,\n} from '../geometryFunctions.js'\n\nfunction Table(canvas, blueprint) {\n  Shape.call(this, canvas)\n  this.id = IdHandler.instance().requestId('t')\n\n  this.state = Shape.STATE.EDIT\n\n  this.prev = true\n  this.hoverLine = null\n  this.hoveredVertex = null\n  this.mousePosition = {}\n\n  this.selected = false\n\n  //this.id = IdHandler.instance().get()\n  this.idHandler = IdHandler.instance()\n  this.canvas = canvas\n  this.myFabric = MyFabric.instance()\n\n  this.markedCell = null\n  this.background = {}\n  this.vertices = []\n  this.horizontalLines = []\n  this.verticalLines = []\n  this.cellMatrix = new CellMatrix(0, 0)\n\n  if (blueprint) {\n    this.attributes = blueprint.attributes\n    this.elements = blueprint.elements\n    this.id = IdHandler.instance().requestId(blueprint.attributes.id)\n\n    this.text = blueprint.elements.text\n    let cells = blueprint.elements.cells.map((blueprint) =>\n      this.createCell(blueprint)\n    )\n    if (!this.validateCells(cells)) {\n      this.setTableInvalid(cells)\n      return\n    }\n    cells = cells.reduce((acc, cell) => [...acc, ...this.requestChop(cell)], [])\n    let numberOfRows = cells.reduce(\n      (number, cell) => (cell.row >= number ? cell.row + 1 : number),\n      0\n    )\n    let numberOfCols = cells.reduce(\n      (number, cell) => (cell.col >= number ? cell.col + 1 : number),\n      0\n    )\n    this.cellMatrix = new CellMatrix(numberOfRows, numberOfCols)\n    cells.map((cell) => {\n      let vertices = cell.elements.coords.map(\n        (p) => this.getVertexByCoords(p.x, p.y) || this.creatVertex(p.x, p.y)\n      )\n      cell.setVertices(vertices)\n      this.cellMatrix.setCell(cell, cell.row, cell.col)\n    })\n    this.cellMatrix.log()\n    this.update()\n    this.unSelect()\n  }\n}\n\nTable.prototype = Object.create(Shape.prototype)\nTable.prototype.constructor = Table\n\nTable.prototype.getBlueprint = function (myIndex, keepId) {\n  if (!this.attributes || !this.elements) {\n    this.elements = {\n      coords: {},\n      textLines: [],\n      text: '',\n    }\n  }\n  //this.attributes.id = keepId ? this.id : `t${myIndex + 1}`\n  this.attributes.id = this.id\n  this.setReadingOrder(myIndex)\n  this.elements.coords = this.getTableCoords()\n  this.elements.cells = this.allCells()\n    .filter((c) => !c.isSpanChild())\n    .map((cell, index) => cell.getBlueprint(index, this.attributes.id, keepId))\n  this.elements.text = this.text\n\n  return { type: 'table', attributes: this.attributes, elements: this.elements }\n}\n\nTable.prototype.getType = function () {\n  return Shape.TYPE.TABLE\n}\n\nTable.prototype.getLayout = function () {\n  return {\n    type: 'Table',\n    id: this.id,\n    children: this.allCells()\n      .filter((c) => !c.isSpanChild())\n      .map((c) => c.getLayout()),\n    structureType: this.getStructureType(),\n  }\n}\n\nTable.prototype.getTableCoords = function () {\n  const maxRowIndex = this.cellMatrix.getHeight() - 1\n  const maxColIndex = this.cellMatrix.getWidth() - 1\n  const topLeft = this.cellMatrix.getCell(0, 0).vertices[0]\n  const topRight = this.cellMatrix.getCell(0, maxColIndex).vertices[3]\n  const bottomRight = this.cellMatrix.getCell(maxRowIndex, maxColIndex)\n    .vertices[2]\n  const bottomLeft = this.cellMatrix.getCell(maxRowIndex, 0).vertices[1]\n  return [topLeft, topRight, bottomRight, bottomLeft].map(({ left, top }) => ({\n    x: left,\n    y: top,\n  }))\n}\n\nTable.prototype.requestChop = function (cell) {\n  let row = cell.row\n  let col = cell.col\n  let colSpan = cell.colSpan\n  let coords = this.getCorrectedCoords(cell)\n  let tubes = this.getTubes(coords, colSpan)\n  let cells = tubes.reduce((acc, tube, index) => {\n    return [...acc, ...this.getCellsOfTube(tube, row + index, col)]\n  }, [])\n  let newParentCoords = cells[0].elements.coords\n  cells[0] = cell\n  cells[0].elements.coords = newParentCoords\n  return cells\n}\n\nTable.prototype.validateCells = function (cells) {\n  const positions = []\n  const maxRow = cells.reduce((acc, c) => (c.row > acc ? c.row : acc), 0)\n  const maxCol = cells.reduce((acc, c) => (c.col > acc ? c.col : acc), 0)\n  const rowSteps = Array.from({ length: maxRow + 1 }, (_, i) => i)\n  const colSteps = Array.from({ length: maxCol + 1 }, (_, i) => i)\n  const expectedPositions = rowSteps.reduce(\n    (acc, rStep) => [...acc, ...colSteps.map((cStep) => [rStep, cStep])],\n    []\n  )\n  const allCellsValid = cells.reduce((acc, cell) => {\n    const colSpan = cell.colSpan\n    const rowSpan = cell.rowSpan\n    const rowSteps = Array.from({ length: rowSpan }, (_, i) => i)\n    const colSteps = Array.from({ length: colSpan }, (_, i) => i)\n    rowSteps.map((rStep) => {\n      colSteps.map((cStep) => {\n        positions.push([cell.row + rStep, cell.col + cStep])\n      })\n    })\n    const coords = cell.elements.coords\n    const cornerPoints = cell.elements.cornerPoints\n    const expectedCoordsLength = rowSpan * 2 + colSpan * 2\n    const validCornerpoints =\n      JSON.stringify([0, rowSpan, rowSpan + colSpan, rowSpan * 2 + colSpan]) ===\n      JSON.stringify(cornerPoints)\n    const validCoordsLength = expectedCoordsLength === coords.length\n    if (validCoordsLength && validCornerpoints) return acc\n    if (expectedCoordsLength === 4 && coords.length > 4) return acc\n    //console.log('Table Error: Invalid Cell found')\n    ModalHandler.instance().open('Table Error', 'Invalid cell found')\n    return false\n  }, true)\n  const validPositions = expectedPositions.every((ep) => {\n    if (positions.some((p) => isEqual(ep, p))) return true\n    //console.log(`Table Error: Missing cell at row: ${ep[0]} col: ${ep[1]}`)\n    ModalHandler.instance().open(\n      'Table Error',\n      `Missing cell at row: ${ep[0]} col: ${ep[1]}`\n    )\n    return false\n  })\n  return allCellsValid && validPositions\n}\n\nTable.prototype.getCorrectedCoords = function (cell) {\n  const notSpanning = cell.rowSpan * 2 + cell.colSpan * 2 === 4\n  if (notSpanning && cell.elements.coords.length > 4) {\n    return cell.elements.coords.filter((_, index) =>\n      cell.elements.cornerPoints.includes(index)\n    )\n  }\n  return cell.elements.coords\n}\n\nTable.prototype.getTubes = function (coords, colSpan) {\n  let singleTube = colSpan * 2 + 2 === coords.length\n  if (singleTube) return [coords]\n\n  let coordsLength = coords.length\n\n  let [leftFirst, leftSecond] = coords\n  let lowerRest = coords.filter(\n    (_, index) => index > 1 && index <= coordsLength - colSpan - 2\n  )\n  let [rightFirst, rightSecond] = coords.filter(\n    (_, index) =>\n      index > coordsLength - colSpan - 2 && index <= coordsLength - colSpan\n  )\n  let upperMidCoords = [\n    ...coords.filter((_, index) => index > coordsLength - colSpan),\n  ]\n\n  let height = leftSecond.y - leftFirst.y\n  let lowerMidCoords = upperMidCoords\n    .map(({ x, y }) => ({ x: x, y: y + height }))\n    .reverse()\n\n  let tube = [\n    leftFirst,\n    leftSecond,\n    ...lowerMidCoords,\n    ...[rightFirst, rightSecond],\n    ...upperMidCoords,\n  ]\n  let nextCoords = [\n    leftSecond,\n    ...lowerRest,\n    rightFirst,\n    ...[...lowerMidCoords].reverse(),\n  ]\n  return [tube, ...this.getTubes(nextCoords, colSpan)]\n}\n\nTable.prototype.getCellsOfTube = function (tube, row, col) {\n  let newCells = []\n\n  const popLast = (coords) => {\n    let startIndex = coords.length / 2 - 1\n    let newCell = this.createCell()\n    newCell.col = col + startIndex - 1\n    newCell.row = row\n    newCell.elements = {\n      coords: [\n        coords[(startIndex + 3) % coords.length],\n        coords[startIndex],\n        coords[startIndex + 1],\n        coords[startIndex + 2],\n      ],\n    }\n    newCells = [newCell, ...newCells]\n    let copy = [...coords]\n    copy.splice(startIndex + 1, 2)\n    if (copy.length > 2) {\n      popLast(copy)\n    }\n  }\n  popLast(tube)\n  return newCells\n}\n\nTable.prototype.init = function (coords) {\n  this.cellMatrix = new CellMatrix(1, 1)\n  let cell = this.createCell()\n  let vertices = coords.map((p) => this.creatVertex(p.x, p.y))\n  cell.setVertices(vertices)\n  this.cellMatrix.setCell(cell, 0, 0)\n  this.cellMatrix.log()\n  this.update()\n}\n\nTable.prototype.update = function () {\n  if (!this.isVisible()) {\n    this.removeFromCanvas()\n    return\n  }\n  this.updateVertexSize()\n  this.updateStructureText()\n  this.updateReadingOrderText()\n  this.allCells().map((cell) => {\n    cell.tableSelected = this.selected\n  })\n  this.updateMatrix()\n  this.updateLines()\n  this.updateCells()\n  if (!this.selected) {\n    this.unSelect()\n  }\n}\n\nTable.prototype.allCells = function () {\n  return this.cellMatrix.allCells()\n}\n\nTable.prototype.updateMatrix = function () {\n  this.cellMatrix.updateCellProperties()\n}\n\n// Table.prototype.removeLonelyVertices = function () {\n//   let lonelyVertices = this.allVertices().filter((v) => {\n//     v.set({ radius: v.smallSize, evented: true })\n//     let cells = this.cellMatrix.getCellsOfVertex(v.id)\n//     return (\n//       cells.every((c) => c.isSpanParent() || c.isSpanChild()) &&\n//       cells.length === 4\n//     )\n//   })\n//   console.log(lonelyVertices)\n//   lonelyVertices.map((l) => {\n//     l.set({ radius: 0, evented: false })\n//   })\n//   this.canvas.requestRenderAll()\n// }\n\nTable.prototype.updateLines = function () {\n  let horizontalLines = this.cellMatrix\n    .getHorizontalCircles()\n    .map((circleLine, index) => {\n      return {\n        id: this.idHandler.requestId('tl'),\n        polygons: calcLines(circleLine)\n          .map(({ polygon }) => polygon)\n          .slice(0, -1),\n        vertices: [...circleLine],\n        isVertical: false,\n        index: index,\n      }\n    })\n  let verticalLines = this.cellMatrix\n    .getVerticalCircles()\n    .map((circleLine, index) => {\n      return {\n        id: this.idHandler.requestId('tl'),\n        polygons: calcLines(circleLine)\n          .map(({ polygon }) => polygon)\n          .slice(0, -1),\n        vertices: [...circleLine],\n        isVertical: true,\n        index: index,\n      }\n    })\n  this.lines = [...horizontalLines, ...verticalLines]\n}\n\nTable.prototype.updateCells = function () {\n  //why?\n  // this.cellMatrix.allCells().map((c) => c.removeFromCanvas())\n\n  this.cellMatrix.allCells().map((c) => c.update())\n}\n\n// Table.prototype.updateHorizontalLines = function () {\n//   let self = this\n//   this.canvas.remove(...this.horizontalLines)\n//   this.horizontalLines = []\n//   this.cellMatrix.getHorizontalCircles().map((circleLine) => {\n//     let newLine = this.myFabric.getHorizontalTableLine(circleLine)\n\n//     newLine.hulls = calcLines(circleLine)\n//       .map(({ polygon }) => polygon)\n//       .slice(0, -1)\n//     newLine.circles = [...circleLine]\n//     newLine.relations = this.getRelations(newLine)\n//     newLine.on('moving', function () {\n//       self.horizontalMovement(this)\n//     })\n//     newLine.on('moved', () => {\n//       this.updateCircles(newLine)\n//       this.updateCells()\n//       this.updateLines()\n//     })\n//     this.horizontalLines.push(newLine)\n//   })\n//   this.canvas.add(...this.horizontalLines)\n//   this.horizontalLines.map((line) => this.canvas.sendToBack(line))\n// }\n\n// Table.prototype.updateVerticalLines = function () {\n//   let self = this\n//   this.canvas.remove(...this.verticalLines)\n//   this.verticalLines = []\n//   this.cellMatrix.getVerticalCircles().map((circleLine) => {\n//     let newLine = this.myFabric.getVerticalTableLine(circleLine)\n\n//     newLine.hulls = calcLines(circleLine)\n//       .map(({ polygon }) => polygon)\n//       .slice(0, -1)\n//     newLine.circles = [...circleLine]\n//     newLine.relations = this.getRelations(newLine)\n\n//     newLine.on('moving', function () {\n//       self.verticalMovement(this)\n//     })\n//     newLine.on('moved', () => {\n//       this.updateCircles(newLine)\n//       this.updateCells()\n//       this.updateLines()\n//       this.allVertices().map((v) => this.canvas.bringToFront(v))\n//     })\n//     this.verticalLines.push(newLine)\n//   })\n//   this.canvas.add(...this.verticalLines)\n//   this.verticalLines.map((line) => this.canvas.sendToBack(line))\n// }\n\nTable.prototype.updateCircles = function (line) {\n  line.relations.map((relation, index) => {\n    let lineTransform = fabric.util.multiplyTransformMatrices(\n      line.calcTransformMatrix(),\n      relation\n    )\n    let decomposed = fabric.util.qrDecompose(lineTransform)\n    let currentCircle = line.vertices[index]\n    currentCircle.set({\n      left: decomposed.translateX,\n      top: decomposed.translateY,\n    })\n  })\n}\n\nTable.prototype.getPositionOfLine = function (id) {\n  //console.log(id)\n  //console.log(this.lines)\n  //console.log(positions.flat())\n  //\n  // console.log(foundLine)\n  // let foundIndex = this.verticalLines.findIndex((line) => line.id === id)\n  // if (foundIndex >= 0) {\n  //   return {\n  //     cols: [foundIndex - 1, foundIndex].filter((index) =>\n  //       this.cellMatrix.colExists(index)\n  //     ),\n  //   }\n  // }\n  // foundIndex = this.horizontalLines.findIndex((line) => line.id === id)\n  // if (foundIndex >= 0) {\n  //   return {\n  //     rows: [foundIndex - 1, foundIndex].filter((index) =>\n  //       this.cellMatrix.rowExists(index)\n  //     ),\n  //   }\n  // }\n}\n\nTable.prototype.getRelations = function (line, vertices) {\n  return vertices.map((v) => {\n    let vertexMatrix = v.calcTransformMatrix()\n    let inverseLineMatrix = fabric.util.invertTransform(\n      line.calcTransformMatrix()\n    )\n    return fabric.util.multiplyTransformMatrices(\n      inverseLineMatrix,\n      vertexMatrix\n    )\n  })\n}\n\n// Table.prototype.groupSelect = function () {\n//   //console.log('groupSelect')\n//   this.removeFromCanvas()\n//   this.group = this.getGroup()\n\n//   this.canvas.add(this.group)\n//   this.canvas.setActiveObject(this.group)\n// }\n\n// Table.prototype.largeGroupSelect = function () {\n//   this.removeFromCanvas()\n//   this.removeChildsFromCanvas()\n//   this.group = this.getLargeGroup()\n//   this.groupPosition = { x: this.group.left, y: this.group.top }\n\n//   this.canvas.add(this.group)\n//   this.canvas.setActiveObject(this.group)\n// }\n\nTable.prototype.getGroup = function () {\n  let lines = this.allLines().map((line) => this.myFabric.clone(line))\n  let backgrounds = this.getCellBackgrounds().map((background) =>\n    this.myFabric.clone(background)\n  )\n\n  let members = [...lines, ...backgrounds]\n\n  let group = new fabric.Group(members, {\n    id: this.id,\n    hasControls: true,\n    cornerStyle: 'circle',\n    padding: 0,\n    cornerSize: 12,\n    cornerColor: 'transparent',\n    transparentCorners: true,\n    cornerStrokeColor: 'yellow',\n    strokeUniform: true,\n  }).setControlsVisibility({\n    mtr: false,\n  })\n\n  let relations = this.allVertices().map((circle) => {\n    let circleMatrix = circle.calcTransformMatrix()\n    let inverseGroupMatrix = fabric.util.invertTransform(\n      group.calcTransformMatrix()\n    )\n    return fabric.util.multiplyTransformMatrices(\n      inverseGroupMatrix,\n      circleMatrix\n    )\n  })\n  group.relations = relations\n  return group\n}\n\nTable.prototype.getLargeGroup = function () {\n  let lines = this.allLines().map((line) => this.myFabric.clone(line))\n  let backgrounds = this.getCellBackgrounds().map((background) =>\n    this.myFabric.clone(background)\n  )\n\n  const baselines = this.getBaselines().map((line) => line.getGroup())\n\n  let members = [...lines, ...backgrounds, ...baselines]\n\n  let group = new fabric.Group(members, {\n    id: this.id,\n    hasControls: true,\n    cornerStyle: 'circle',\n    padding: 0,\n    cornerSize: 12,\n    cornerColor: 'transparent',\n    transparentCorners: true,\n    cornerStrokeColor: 'yellow',\n    strokeUniform: true,\n  }).setControlsVisibility({\n    mtr: false,\n  })\n  return group\n}\n\n// Table.prototype.unGroupSelect = function () {\n//   const oldCoords = this.allVertices().map(({ left, top }) => ({\n//     left,\n//     top,\n//   }))\n//   const newCoords = this.group.relations.map((relation) => {\n//     const circleTransform = fabric.util.multiplyTransformMatrices(\n//       this.group.calcTransformMatrix(),\n//       relation\n//     )\n//     const decomposed = fabric.util.qrDecompose(circleTransform)\n//     return { left: decomposed.translateX, top: decomposed.translateY }\n//   })\n\n//   if (!isEqual(oldCoords, newCoords)) {\n//     this.actionHandler.addAction({\n//       type: ACTION_TYPE.MOVE_SHAPE,\n//       shape_id: this.id,\n//       old_coords: oldCoords,\n//       new_coords: newCoords,\n//     })\n//   }\n//   this.canvas.remove(this.group)\n//   this.canvas.add(...this.allVertices())\n//   this.moveAllPoints(newCoords)\n//   this.update()\n// }\n\n// Table.prototype.unLargeGroupSelect = function () {\n//   const vector = {\n//     x: this.group.left - this.groupPosition.x,\n//     y: this.group.top - this.groupPosition.y,\n//   }\n//   const action = {\n//     type: ACTION_TYPE.MULTI_ACTION,\n//     actions: this.getBaselines()\n//       .map((line) => ({\n//         type: ACTION_TYPE.MOVE_SHAPE_WITH_VECTOR,\n//         shape_id: line.id,\n//         vector,\n//       }))\n//       .concat({\n//         type: ACTION_TYPE.MOVE_SHAPE_WITH_VECTOR,\n//         shape_id: this.id,\n//         vector,\n//       }),\n//   }\n\n//   this.actionHandler.doAction(action)\n//   if (vector.x != 0 && vector.y != 0) {\n//     this.actionHandler.addAction(action)\n//   }\n\n//   this.canvas.remove(this.group)\n//   this.canvas.add(...this.allVertices())\n//   this.update()\n// }\n\nTable.prototype.getCellBackgrounds = function () {\n  return this.cellMatrix.allCells().map((cell) => cell.background)\n}\n\n// Table.prototype.moveAllPoints = function (coords) {\n//   this.allVertices().map((vertex, index) => {\n//     vertex.set({ left: coords[index].left, top: coords[index].top })\n//     vertex.setCoords()\n//   })\n//   this.update()\n// }\n\nTable.prototype.moveAllPointsWithVector = function ({ x, y }) {\n  this.allVertices().map((vertex) => {\n    vertex.set({ left: vertex.left + x, top: vertex.top + y })\n    vertex.setCoords()\n  })\n  this.update()\n}\n\nTable.prototype.removeFromCanvas = function () {\n  this.canvas.remove(...this.allLines())\n  this.canvas.remove(...this.allVertices())\n  this.allCells().map((c) => c.removeFromCanvas())\n  this.canvas.remove(this.structureText)\n  this.canvas.remove(this.readingOrderText)\n  this.canvas.remove(this.previewRect)\n  this.canvas.remove(this.hoverLine)\n}\n\nTable.prototype.removeChildsFromCanvas = function () {\n  this.allCells().map((c) => c.baselines.map((l) => l.removeFromCanvas()))\n}\n\nTable.prototype.select = function () {\n  this.selected = true\n  this.update()\n}\n\nTable.prototype.unSelect = function () {\n  this.selected = false\n  this.selectNewCell(null)\n  this.canvas.remove(this.previewRect)\n  this.canvas.remove(this.hoverLine)\n  this.hoverLine = null\n  this.allCells().map((cell) => {\n    cell.showFrameOnly()\n    cell.tableSelected = false\n  })\n}\n\nTable.prototype.getFrame = function () {\n  let left = this.verticalLines[0]\n  let bottom = this.horizontalLines[this.horizontalLines.length - 1]\n  let right = this.verticalLines[this.verticalLines.length - 1]\n  let top = this.horizontalLines[0]\n  return [left, bottom, right, top]\n}\nTable.prototype.allLines = function () {\n  return [...this.horizontalLines, ...this.verticalLines]\n}\n\nTable.prototype.getArea = function () {\n  let hull = polygonHull(this.allVertices().map((c) => [c.left, c.top]))\n  return hull\n}\n\nTable.prototype.getBaselines = function () {\n  let result = this.allCells().reduce(\n    (acc, cell) => (cell ? [...acc, ...cell.baselines] : acc),\n    []\n  )\n  return result\n}\n\nTable.prototype.removeLine = function (id) {\n  this.canvas.remove(this.hoverLine)\n  this.hoverLine = null\n  let { index, isVertical } = this.lines.find((line) => line.id === id)\n  if (this.cellMatrix.removeForbidden(index, isVertical)) return\n  let index1 = index - 1\n  let index2 = index\n  let pairs = []\n  let actions = []\n\n  const getPairActions = (pair, newCell, row, col) => [\n    {\n      type: ACTION_TYPE.REMOVE_CELL,\n      shape_id: this.id,\n      table: this,\n      cell: pair[0],\n      row: pair[0].row,\n      col: pair[0].col,\n    },\n    {\n      type: ACTION_TYPE.REMOVE_CELL,\n      shape_id: this.id,\n      table: this,\n      cell: pair[1],\n      row: pair[1].row,\n      col: pair[1].col,\n    },\n    {\n      type: ACTION_TYPE.ADD_CELL,\n      shape_id: this.id,\n      table: this,\n      cell: newCell,\n      row,\n      col,\n    },\n  ]\n\n  if (isVertical) {\n    let first = this.cellMatrix.getCellsOfColumn(index1)\n    let second = this.cellMatrix.getCellsOfColumn(index2)\n    pairs = first.map((cell, index) => [cell, second[index]])\n    pairs.map((pair, index) => {\n      let newCell = this.mergeCells(pair)\n      // this.cellMatrix.setCell(newCell, index, index1)\n      actions.push(...getPairActions(pair, newCell, index, index1))\n    })\n    actions.push({\n      type: ACTION_TYPE.REMOVE_TABLE_COLUM,\n      shape_id: this.id,\n      col_index: index2,\n    })\n    // this.cellMatrix.deleteColumn(index2)\n  } else {\n    let first = this.cellMatrix.getCellsOfRow(index1)\n    let second = this.cellMatrix.getCellsOfRow(index2)\n    pairs = first.map((cell, index) => [cell, second[index]])\n    pairs.map((pair, index) => {\n      let newCell = this.mergeCells(pair)\n      // this.cellMatrix.setCell(newCell, index1, index)\n      actions.push(...getPairActions(pair, newCell, index1, index))\n    })\n    actions.push({\n      type: ACTION_TYPE.REMOVE_TABLE_ROW,\n      shape_id: this.id,\n      row_index: index2,\n    })\n    // this.cellMatrix.deleteRow(index2)\n  }\n  const action = {\n    type: ACTION_TYPE.MULTI_ACTION,\n    shape_id: this.id,\n    actions,\n  }\n  this.actionHandler.addAction(action)\n  this.actionHandler.doAction(action)\n  this.cellMatrix.log()\n  this.update()\n}\n\nTable.prototype.creatVertex = function (x, y, id) {\n  let newVertex = this.myFabric.getTableCircle(x, y, id)\n  newVertex.on('mousedown', () => {\n    this.saveTempCoords(newVertex)\n  })\n  newVertex.on('moved', () => {\n    this.update()\n    this.actionHandler.addAction({\n      type: ACTION_TYPE.MOVE_POINT,\n      shape_id: this.id,\n      point_id: newVertex.id,\n      old_coords: this.tempCoords[0],\n      new_coords: { left: newVertex.left, top: newVertex.top },\n    })\n    this.tempCoords = null\n  })\n  this.vertices.push(newVertex)\n  return newVertex\n}\n\nTable.prototype.updateCellFrames = function () {\n  this.allCells().map((cell) => cell.updateFrame())\n}\n\nTable.prototype.getVertex = function (id) {\n  return this.vertices.find((v) => v.id === id)\n}\n\nTable.prototype.getVertexByCoords = function (x, y, tolerance = 0) {\n  return this.vertices.find((c) => {\n    return Math.abs(c.left - x) <= tolerance && Math.abs(c.top - y) <= tolerance\n  })\n}\n\nTable.prototype.saveTempCoords = function (...vertices) {\n  this.tempCoords = vertices.map(({ top, left }) => ({ top, left }))\n}\n\nTable.prototype.addVerticalLine = function (position, splitLine) {\n  let cell = this.getCellFromPointer(position)\n  let { col } = this.cellMatrix.getPosition(cell)\n\n  let columnCells = this.cellMatrix.getCellsOfColumn(col)\n  log('there')\n  if (this.cellMatrix.noVerticalSplit(splitLine, columnCells)) return\n  log('between')\n  if (this.cellMatrix.splitForbidden(splitLine, columnCells)) return\n  log('below')\n\n  let pairs = columnCells.map((cell) => this.splitCellVertical(cell, splitLine))\n  let actions = []\n  actions.push({\n    type: ACTION_TYPE.ADD_TABLE_COLUM,\n    shape_id: this.id,\n    col_index: col + 1,\n  })\n  pairs.map(([cell1, cell2], index) => {\n    const oldCell1 = this.cellMatrix.getCell(index, col)\n    actions.push(\n      {\n        type: ACTION_TYPE.REMOVE_CELL,\n        shape_id: this.id,\n        table: this,\n        cell: oldCell1,\n        row: index,\n        col,\n      },\n      {\n        type: ACTION_TYPE.ADD_CELL,\n        shape_id: this.id,\n        table: this,\n        cell: cell1,\n        row: index,\n        col,\n      },\n      {\n        type: ACTION_TYPE.ADD_CELL,\n        shape_id: this.id,\n        table: this,\n        cell: cell2,\n        row: index,\n        col: col + 1,\n      }\n    )\n  })\n  const action = {\n    type: ACTION_TYPE.MULTI_ACTION,\n    shape_id: this.id,\n    actions,\n  }\n  this.actionHandler.addAction(action)\n  this.actionHandler.doAction(action)\n  this.update()\n  this.cellMatrix.log()\n}\n\nTable.prototype.addHorizontalLine = function (position, splitLine) {\n  let cell = this.getCellFromPointer(position)\n  let { row } = this.cellMatrix.getPosition(cell)\n  let rowCells = this.cellMatrix.getCellsOfRow(row)\n\n  if (this.cellMatrix.noHorizontalSplit(splitLine, rowCells)) return\n  if (this.cellMatrix.splitForbidden(splitLine, rowCells)) return\n\n  let newCells = rowCells.map((cell) =>\n    this.splitCellHorizontal(cell, splitLine)\n  )\n  let actions = []\n  actions.push({\n    type: ACTION_TYPE.ADD_TABLE_ROW,\n    shape_id: this.id,\n    row_index: row + 1,\n  })\n  newCells.map(([cell1, cell2], index) => {\n    const oldCell1 = this.cellMatrix.getCell(row, index)\n    actions.push(\n      {\n        type: ACTION_TYPE.REMOVE_CELL,\n        shape_id: this.id,\n        table: this,\n        cell: oldCell1,\n        row,\n        col: index,\n      },\n      {\n        type: ACTION_TYPE.ADD_CELL,\n        shape_id: this.id,\n        table: this,\n        cell: cell1,\n        row,\n        col: index,\n      },\n      {\n        type: ACTION_TYPE.ADD_CELL,\n        shape_id: this.id,\n        table: this,\n        cell: cell2,\n        row: row + 1,\n        col: index,\n      }\n    )\n  })\n\n  const action = {\n    type: ACTION_TYPE.MULTI_ACTION,\n    shape_id: this.id,\n    actions,\n  }\n  this.actionHandler.addAction(action)\n  this.actionHandler.doAction(action)\n  this.update()\n}\n\nTable.prototype.splitCellVertical = function (currentCell, splitLine) {\n  let [points1, points2, rest] = getSplitCoords(currentCell, splitLine).map(\n    (intem) => intem.vertices\n  )\n  points1.push(...rest)\n  let last = points2.pop()\n  points2 = [last, ...points2]\n\n  let cell1 = this.createCell()\n  let cell2 = this.createCell()\n  let vertices1 = points1.map(\n    (p) =>\n      this.getVertexByCoords(p.x, p.y, 1) || this.creatVertex(p.x, p.y, p.id)\n  )\n  let vertices2 = points2.map(\n    (p) =>\n      this.getVertexByCoords(p.x, p.y, 1) || this.creatVertex(p.x, p.y, p.id)\n  )\n  cell1.setVertices(vertices1)\n  cell1.baselines = [...currentCell.baselines]\n  cell1.text = currentCell.text\n  cell1.rowSpan = currentCell.rowSpan\n  cell1.colSpan = currentCell.colSpan\n  cell2.setVertices(vertices2)\n  return [cell1, cell2]\n}\n\nTable.prototype.splitCellHorizontal = function (currentCell, splitLine) {\n  let [points1, points2, rest] = getSplitCoords(currentCell, splitLine).map(\n    (intem) => intem.vertices\n  )\n  points1.push(...rest)\n\n  let cell1 = this.createCell()\n  let cell2 = this.createCell()\n  let vertices1 = points1.map(\n    (p) =>\n      this.getVertexByCoords(p.x, p.y, 1) || this.creatVertex(p.x, p.y, p.id)\n  )\n  let vertices2 = points2.map(\n    (p) =>\n      this.getVertexByCoords(p.x, p.y, 1) || this.creatVertex(p.x, p.y, p.id)\n  )\n  cell1.setVertices(vertices1)\n  cell1.baselines = [...currentCell.baselines]\n  cell1.text = currentCell.text\n  cell1.rowSpan = currentCell.rowSpan\n  cell1.colSpan = currentCell.colSpan\n  cell2.setVertices(vertices2)\n  return [cell1, cell2]\n}\n\nTable.prototype.mergeRow = function (position) {\n  const cell = this.getCellFromPointer(position)\n  const { row } = this.cellMatrix.getPosition(cell)\n  const cells = this.cellMatrix.getCellsOfRow(row)\n  const first = cells[0]\n  const actions = []\n  cells.map((c) => {\n    if (!c.isSpanChild()) return\n    const parent = this.cellMatrix.getCellParent(c.row, c.col)\n    actions.push(this.getCellSpanAction(parent, 1, 1))\n    parent.rowSpan = 1\n    parent.colSpan = 1\n  })\n  const width = this.cellMatrix.getWidth()\n  actions.push(this.getCellSpanAction(first, width, 1))\n  first.rowSpan = 1\n  first.colSpan = width\n  this.actionHandler.addAction({\n    type: ACTION_TYPE.MULTI_ACTION,\n    actions,\n  })\n  this.update()\n  this.cellMatrix.log()\n}\n\nTable.prototype.mergeColumn = function (position) {\n  const cell = this.getCellFromPointer(position)\n  const { col } = this.cellMatrix.getPosition(cell)\n  const cells = this.cellMatrix.getCellsOfColumn(col)\n  const first = cells[0]\n  const actions = []\n  cells.map((c) => {\n    if (!c.isSpanChild()) return\n    const parent = this.cellMatrix.getCellParent(c.row, c.col)\n    actions.push(this.getCellSpanAction(parent, 1, 1))\n    parent.rowSpan = 1\n    parent.colSpan = 1\n  })\n  const height = this.cellMatrix.getHeight()\n  actions.push(this.getCellSpanAction(first, height, 1))\n  first.rowSpan = height\n  first.colSpan = 1\n  this.actionHandler.addAction({\n    type: ACTION_TYPE.MULTI_ACTION,\n    actions,\n  })\n  this.update()\n  this.cellMatrix.log()\n}\n\nTable.prototype.dissolveCells = function (position) {\n  let parent = this.getParentFromPointer(position)\n  this.actionHandler.addAction(this.getCellSpanAction(parent, 1, 1))\n  parent.rowSpan = 1\n  parent.colSpan = 1\n  this.update()\n}\n\nTable.prototype.mergeRightCell = function (position) {\n  const cell = this.getCellFromPointer(position)\n  const neighbor = this.cellMatrix.getNeighbor(cell.row, cell.col, 'right')\n  neighbor && this.mergeNeighbors(cell, neighbor)\n}\n\nTable.prototype.mergeLeftCell = function (position) {\n  const cell = this.getCellFromPointer(position)\n  const neighbor = this.cellMatrix.getNeighbor(cell.row, cell.col, 'left')\n  neighbor && this.mergeNeighbors(cell, neighbor)\n}\nTable.prototype.mergeTopCell = function (position) {\n  const cell = this.getCellFromPointer(position)\n  const neighbor = this.cellMatrix.getNeighbor(cell.row, cell.col, 'top')\n  neighbor && this.mergeNeighbors(cell, neighbor)\n}\n\nTable.prototype.mergeBottomCell = function (position) {\n  const cell = this.getCellFromPointer(position)\n  const neighbor = this.cellMatrix.getNeighbor(cell.row, cell.col, 'bottom')\n  neighbor && this.mergeNeighbors(cell, neighbor)\n}\n\nTable.prototype.mergeNeighbors = function (cell1, cell2) {\n  if (cell1 == null || cell2 == null) return\n  const cell1Parent = this.cellMatrix.getCellParent(cell1.row, cell1.col)\n  const cell2Parent = this.cellMatrix.getCellParent(cell2.row, cell2.col)\n  const { newParent, newRowSpan, newColSpan } = this.cellMatrix.mergeParents(\n    cell1Parent,\n    cell2Parent\n  )\n  this.actionHandler.addAction({\n    type: ACTION_TYPE.MULTI_ACTION,\n    actions: [\n      this.getCellSpanAction(cell1Parent, 1, 1),\n      this.getCellSpanAction(cell2Parent, 1, 1),\n      this.getCellSpanAction(newParent, newRowSpan, newColSpan),\n    ],\n  })\n  cell1.rowSpan = 1\n  cell1.colSpan = 1\n  cell2.rowSpan = 1\n  cell2.colSpan = 1\n  newParent.rowSpan = newRowSpan\n  newParent.colSpan = newColSpan\n  this.update()\n}\n\nTable.prototype.getCellSpanAction = function (cell, rowSpan, colSpan) {\n  return {\n    type: ACTION_TYPE.CHANGE_CELL_SPAN,\n    shape_id: this.id,\n    cell_id: cell.id,\n    old_row_span: cell.rowSpan,\n    old_col_span: cell.colSpan,\n    new_row_span: rowSpan || cell.rowSpan,\n    new_col_span: colSpan || cell.colSpan,\n  }\n}\n\nTable.prototype.mergeCells = function (cells) {\n  let sortedCells = cells.sort((a, b) => {\n    let aPostition = this.cellMatrix.getPosition(a)\n    let bPostition = this.cellMatrix.getPosition(b)\n    return aPostition.row - bPostition.row + aPostition.col - bPostition.col\n  })\n\n  const mergeTwoCells = (cell1, cell2) => {\n    let vertices\n    let sharedVertexIds = this.cellMatrix.getSharedVertexIds(cell1, cell2)\n    const removeShared = (vertices) =>\n      vertices.filter((v) => !sharedVertexIds.includes(v.id))\n\n    const removeDuplicates = (vertices) => [...new Set(vertices)]\n    if (this.cellMatrix.areHorizontalNeighbors(cell1, cell2)) {\n      let newVertices = [\n        ...cell1.getLeftVertices(),\n        ...cell1.getBottomVertices(),\n        ...cell2.getBottomVertices(),\n        ...cell2.getRightVertices().reverse(),\n        ...cell2.getTopVertices().reverse(),\n        ...cell1.getTopVertices().reverse(),\n      ]\n      vertices = removeDuplicates(removeShared(newVertices))\n    }\n    if (this.cellMatrix.areVerticalNeighbors(cell1, cell2)) {\n      let newVertices = [\n        ...cell1.getLeftVertices(),\n        ...cell2.getLeftVertices(),\n        ...cell2.getBottomVertices(),\n        ...cell2.getRightVertices().reverse(),\n        ...cell1.getRightVertices().reverse(),\n        ...cell1.getTopVertices().reverse(),\n      ]\n      vertices = removeDuplicates(removeShared(newVertices))\n    }\n    let newCell = this.createCell()\n    newCell.setVertices(vertices)\n    newCell.baselines = [...cell1.baselines, ...cell2.baselines]\n    newCell.text = cell1.text + cell2.text\n    return newCell\n  }\n  return mergeTwoCells(sortedCells[0], sortedCells[1])\n}\n\n// Table.prototype.verticalMovement = function (line) {\n//   let lines = this.verticalLines\n//   let index = lines.indexOf(line)\n//   let buffer = 10\n//   let leftBefore = lines[index - 1]?.left\n//   let leftAfter = lines[index + 1]?.left\n\n//   // console.log('---')\n//   // console.log(leftBefore)\n//   // console.log(line.left)\n//   // console.log(leftAfter)\n//   // console.log('---')\n\n//   if (line.left < leftBefore + buffer) {\n//     line.set('left', leftBefore + buffer)\n//   }\n//   if (line.left > leftAfter - buffer) {\n//     line.set('left', leftAfter - buffer)\n//   }\n// }\n\n// Table.prototype.horizontalMovement = function (line) {\n//   let lines = this.horizontalLines\n//   let index = lines.indexOf(line)\n//   let buffer = 10\n//   let topBefore = lines[index - 1]?.top\n//   let topAfter = lines[index + 1]?.top\n\n//   if (line.top < topBefore + buffer) {\n//     line.set('top', topBefore + buffer)\n//   }\n//   if (line.top > topAfter - buffer) {\n//     line.set('top', topAfter - buffer)\n//   }\n// }\n\nTable.prototype.getCellFromPointer = function (position) {\n  return this.cellMatrix\n    .allCells()\n    .find((cell) =>\n      pointInPolygon([position.x, position.y], cell.getCellPolygon())\n    )\n}\n\nTable.prototype.getParentFromPointer = function (position) {\n  return this.cellMatrix\n    .allCells()\n    .find((cell) => pointInPolygon([position.x, position.y], cell.getArea()))\n}\n\nTable.prototype.allVertices = function () {\n  return this.cellMatrix.allVertices()\n}\n\nTable.prototype.setState = function (state) {\n  // if (\n  //   this.state === Shape.STATE.GROUP_SELECTION &&\n  //   state != Shape.STATE.GROUP_SELECTION\n  // ) {\n  //   this.unGroupSelect()\n  // }\n  // if (\n  //   this.state === Shape.STATE.LARGE_GROUP_SELECTION &&\n  //   state != Shape.STATE.LARGE_GROUP_SELECTION\n  // ) {\n  //   this.unLargeGroupSelect()\n  // }\n  // if (\n  //   state === Shape.STATE.GROUP_SELECTION &&\n  //   this.state != Shape.STATE.GROUP_SELECTION\n  // ) {\n  //   this.groupSelect()\n  // }\n  // if (\n  //   state === Shape.STATE.LARGE_GROUP_SELECTION &&\n  //   this.state != Shape.STATE.LARGE_GROUP_SELECTION\n  // ) {\n  //   this.largeGroupSelect()\n  // }\n  if (this.activeVertex) {\n    this.activeVertex.unSelect()\n  }\n  if (this.vertices.length > 1) {\n    // this.lines = calcLines(this.vertices)\n  }\n  this.state = state\n}\n\nTable.prototype.positionCloseToVertex = function (position) {\n  return this.allVertices().some(\n    (v) => distanceBetween(v.left, v.top, position.x, position.y) < 5\n  )\n}\n\nTable.prototype.updateHoveredLine = function (position) {\n  const removeOldLine = () => {\n    if (this.hoverLine) {\n      this.canvas.remove(this.hoverLine)\n      // this.allVertices().map((v) => this.canvas.bringToFront(v))\n      this.canvas.requestRenderAll()\n      this.hoverLine = null\n    }\n  }\n  const setNewLine = (newLine) => {\n    this.hoverLine = this.myFabric.getHoverLine(\n      newLine.vertices,\n      newLine.id,\n      newLine.isVertical\n    )\n    this.hoverLine.relations = this.getRelations(\n      this.hoverLine,\n      this.hoverLine.vertices\n    )\n    this.hoverLine.on('mousedown', () => {\n      this.hoverLine.isDragging = true\n      this.saveTempCoords(...this.hoverLine.vertices)\n      //console.log(newLine)\n    })\n    this.hoverLine.on('moved', () => {\n      this.updateCircles(this.hoverLine)\n      this.update()\n      //console.log(this.tempCoords)\n      this.actionHandler.addAction({\n        type: ACTION_TYPE.MULTI_ACTION,\n        actions: this.hoverLine.vertices.map((v, index) => ({\n          type: ACTION_TYPE.MOVE_POINT,\n          shape_id: this.id,\n          point_id: v.id,\n          old_coords: this.tempCoords[index],\n          new_coords: { left: v.left, top: v.top },\n        })),\n      })\n    })\n    this.hoverLine.on('mouseup', () => {\n      this.hoverLine.isDragging = false\n    })\n    this.canvas.add(this.hoverLine)\n  }\n  if (this.hoverLine?.isDragging) return\n  if (this.positionCloseToVertex(position)) {\n    removeOldLine()\n    return\n  }\n  let foundLine = this.findLine(position)\n  if (foundLine) {\n    if (foundLine.id === this.hoverLine?.id) return\n    removeOldLine()\n    setNewLine(foundLine)\n    return\n  }\n  removeOldLine()\n}\n\nTable.prototype.updateVertexSizes = function (target) {\n  if (target?.type === 'circle') {\n    if (this.hoveredVertex?.id === target.id) return\n    target.set({ radius: target.defaultRadius * 1.5 })\n    this.hoveredVertex = target\n    this.canvas.requestRenderAll()\n  } else {\n    if (this.hoveredVertex) {\n      this.hoveredVertex.set({ radius: this.hoveredVertex.defaultRadius })\n      this.hoveredVertex = null\n      this.canvas.requestRenderAll()\n    }\n  }\n}\nTable.prototype.showPreviewRect = function (x, y) {\n  this.canvas.remove(this.previewRect)\n  this.previewRect = this.myFabric\n    .getPreviewRect(this.initCoord.x, this.initCoord.y, x, y)\n    .set('fill', 'orange')\n  this.canvas.add(this.previewRect)\n}\n\nTable.prototype.handleMouseMoveEvent = function (event) {\n  if (this.state === Shape.STATE.FIRST_DRAW) {\n    if (this.initCoord) {\n      let mousePosition = this.canvas.getPointer(event.e)\n      this.showPreviewRect(mousePosition.x, mousePosition.y)\n    }\n  }\n  if (this.state === Shape.STATE.EDIT) {\n    let position = this.canvas.getPointer(event.e)\n    this.mousePosition = position\n    this.updateHoveredLine(position)\n    //this.updateVertexSizes(event.target)\n  }\n}\n\nTable.prototype.createDragVertex = function (position) {\n  //console.log('createVertex')\n  let foundLine = this.findLine(position)\n  if (foundLine) {\n    // console.log(position.x, position.y)\n    let dragVertex = this.myFabric.getDragCircle(position.x, position.y)\n    //console.log(dragVertex)\n    this.canvas.add(dragVertex)\n    this.dragVertex = dragVertex\n    let lineMatrix = foundLine.calcTransformMatrix()\n    let inverseVertexMatrix = fabric.util.invertTransform(\n      dragVertex.calcTransformMatrix()\n    )\n    this.lineRelation = fabric.util.multiplyTransformMatrices(\n      inverseVertexMatrix,\n      lineMatrix\n    )\n  }\n}\n\nTable.prototype.handleClickEvent = function (event, controlPressed) {\n  // if (event.button != 1) return\n  // let position = this.canvas.getPointer(event.e)\n  // if (this.state === Shape.STATE.EDIT) {\n  //   let cell = this.getParentFromPointer(position)\n  //   if (!cell) return\n  //   if (event.target) return\n  //   if (controlPressed) {\n  //     if (cell.selected) {\n  //       cell.unSelect()\n  //     } else {\n  //       cell.select()\n  //     }\n  //   } else {\n  //     if (cell.selected) {\n  //       this.unSelectAllCells()\n  //     } else {\n  //       this.unSelectAllCells()\n  //       cell.select()\n  //     }\n  //   }\n  // }\n}\n\nTable.prototype.selectNewCell = function (cell) {\n  if (this.markedCell?.id === cell?.id) return\n  if (this.markedCell) {\n    this.markedCell.unSelect()\n    this.markedCell = null\n  }\n  if (cell) {\n    cell.select()\n    this.markedCell = cell\n  }\n}\n\nTable.prototype.getSelectedCells = function () {\n  return this.allCells().filter((c) => c.selected)\n}\n\nTable.prototype.updateCellSelection = function () {\n  // this.getSelectedCells().map(cell=>{\n  //   if(cell.isSpanChild()){\n  //     cell.unSelect()\n  //     cell.remove\n  //   }\n  // })\n}\n\nTable.prototype.createCell = function (blueprint) {\n  const newCell = new Cell(this.canvas, blueprint)\n  // newCell.on('selected', () => this.select())\n  // newCell.on('unSelected', () => this.unSelect())\n  // newCell.on('mouseMove', (event) => this.handleMouseMoveEvent(event))\n  return newCell\n}\n\nTable.prototype.findLine = function (position) {\n  return this.lines.find((line) =>\n    line.polygons.some((polygon) =>\n      pointInPolygon([position.x, position.y], polygon)\n    )\n  )\n}\n\nTable.prototype.setTableInvalid = function (cells) {\n  //console.log('Table contains invalid cells!')\n  cells.map((c) => c.baselines.map((l) => l.removeFromCanvas()))\n  this.cellMatrix = new CellMatrix(0, 0)\n  this.invalid = true\n  this.update = function () {\n    if (!this.canvas.contains(this.frameInvalid)) {\n      this.canvas.add(this.frameInvalid)\n    }\n  }\n  this.handleClickEvent = () => {}\n  this.handleMouseMoveEvent = () => {}\n  this.getBaselines = () => []\n  this.select = function () {\n    // console.log('select')\n    if (!this.canvas.contains(this.backgroundInvalid)) {\n      this.canvas.add(this.backgroundInvalid)\n    }\n    if (!this.canvas.contains(this.signInvalid)) {\n      this.canvas.add(this.signInvalid)\n    }\n  }\n  this.unSelect = function () {\n    // console.log('unselect')\n    this.canvas.remove(this.backgroundInvalid)\n    this.canvas.remove(this.signInvalid)\n  }\n  this.getBlueprint = function () {\n    return {\n      type: 'table',\n      attributes: this.attributes,\n      elements: this.elements,\n    }\n  }\n  this.removeFromCanvas = function () {\n    this.canvas.remove(this.backgroundInvalid)\n    this.canvas.remove(this.signInvalid)\n    this.canvas.remove(this.frameInvalid)\n  }\n  this.getArea = function () {\n    return this.elements.coords.map(({ x, y }) => [x, y])\n  }\n\n  this.backgroundInvalid = this.myFabric.getInvalidTableBackground(\n    this.elements.coords\n  )\n  this.frameInvalid = this.myFabric.getInvalidTableFrame(this.elements.coords)\n  this.signInvalid = this.myFabric.getInvalidTableSign(this.elements.coords)\n  this.canvas.add(this.backgroundInvalid)\n  this.canvas.add(this.frameInvalid)\n  this.unSelect()\n}\n\n//Shape overwrite\nTable.prototype.movePoint = function (pointId, coords) {\n  let vertex = this.allVertices().find((v) => v.id === pointId)\n  if (vertex) {\n    vertex.set({ left: coords.left, top: coords.top })\n    vertex.setCoords()\n    this.cellMatrix.log()\n    this.update()\n  } else {\n    console.log('Vertex with id+ ' + pointId + ' could not be found')\n  }\n}\n\nexport default Table\n","import simplify from 'simplify-js'\nimport { cssjs } from 'jotform-css.js'\nimport { isEmpty } from 'lodash'\n\nconst getUnSupportedElements = (json) => {\n  let allRegions = getPage(json).elements\n  let foundTableRegion = allRegions.find(\n    (region) => region.name === 'TableRegion'\n  )\n  if (foundTableRegion) return 'TableRegion'\n}\n\nconst parseCustom = (string) => {\n  const parser = new cssjs()\n  const parsed = parser.parseCSS(string)\n  const customObject = {}\n  parsed.map((selector) => {\n    switch (selector.selector) {\n      case 'readingOrder':\n        customObject.readingOrder = selector.rules[0].value\n        break\n      case 'structur':\n      case 'structure':\n        customObject.structureType = selector.rules[0].value\n        break\n      case 'relationType':\n        customObject.relationType = selector.rules[0].value\n        break\n      case 'relationName':\n        customObject.relationName = selector.rules[0].value\n        break\n      default: {\n        if (!('tags' in customObject)) {\n          customObject.tags = []\n        }\n        customObject.tags.push(selector)\n      }\n    }\n  })\n  //log(customObject)\n  return customObject\n}\n\nconst stringifyCustom = (custom) => {\n  //log(custom)\n  let string = ''\n  if ('readingOrder' in custom) {\n    string += ` readingOrder {index:${custom.readingOrder};}`\n  }\n  if ('structureType' in custom) {\n    string += ` structure {type:${custom.structureType};}`\n  }\n  if ('relationType' in custom) {\n    string += ` relationType {value:${custom.relationType};}`\n  }\n  if ('relationName' in custom) {\n    string += ` relationName {value:${custom.relationName};}`\n  }\n  if ('tags' in custom) {\n    custom.tags.map((tag) => {\n      const ruleString = tag.rules.reduce(\n        (acc, { directive, value }) => acc + `${directive}:${value};`,\n        ''\n      )\n      string += ` ${tag.selector} {${ruleString}}`\n    })\n  }\n\n  string = string.substring(1)\n\n  return string\n}\n\nconst jsonToBlueprint = (globalJson, scaleFactor) => {\n  const sortByReadingOrder = (regions) => {\n    regions = regions.sort(\n      (a, b) =>\n        a.attributes.custom.readingOrder - b.attributes.custom.readingOrder\n    )\n    const sortLines = (lines) => {\n      return lines.sort(\n        (a, b) =>\n          a.attributes.custom.readingOrder - b.attributes.custom.readingOrder\n      )\n    }\n    regions.map((region) => {\n      if (region.elements.textLines) {\n        region.elements.textLines = sortLines(region.elements.textLines)\n        return\n      }\n      region.elements.cells.map((cell) => {\n        cell.elements.textLines = sortLines(cell.elements.textLines)\n      })\n    })\n    // console.log(JSON.parse(JSON.stringify(regions)))\n    return regions\n  }\n\n  const estimateBaselineCoords = (polyCoords) => {\n    const isClockwise = (coords) => {\n      //source: https://stackoverflow.com/questions/14505565/detect-if-a-\n      //set-of-points-in-an-array-that-are-the-vertices-of-a-complex-polygon\n      let area = 0\n      coords.map((_, i) => {\n        const j = (i + 1) % coords.length\n        area += coords[i].x * coords[j].y\n        area -= coords[j].x * coords[i].y\n      })\n      return area > 0\n    }\n\n    const getNextCoord = (coord, coords) => {\n      const index = coords.findIndex((c) => c === coord)\n      return coords[(index + 1) % coords.length]\n    }\n    const collectCoords = (collection, coords, coord, endCoord) => {\n      if (coord === endCoord) {\n        return [...collection, coord]\n      }\n      return collectCoords(\n        [...collection, coord],\n        coords,\n        getNextCoord(coord, coords),\n        endCoord\n      )\n    }\n    const getMostLeft = (coords) => {\n      const [left1, left2] = [...coords].sort((a, b) => a.x - b.x)\n      if (left1.x === left2.x) {\n        if (left1.y < left2.y) return left2\n        return left1\n      }\n      return left1\n    }\n    const getMostRight = (coords) => {\n      const [right1, right2] = [...coords].sort((a, b) => b.x - a.x)\n      if (right1.x === right2.x) {\n        if (right1.y < right2.y) return right2\n        return right1\n      }\n      return right1\n    }\n\n    const clockwise = isClockwise(polyCoords)\n    let coords = clockwise ? [...polyCoords].reverse() : [...polyCoords]\n    const tolerance = 2\n\n    let result = collectCoords(\n      [],\n      coords,\n      getMostLeft(coords),\n      getMostRight(coords)\n    )\n    result = simplify(result, tolerance)\n    return result\n  }\n\n  const getRelationsBlueprint = (relations) => {\n    //attributes\n    log(relations)\n    let attributes = getAttributesBlueprint(relations.attributes)\n\n    //elements\n    let elements = {\n      relations: [],\n    }\n    relations.elements.map((e) => {\n      switch (e.name) {\n        case 'Relation':\n          elements.relations.push(getRelationBlueprint(e))\n          break\n      }\n    })\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getRelationBlueprint = (relation) => {\n    //attributes\n    let attributes = getAttributesBlueprint(relation.attributes)\n\n    //elements\n    let elements = {\n      ids: [],\n    }\n    relation.elements.map((e) => {\n      switch (e.name) {\n        case 'RegionRef':\n          elements.ids.push(getIdFromRegionRef(e))\n          break\n      }\n    })\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getIdFromRegionRef = (regionRef) => {\n    return regionRef.attributes.regionRef\n  }\n\n  const getRegionBlueprint = (textRegion) => {\n    //attributes\n    let attributes = getAttributesBlueprint(textRegion.attributes)\n\n    //elements\n    let elements = {\n      coords: [],\n      textLines: [],\n      text: '',\n    }\n    textRegion.elements.map((e) => {\n      switch (e.name) {\n        case 'Coords':\n          elements.coords = getCoordsBlueprint(e)\n          break\n        case 'TextLine':\n          elements.textLines.push(getTextLineBlueprint(e))\n          break\n        case 'TextEquiv':\n          elements.text = getTextEquivBlueprint(e)\n\n          break\n      }\n    })\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getTableBlueprint = (tableRegion) => {\n    //console.log(tableRegion)\n    //attributes\n    let attributes = getAttributesBlueprint(tableRegion.attributes)\n\n    //elements\n    let elements = {\n      coords: [],\n      cells: [],\n      text: '',\n    }\n    tableRegion.elements.map((e) => {\n      switch (e.name) {\n        case 'Coords':\n          elements.coords = getCoordsBlueprint(e)\n          break\n        case 'TableCell':\n          elements.cells.push(getCellBlueprint(e))\n          break\n        case 'TextEquiv':\n          elements.text = getTextEquivBlueprint(e)\n          break\n      }\n    })\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getCellBlueprint = (cell) => {\n    //console.log(cell)\n    //attributes\n    let attributes = getAttributesBlueprint(cell.attributes)\n\n    //elements\n    let elements = {\n      coords: [],\n      textLines: [],\n      cornerPoints: [],\n    }\n    cell.elements.map((e) => {\n      switch (e.name) {\n        case 'Coords':\n          elements.coords = getCoordsBlueprint(e)\n          break\n        case 'TextLine':\n          elements.textLines.push(getTextLineBlueprint(e))\n          break\n        case 'CornerPts':\n          elements.cornerPoints = getCornerPtsBlueprint(e)\n          break\n      }\n    })\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getCornerPtsBlueprint = (points) => {\n    return points.elements[0].text.split(' ').map((string) => parseInt(string))\n  }\n\n  const getTextLineBlueprint = (textLine) => {\n    //attributes\n    let attributes = getAttributesBlueprint(textLine.attributes)\n    // console.log(attributes)\n\n    //elements\n    let elements = {\n      polyCoords: [],\n      baselineCoords: [],\n      words: [],\n      text: '',\n    }\n    textLine.elements.map((e) => {\n      switch (e.name) {\n        case 'Coords':\n          elements.polyCoords = getCoordsBlueprint(e)\n          break\n        case 'Baseline':\n          elements.baselineCoords = getBaselineBlueprint(e)\n          break\n        case 'Word':\n          elements.words.push(getWordBlueprint(e))\n          break\n        case 'TextEquiv':\n          elements.text = getTextEquivBlueprint(e)\n          break\n      }\n    })\n    if (elements.baselineCoords.length === 0) {\n      elements.baselineCoords = estimateBaselineCoords(elements.polyCoords)\n    }\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getWordBlueprint = (word) => {\n    //attributes\n    let attributes = getAttributesBlueprint(word.attributes)\n\n    //elements\n    let elements = {\n      coords: [],\n      text: '',\n    }\n    word.elements.map((e) => {\n      switch (e.name) {\n        case 'Coords':\n          elements.coords = getCoordsBlueprint(e)\n          break\n        case 'TextEquiv':\n          elements.text = getTextEquivBlueprint(e)\n          break\n      }\n    })\n    return { attributes: attributes, elements: elements }\n  }\n\n  const getAttributesBlueprint = (attributes) => {\n    return {\n      ...attributes,\n      ...(attributes?.custom ? { custom: parseCustom(attributes.custom) } : {}),\n    }\n  }\n\n  const getCoordsBlueprint = (coords) => {\n    return scalePointList(\n      getPointListfromString(coords.attributes.points),\n      scaleFactor\n    )\n  }\n\n  const getBaselineBlueprint = (baseline) => {\n    return scalePointList(\n      getPointListfromString(baseline.attributes.points),\n      scaleFactor\n    )\n  }\n\n  const getTextEquivBlueprint = (textEquiv) => {\n    if (\n      textEquiv.elements.length > 0 &&\n      textEquiv.elements[0].elements.length > 0\n    ) {\n      return textEquiv.elements[0].elements[0].text\n    }\n    return ''\n  }\n  let rootElements = getPage(globalJson).elements\n  log(rootElements)\n\n  let regions = rootElements.filter(\n    (e) => e.name === 'TextRegion' || e.name === 'TableRegion'\n  )\n\n  let relationsBlueprint\n  const relations = rootElements.find((e) => e.name === 'Relations')\n  if (relations != null) {\n    relationsBlueprint = getRelationsBlueprint(relations)\n  }\n\n  let unSortedRegions = regions.map((region) => {\n    switch (region.name) {\n      case 'TextRegion':\n        return getRegionBlueprint(region)\n      case 'TableRegion':\n        return getTableBlueprint(region)\n    }\n  })\n\n  let regionBlueprints = sortByReadingOrder(unSortedRegions)\n  return { regionBlueprints, relationsBlueprint }\n}\n\nconst blueprintToJson = (\n  globalJson,\n  regionBlueprints,\n  relationsBlueprint,\n  scaleFactor\n) => {\n  let globalJsonCopy = JSON.parse(JSON.stringify(globalJson))\n  let otherRegions = getPage(globalJsonCopy).elements.filter(\n    (region) =>\n      region.name != 'TextRegion' &&\n      region.name != 'TableRegion' &&\n      region.name != 'Relations'\n  )\n\n  const getRelationsJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    blueprint.elements.relations.map((relation) => {\n      elements.push(getRelationJson(relation))\n    })\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'Relations',\n      type: 'element',\n    }\n  }\n\n  const getRelationJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    blueprint.elements.ids.map((id) => {\n      elements.push(getRegionRefFromId(id))\n    })\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'Relation',\n      type: 'element',\n    }\n  }\n\n  const getRegionRefFromId = (id) => {\n    return {\n      attributes: { regionRef: id },\n      elements: [],\n      name: 'RegionRef',\n      type: 'element',\n    }\n  }\n\n  const getRegionJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    elements.push(getCoordsJson(blueprint.elements.coords))\n    blueprint.elements.textLines.map((line) => {\n      elements.push(getTextLineJson(line))\n    })\n    elements.push(getTextEquivJson(blueprint.elements.text))\n\n    //console.log(elements)\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'TextRegion',\n      type: 'element',\n    }\n  }\n\n  const getTableJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    elements.push(getCoordsJson(blueprint.elements.coords))\n    blueprint.elements.cells.map((cell) => {\n      elements.push(getCellJson(cell))\n    })\n    elements.push(getTextEquivJson(blueprint.elements.text))\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'TableRegion',\n      type: 'element',\n    }\n  }\n\n  const getCellJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    elements.push(getCoordsJson(blueprint.elements.coords))\n    blueprint.elements.textLines.map((line) => {\n      elements.push(getTextLineJson(line))\n    })\n    elements.push(getCornerPtsJson(blueprint.elements.cornerPoints))\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'TableCell',\n      type: 'element',\n    }\n  }\n\n  const getTextLineJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    elements.push(getCoordsJson(blueprint.elements.polyCoords))\n    elements.push(getBaselineJson(blueprint.elements.baselineCoords))\n    blueprint.elements.words.map((word) => {\n      elements.push(getWordJson(word))\n    })\n    elements.push(getTextEquivJson(blueprint.elements.text))\n\n    //removes invalid Baseline elements\n    // elements = elements.filter((e) => {\n    //   const isBaseline = e.name === 'Baseline'\n    //   const pointsInvalid =\n    //     e.points === null || e.points === undefined || e.points.length === 0\n    //   if (isBaseline && pointsInvalid) return false\n    //   return true\n    // })\n\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'TextLine',\n      type: 'element',\n    }\n  }\n\n  const getWordJson = (blueprint) => {\n    //attributes\n    let attributes = getAttributesJson(blueprint.attributes)\n\n    //elements\n    let elements = []\n    elements.push(getCoordsJson(blueprint.elements.coords))\n    elements.push(getTextEquivJson(blueprint.elements.text))\n\n    return {\n      attributes: attributes,\n      elements: elements,\n      name: 'Word',\n      type: 'element',\n    }\n  }\n\n  const getAttributesJson = (blueprintAttributes) => {\n    log(blueprintAttributes)\n    const attributes = { ...blueprintAttributes }\n    if ('custom' in blueprintAttributes) {\n      attributes.custom = stringifyCustom(blueprintAttributes.custom)\n    }\n    return attributes\n  }\n\n  const getCoordsJson = (coords) => {\n    return {\n      attributes: {\n        points: getStringfromPointList(unScalePointList(coords, scaleFactor)),\n      },\n      elements: [],\n      name: 'Coords',\n      type: 'element',\n    }\n  }\n\n  const getBaselineJson = (coords) => {\n    return {\n      attributes: {\n        points: getStringfromPointList(unScalePointList(coords, scaleFactor)),\n      },\n      elements: [],\n      name: 'Baseline',\n      type: 'element',\n    }\n  }\n\n  const getCornerPtsJson = (points) => {\n    return {\n      elements: [\n        {\n          type: 'text',\n          text: points.join(' '),\n        },\n      ],\n      name: 'CornerPts',\n      type: 'element',\n    }\n  }\n\n  const getTextEquivJson = (text) => {\n    return {\n      elements: [\n        {\n          elements: text.length <= 0 ? [] : [{ type: 'text', text: text }],\n          name: 'Unicode',\n          type: 'element',\n        },\n      ],\n      name: 'TextEquiv',\n      type: 'element',\n    }\n  }\n\n  let regionJsons = regionBlueprints.map((b) =>\n    b.type === 'text' ? getRegionJson(b) : getTableJson(b)\n  )\n  let relationsJson = getRelationsJson(relationsBlueprint)\n\n  let allRegions = [...otherRegions, relationsJson, ...regionJsons]\n  getPage(globalJsonCopy).elements = allRegions\n\n  return globalJsonCopy\n}\n\nconst getPage = (globalJson) => {\n  const pcgts = globalJson.elements.find((e) => e.name === 'PcGts')\n  if (pcgts == null) {\n    warn('Error: not PcGts tag in pageXml')\n    return\n  }\n  const page = pcgts.elements.find((e) => e.name === 'Page')\n  if (pcgts == null) {\n    warn('Error: not Page tag in pageXml')\n    return\n  }\n  return page\n}\n\nconst scalePointList = (points, scaleFactor) => {\n  const rounded = (x) => Math.round(x * 1000000) / 1000000\n  let scaledPoints = points.map((point) => {\n    return {\n      x: rounded(point.x * scaleFactor),\n      y: rounded(point.y * scaleFactor),\n    }\n  })\n  return scaledPoints\n}\n\nconst unScalePointList = (points, scaleFactor) => {\n  const rounded = (x) => Math.round(x)\n\n  let unScaledPoints = points.map((point) => {\n    return {\n      x: rounded(point.x / scaleFactor),\n      y: rounded(point.y / scaleFactor),\n    }\n  })\n  return unScaledPoints\n}\n\nconst getPointListfromString = (string) => {\n  var coords = string.split(' ')\n  let result = coords.map((c) => {\n    let list = c.split(',')\n    return { x: list[0], y: list[1] }\n  })\n  return result\n}\n\nconst getStringfromPointList = (list) => {\n  let result = list.map((c) => `${c.x},${c.y}`).join(' ')\n  return result\n}\n\nexport { jsonToBlueprint, blueprintToJson, getUnSupportedElements }\n","import { Singleton as IdHandler } from '../singletons/IdHandler.js'\n\nfunction Relation(blueprint) {\n  this.id = IdHandler.instance().requestId('rel')\n  this.color = getRandomColor()\n  this.attributes = {\n    type: Relation.TYPE.LINK,\n  }\n  this.elements = {\n    ids: [],\n  }\n  if (blueprint) {\n    this.attributes = blueprint.attributes\n    this.elements.ids = blueprint.elements.ids\n  }\n}\n\nRelation.TYPE = Object.freeze({\n  LINK: 'link',\n  JOIN: 'join',\n  SAME_AS: 'same as',\n  FOLLOWED_BY: 'followed by',\n})\n\nRelation.prototype.getBlueprint = function () {\n  return { attributes: this.attributes, elements: this.elements }\n}\n\nRelation.prototype.setIds = function (ids) {\n  this.elements.ids = [...ids]\n}\n\nRelation.prototype.getIds = function () {\n  return [...this.elements.ids]\n}\n\nRelation.prototype.setType = function (type) {\n  if (!('custom' in this.attributes)) {\n    this.attributes.custom = {}\n  }\n  this.attributes.custom.relationType = type\n}\n\n//from: https://stackoverflow.com/questions/1484506/random-color-generator\nconst getRandomColor = () => {\n  var letters = '0123456789ABCDEF'\n  var color = '#'\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n\nexport default Relation\n","import Editor from './editor'\nimport Relation from './shapes/Relation'\n\nfunction getStatePropertyWrappers() {\n  const addRelation = {}\n  // addRelation.resetRelation = () => {\n  //   addRelation.state = Editor.STATE.ADD_RELATION\n  //   addRelation.isEmpty = true\n  //   addRelation.activeArrow = null\n  //   addRelation.activeInit = []\n  //   addRelation.ids = []\n  // }\n  addRelation.reset = () => {\n    addRelation.state = Editor.STATE.ADD_RELATION\n    addRelation.isEmpty = true\n    addRelation.draftArrows = []\n    addRelation.activeArrow = null\n    addRelation.activeInit = []\n    addRelation.ids = []\n    addRelation.type = Relation.TYPE.LINK\n  }\n  addRelation.reset()\n  return [addRelation]\n}\n\nexport { getStatePropertyWrappers }\n","import { ACTION_TYPE } from './singletons/actionHandler'\nimport Shape from './shapes/Shape'\n\nconst createAction = (type, parameters) => {\n  switch (type) {\n    case ACTION_TYPE.ADD_RELATION: {\n      const { relation } = parameters\n      return {\n        type,\n        relation,\n      }\n    }\n    case ACTION_TYPE.REMOVE_RELATION: {\n      const { relation } = parameters\n      return {\n        type,\n        relation,\n      }\n    }\n    case ACTION_TYPE.ADD_SHAPE: {\n      const { relation } = parameters\n      return {\n        type,\n        relation,\n      }\n    }\n    case ACTION_TYPE.REMOVE_SHAPE: {\n      const { shape, parent } = parameters\n      return {\n        type,\n        shape,\n        ...(parent && { parent_id: parent.id }),\n        index: getIndex(shape, parent),\n      }\n    }\n  }\n}\n\nconst getIndex = (shape, parent) => {\n  switch (shape.getType()) {\n    case Shape.TYPE.WORD: {\n      return parent.words.findIndex((w) => w.id === shape.id)\n    }\n    case Shape.TYPE.BASELINE: {\n      return parent.baselines.findIndex((l) => l.id === shape.id)\n    }\n    case Shape.TYPE.TABLE:\n    case Shape.TYPE.REGION: {\n      return parent.regions.findIndex((l) => l.id === shape.id)\n    }\n  }\n}\n\nexport { createAction }\n","import Baseline from './shapes/Baseline.js'\nimport Region from './shapes/Region.js'\nimport Shape from './shapes/Shape.js'\nimport Table from './shapes/Table.js'\nimport {\n  Singleton as ActionHandler,\n  ACTION_TYPE,\n  SELECTION_TYPE,\n} from './singletons/actionHandler.js'\nimport { Singleton as IdHandler } from './singletons/IdHandler.js'\nimport { Singleton as MyFabric } from './myFabric.js'\nimport { Singleton as ModalHandler } from './singletons/ModalHandler.js'\nimport { Singleton as Settings } from './singletons/settings.js'\nimport { xml2js, js2xml } from 'xml-js'\nimport { ctxmenu } from 'ctxmenu'\nimport {\n  pointInPolygon,\n  polygonHull,\n  lineIntersectsLine,\n  lineMidpoint,\n  polygonCentroid,\n  polygonIntersectsPolygon,\n  polygonInPolygon,\n  lineLength,\n} from 'geometric'\nimport {\n  jsonToBlueprint,\n  blueprintToJson,\n  getUnSupportedElements,\n} from './jsonParser.js'\nimport {\n  getRectCoords,\n  getClosestLine,\n  getSplitCoords,\n  whatSideOfLine,\n  getMergePartners,\n  array_move,\n  createSplitline,\n} from './geometryFunctions.js'\nimport Cell from './shapes/Cell.js'\nimport { Rect } from 'openseadragon'\nimport Word from './shapes/Word.js'\nimport Relation from './shapes/Relation.js'\nimport { getStatePropertyWrappers } from './stateProperties.js'\nimport { createAction } from './actions.js'\n\nEditor.BUTTON = Object.freeze({\n  POINTER: 1,\n  ADD_BASELINES: 2,\n  ADD_REGIONS: 3,\n  ADD_TABLES: 4,\n  UNDO: 5,\n  REDO: 6,\n  NONE: 7,\n  ADD_RELATION: 8,\n})\n\nEditor.STATE = Object.freeze({\n  REMOVE_SHAPE: 1,\n  EDIT: 2,\n  ADD_BASELINES: 3,\n  ADD_REGIONS: 4,\n  ADD_TABLES: 5,\n  VERTICAL_SPLIT: 6,\n  HORIZONTAL_SPLIT: 7,\n  CUSTOM_SPLIT: 8,\n  ASSIGN_NEW_PARENT: 9,\n  GROUP_SELECTION: 10,\n  MULTI_SELECT: 11,\n  DUPLICATE: 12,\n  CREATE_RELATION: 13,\n  ADD_RELATION: 14,\n})\n\nEditor.CURSOR = Object.freeze({\n  SELECTION: 1,\n  TEXTLINE: 2,\n  TEXTREGION: 3,\n  TABLE: 4,\n})\n\nEditor.SHAPE_TYPE = Object.freeze({\n  REGION: 'region',\n  TABLE: 'table',\n  BASELINE: 'baseline',\n  CELL: 'cell',\n})\n\n// Editor.RELATION_TYPE = Object.freeze({\n//   RELATED_TO: 1,\n//   SAME_AS: 2,\n// })\n\nfunction Editor(canvas, xml, scaleFactor, vueFunctions) {\n  this.vueFunctions = vueFunctions\n  this.scaleFactor = scaleFactor\n\n  this.throttleCounter = 0\n  this.moveCounter = 0\n\n  this.pageJSON = xml2js(xml, {\n    compact: false,\n    trim: false,\n    alwaysArray: true,\n    alwaysChildren: true,\n  })\n\n  this.canvas = canvas\n\n  this.baselines = function () {\n    return this.regions.reduce(\n      (baselines, shape) => [...baselines, ...shape.getBaselines()],\n      []\n    )\n  }\n\n  //use allShapes instead\n  this.shapes = function () {\n    let list = []\n    this.regions.map((r) => {\n      list = list.concat(r).concat(r.baselines)\n    })\n    return list\n  }\n\n  this.regions = []\n\n  const relations = []\n\n  relations.filterByShapeId = (shapeId) => {\n    return relations.filter((r) => r.getIds().some((id) => id === shapeId))\n  }\n\n  relations.get = (relId) => {\n    return relations.find((r) => r.id === relId)\n  }\n  this.relations = relations\n  this.relationGraveyard = []\n  this.relationArrow = null\n  this.allRealtionArrows = []\n\n  this.statePropertyWrappers = getStatePropertyWrappers()\n\n  const activeShapes = []\n\n  activeShapes.isEmpty = () => {\n    return activeShapes.length === 0\n  }\n  activeShapes.isSingle = () => {\n    return activeShapes.length === 1\n  }\n  activeShapes.isWord = () => {\n    return activeShapes.isSingle() && activeShapes[0] instanceof Word\n  }\n  activeShapes.isBaseline = () => {\n    return activeShapes.isSingle() && activeShapes[0] instanceof Baseline\n  }\n  activeShapes.isRegion = () => {\n    return activeShapes.isTextRegion() || activeShapes.isTable()\n  }\n  activeShapes.isTextRegion = () => {\n    return activeShapes.isSingle() && activeShapes[0] instanceof Region\n  }\n  activeShapes.isTable = () => {\n    return activeShapes.isSingle() && activeShapes[0] instanceof Table\n  }\n  activeShapes.areMultiple = () => {\n    return !activeShapes.isEmpty() && !activeShapes.isSingle()\n  }\n  activeShapes.haveState = (state) => {\n    if (activeShapes.isEmpty()) return false\n    return activeShapes.every((s) => s.state === state)\n  }\n  activeShapes.areBaselines = () => {\n    if (activeShapes.isEmpty()) return false\n    return activeShapes.every((s) => s instanceof Baseline)\n  }\n  activeShapes.areTextRegions = () => {\n    if (activeShapes.isEmpty()) return false\n    return activeShapes.every((s) => s instanceof Region)\n  }\n  activeShapes.areTables = () => {\n    if (activeShapes.isEmpty()) return false\n    return activeShapes.every((s) => s instanceof Table)\n  }\n  activeShapes.areRegions = () => {\n    return activeShapes.areTextRegions() || activeShapes.areTables()\n  }\n\n  activeShapes.areTableAndCell = () => {\n    const tables = activeShapes.filter((s) => s instanceof Table)\n    if (tables.length != 1) return false\n    const cells = activeShapes.filter((s) => s instanceof Cell)\n    if (cells.length != 1) return false\n    return true\n  }\n  activeShapes.areSiblings = () => {\n    if (activeShapes.isEmpty() || activeShapes.isSingle()) {\n      return false\n    }\n    if (activeShapes.areBaselines()) {\n      const first = activeShapes[0]\n      const parentId = this.getBaselineParent(first.id).id\n      return activeShapes.every(\n        (s) => parentId === this.getBaselineParent(s.id).id\n      )\n    }\n    if (activeShapes.areTextRegions()) {\n      return true\n    }\n    return false\n  }\n\n  activeShapes.add = (...shapes) => {\n    shapes.map((s) => {\n      if (activeShapes.includes(s) === false) {\n        s.select()\n        activeShapes.push(s)\n      }\n    })\n    return activeShapes\n  }\n  activeShapes.remove = (...shapes) => {\n    shapes.map((s) => {\n      if (activeShapes.includes(s)) {\n        s.unSelect()\n        activeShapes.splice(activeShapes.indexOf(s), 1)\n      }\n    })\n    return activeShapes\n  }\n  activeShapes.removeAll = () => {\n    activeShapes.map((s) => s.unSelect())\n    activeShapes.length = 0\n    return activeShapes\n  }\n  activeShapes.setState = (state) => {\n    activeShapes.map((s) => s.setState(state))\n  }\n  activeShapes.withoutCells = () => {\n    return activeShapes.filter((s) => !(s instanceof Cell))\n  }\n  activeShapes.getTable = () => {\n    return activeShapes.find((s) => s instanceof Table)\n  }\n  activeShapes.getCell = () => {\n    return activeShapes.find((s) => s instanceof Cell)\n  }\n\n  this.activeShapes = activeShapes\n  this.draft = null\n  this.readingOrder = {}\n  this.mouseEventHandlers = {}\n  this.containerEventHandlers = {}\n  this.keyEventHandlers = {}\n  this.deletedShapes = []\n\n  this.state = null\n  this.shifted = false\n  this.controlPressed = false\n  this.rPressed = false\n  this.lastHovered = null\n  this.lastMousePosition = { x: 0, y: 0 }\n  this.canvasDiagonal = Math.sqrt(\n    Math.pow(this.vueFunctions.getCanvasHeight(), 2) +\n      Math.pow(this.canvas.width, 2)\n  )\n  this.prevLine = null\n  this.markedParent = null\n\n  this.mouseEventHandlers.mouseDown = mouseDown.bind(this)\n  this.mouseEventHandlers.dblClick = dblClick.bind(this)\n  this.mouseEventHandlers.mouseMove = mouseMove.bind(this)\n  this.mouseEventHandlers.mouseOut = mouseOut.bind(this)\n\n  this.containerEventHandlers.mouseUp = containerMouseUp.bind(this)\n\n  this.keyEventHandlers.keyDown = keyDown.bind(this)\n  this.keyEventHandlers.keyUp = keyUp.bind(this)\n\n  this.canvas.on('mouse:down', this.mouseEventHandlers.mouseDown)\n  this.canvas.on('mouse:dblclick', this.mouseEventHandlers.dblClick)\n  this.canvas.on('mouse:move', this.mouseEventHandlers.mouseMove)\n  this.canvas.on('mouse:out', this.mouseEventHandlers.mouseOut)\n\n  //workaroud missing mouseUp\n  document\n    .getElementById('osd')\n    .addEventListener('click', this.containerEventHandlers.mouseUp)\n\n  document.addEventListener('keydown', this.keyEventHandlers.keyDown)\n  document.addEventListener('keyup', this.keyEventHandlers.keyUp)\n\n  this.setState(Editor.STATE.EDIT)\n\n  this.actionHandler = ActionHandler.instance()\n  this.actionHandler.reset(this.vueFunctions.setEdited, this)\n\n  this.settings = Settings.instance()\n  this.settings.on('update', () => this.settingsUpdate())\n  this.$t = this.vueFunctions.$t\n\n  this.myFabric = MyFabric.instance()\n  this.myFabric.init(scaleFactor, this.vueFunctions.getTileSourceWidth())\n\n  ModalHandler.instance().setOpenFn(this.vueFunctions.openModal)\n}\n\nEditor.prototype.setState = function (newState) {\n  const endState = (state) => this.state === state && state != newState\n  const startState = (state) => this.state != state && state === newState\n\n  if (endState(Editor.STATE.EDIT)) {\n  }\n  if (endState(Editor.STATE.ADD_RELATION)) {\n    const properties = this.getStateProperties(Editor.STATE.ADD_RELATION)\n\n    this.canvas.remove(properties.activeArrow, ...properties.draftArrows)\n    properties.reset()\n    this.removeDocks()\n  }\n  if (\n    endState(Editor.STATE.ADD_BASELINES) ||\n    endState(Editor.STATE.ADD_REGIONS) ||\n    endState(Editor.STATE.ADD_TABLES)\n  ) {\n    if (this.draft) {\n      this.draft.removeFromCanvas()\n      this.draft = null\n    }\n  }\n  if (endState(Editor.STATE.CUSTOM_SPLIT)) {\n    if (this.prevLine != null) {\n      this.settings.set({ splitLineAngle: this.prevLine.angle })\n    }\n  }\n  if (\n    endState(Editor.STATE.VERTICAL_SPLIT) ||\n    endState(Editor.STATE.HORIZONTAL_SPLIT) ||\n    endState(Editor.STATE.CUSTOM_SPLIT) ||\n    endState(Editor.STATE.ASSIGN_NEW_PARENT)\n  ) {\n    this.canvas.remove(this.prevLine)\n    this.prevLine = null\n  }\n  if (endState(Editor.STATE.GROUP_SELECTION)) {\n    this.unGroupSelect()\n  }\n  if (endState(Editor.STATE.MULTI_SELECT)) {\n    this.canvas.remove(this.selectionRect)\n    this.selectionRect = null\n  }\n  if (endState(Editor.STATE.DUPLICATE)) {\n    this.canvas.remove(this.prevDuplicate)\n    this.prevDuplicate = null\n  }\n\n  if (startState(Editor.STATE.EDIT)) {\n    this.canvas.defaultCursor = this.getCursorUrl(Editor.CURSOR.SELECTION)\n    this.canvas.hoverCursor = this.getCursorUrl(Editor.CURSOR.SELECTION)\n    if (this.lastHovered) {\n      this.lastHovered.showNormal()\n      this.lastHovered = null\n    }\n  }\n\n  if (startState(Editor.STATE.ADD_RELATION)) {\n    this.settings.set({ showRelations: true })\n    this.updateRelationArrows()\n    this.showDocks()\n    this.dockPositions = this.getDockPositions()\n  }\n\n  let cursorUrl\n  if (startState(Editor.STATE.ADD_BASELINES)) {\n    cursorUrl = this.getCursorUrl(Editor.CURSOR.TEXTLINE)\n    this.settings.set({ showBaselines: true })\n  }\n  if (startState(Editor.STATE.ADD_REGIONS)) {\n    cursorUrl = this.getCursorUrl(Editor.CURSOR.TEXTREGION)\n    this.settings.set({ showRegions: true })\n  }\n  if (startState(Editor.STATE.ADD_TABLES)) {\n    cursorUrl = this.getCursorUrl(Editor.CURSOR.TABLE)\n    this.settings.set({ showRegions: true })\n  }\n  if (\n    startState(Editor.STATE.ADD_BASELINES) ||\n    startState(Editor.STATE.ADD_REGIONS) ||\n    startState(Editor.STATE.ADD_TABLES)\n  ) {\n    this.canvas.defaultCursor = cursorUrl\n    this.canvas.hoverCursor = cursorUrl\n  }\n  let angle\n  if (startState(Editor.STATE.VERTICAL_SPLIT)) {\n    angle = 90\n  }\n  if (startState(Editor.STATE.HORIZONTAL_SPLIT)) {\n    angle = 0\n  }\n  if (startState(Editor.STATE.CUSTOM_SPLIT)) {\n    angle = this.settings.get('splitLineAngle')\n  }\n  if (\n    startState(Editor.STATE.VERTICAL_SPLIT) ||\n    startState(Editor.STATE.HORIZONTAL_SPLIT) ||\n    startState(Editor.STATE.CUSTOM_SPLIT)\n  ) {\n    this.prevLine = this.myFabric.getSplitLine(\n      this.canvasDiagonal,\n      this.lastMousePosition,\n      angle\n    )\n    this.canvas.add(this.prevLine)\n  }\n  if (startState(Editor.STATE.ASSIGN_NEW_PARENT)) {\n    this.newAssignStartPos = [\n      this.lastMousePosition.x,\n      this.lastMousePosition.y,\n    ]\n    this.previewNewAssign(this.lastMousePosition)\n  }\n  if (startState(Editor.STATE.GROUP_SELECTION)) {\n    this.groupSelect()\n  }\n  if (startState(Editor.STATE.DUPLICATE)) {\n    this.previewDuplicate(this.lastMousePosition)\n  }\n  this.vueFunctions.setEditorState(newState)\n  this.state = newState\n}\n\nEditor.prototype.performSelection = function (selection) {\n  switch (selection.type) {\n    case SELECTION_TYPE.ADD:\n      this.activeShapes.add(...selection.ids.map((id) => this.getShape(id)))\n      break\n    case SELECTION_TYPE.REMOVE:\n      this.activeShapes.remove(...selection.ids.map((id) => this.getShape(id)))\n      break\n    case SELECTION_TYPE.CLEAR:\n      this.activeShapes.removeAll()\n      break\n  }\n}\n\nEditor.prototype.performAction = function (action) {\n  if (action == null) return\n  switch (action.type) {\n    case ACTION_TYPE.ADD_RELATION:\n      this.addRelation(action.relation)\n      this.updateRelationArrows()\n      break\n    case ACTION_TYPE.REMOVE_RELATION:\n      this.removeRelation(action.relation)\n      this.updateRelationArrows()\n      break\n    // case ACTION_TYPE.UPDATE_RELATION_IDS:\n    //   this.updateRelationIds(action.relation_id, action.new_shape_ids)\n    //   this.updateRelationArrows()\n    //   break\n    case ACTION_TYPE.REMOVE_SHAPE:\n      this.removeShape(action.shape.id)\n      this.updateReadingOrder()\n      break\n    case ACTION_TYPE.ADD_SHAPE:\n      if (action.shape instanceof Word) {\n        this.addWord(action.shape, action.index, action.parent_id)\n      }\n      if (action.shape instanceof Baseline) {\n        this.addBaseline(action.shape, action.index, action.parent_id)\n      }\n      if (action.shape instanceof Region) {\n        this.addRegion(action.shape, action.index)\n      }\n      if (action.shape instanceof Table) {\n        this.addTable(action.shape, action.index)\n      }\n      this.updateReadingOrder()\n      break\n    case ACTION_TYPE.CHANGE_READING_ORDER:\n      const shape = this.getShape(action.shape_id)\n      if (shape instanceof Region || shape instanceof Table) {\n        array_move(this.regions, action.old_index, action.new_index)\n      }\n      if (shape instanceof Baseline) {\n        const parent = this.getBaselineParent(shape.id)\n        array_move(parent.baselines, action.old_index, action.new_index)\n      }\n      this.updateReadingOrder()\n      break\n    case ACTION_TYPE.POSITION_MOVE: {\n      const shape = this.getShape(action.shape_id)\n      if (shape instanceof Region || shape instanceof Table) {\n        const index = this.regions.indexOf(shape)\n        array_move(this.regions, index, index + action.distance)\n      }\n      if (shape instanceof Baseline) {\n        const parent = this.getBaselineParent(shape.id)\n        const index = parent.baselines.indexOf(shape)\n        array_move(parent.baselines, index, index + action.distance)\n      }\n      this.updateReadingOrder()\n      break\n    }\n    case ACTION_TYPE.CHANGE_PARENT:\n      // console.log(action)\n      const oldParent = this.getShape(action.old_parent_id)\n      const newParent = this.getShape(action.new_parent_id)\n      const movedShapes = oldParent.baselines.splice(\n        action.old_index,\n        action.shape_count\n      )\n      newParent.baselines.splice(action.new_index, 0, ...movedShapes)\n      this.updateReadingOrder()\n      break\n    case ACTION_TYPE.ADD_POINT:\n    case ACTION_TYPE.REMOVE_POINT:\n    case ACTION_TYPE.MOVE_POINT:\n    case ACTION_TYPE.MOVE_SHAPE:\n    case ACTION_TYPE.MOVE_SHAPE_WITH_VECTOR:\n    case ACTION_TYPE.ADD_TABLE_COLUM:\n    case ACTION_TYPE.REMOVE_TABLE_COLUM:\n    case ACTION_TYPE.ADD_TABLE_ROW:\n    case ACTION_TYPE.REMOVE_TABLE_ROW:\n    case ACTION_TYPE.ADD_CELL:\n    case ACTION_TYPE.REMOVE_CELL:\n    case ACTION_TYPE.CHANGE_CELL_SPAN:\n    case ACTION_TYPE.SET_STRUCTUR_TYPE: {\n      const shape = this.getShape(action.shape_id)\n      if (shape != null) {\n        shape.performAction(action)\n      } else {\n        warn('action shape id not found')\n      }\n      break\n    }\n    case ACTION_TYPE.MULTI_ACTION:\n      action.actions.map((action) => {\n        this.performAction(action)\n      })\n      action.shape_id && this.getShape(action.shape_id).update()\n      break\n  }\n}\n\nEditor.prototype.selectLinesOfRegion = function () {\n  const textRegions = this.activeShapes.filter((s) => s instanceof Region)\n  const tables = this.activeShapes.filter((s) => s instanceof Table)\n  const lines = [\n    ...textRegions.reduce((acc, r) => [...acc, ...r.baselines], []),\n    ...tables.reduce((acc, t) => [...acc, ...t.getBaselines()], []),\n  ]\n  log(lines)\n  this.actionHandler.select({\n    type: SELECTION_TYPE.ADD,\n    ids: lines.map((l) => l.id),\n  })\n}\n\nEditor.prototype.groupSelect = function () {\n  const getRelations = function (group, vertices) {\n    return vertices.map((v) => {\n      let vertexMatrix = v.calcTransformMatrix()\n      let inverseLineMatrix = fabric.util.invertTransform(\n        group.calcTransformMatrix()\n      )\n      return fabric.util.multiplyTransformMatrices(\n        inverseLineMatrix,\n        vertexMatrix\n      )\n    })\n  }\n  this.activeShapes.setState(Shape.STATE.GROUP_SELECTION)\n\n  const shapeGroups = this.activeShapes.withoutCells().map((shape) => {\n    shape.removeFromCanvas()\n    return shape.getGroup().set({ opacity: 0.8 })\n  })\n\n  this.group = new fabric.Group(shapeGroups, {\n    id: -1,\n    cornerStyle: 'circle',\n    padding: 0,\n    cornerSize: 12,\n    cornerColor: 'white',\n    transparentCorners: true,\n    cornerStrokeColor: 'black',\n  })\n\n  this.group.childRelations = this.activeShapes.withoutCells().map((shape) => {\n    return {\n      id: shape.id,\n      vertexRelations: getRelations(this.group, shape.vertices),\n      oldCoords: shape.vertices.map((v) => ({ left: v.left, top: v.top })),\n    }\n  })\n\n  this.group.oldMatrix = this.group.calcTransformMatrix()\n\n  this.canvas.add(this.group)\n  this.canvas.setActiveObject(this.group)\n}\n\nEditor.prototype.unGroupSelect = function () {\n  this.activeShapes.setState(Shape.STATE.EDIT)\n\n  const actions = this.group.childRelations.map(\n    ({ id, vertexRelations, oldCoords }) => {\n      const newCoords = vertexRelations.map((relation) => {\n        const vertexTransform = fabric.util.multiplyTransformMatrices(\n          this.group.calcTransformMatrix(),\n          relation\n        )\n        const decomposed = fabric.util.qrDecompose(vertexTransform)\n        return { left: decomposed.translateX, top: decomposed.translateY }\n      })\n      return {\n        type: ACTION_TYPE.MOVE_SHAPE,\n        shape_id: id,\n        old_coords: oldCoords,\n        new_coords: newCoords,\n      }\n    }\n  )\n  const oldMatrix = JSON.stringify(this.group.oldMatrix)\n  const newMatrix = JSON.stringify(this.group.calcTransformMatrix())\n  if (oldMatrix !== newMatrix) {\n    const action = {\n      type: ACTION_TYPE.MULTI_ACTION,\n      actions,\n    }\n\n    this.actionHandler.doAction(action)\n    this.actionHandler.addAction(action)\n  }\n\n  this.canvas.remove(this.group)\n  this.activeShapes.map((s) => s.update())\n  this.canvas.discardActiveObject()\n}\n\nEditor.prototype.allCells = function () {\n  return this.tableRegions().reduce(\n    (cells, table) => [...cells, ...table.allCells()],\n    []\n  )\n}\n\nEditor.prototype.getCell = function (id) {\n  return this.allCells().find((cell) => cell.id === id)\n}\n\nEditor.prototype.getTableOfCell = function (id) {\n  return this.tableRegions().find(\n    (table) => table.allCells().some((c) => c.id === id),\n    []\n  )\n}\n\nEditor.prototype.isCell = function (id) {\n  return this.allCells().some((c) => c.id === id)\n}\n\nEditor.prototype.isTable = function (id) {\n  return this.getShape(id) instanceof Table\n}\n\nEditor.prototype.findParentByPolygon = function (polygonCoords) {\n  let parentShape = this.getTextRegionsAndCells().find((shape) => {\n    let polygon = shape.getArea()\n    let found = polygonCoords.some((c) => pointInPolygon([c.x, c.y], polygon))\n    return found\n  })\n  return parentShape\n}\n\n// Editor.prototype.findROIndex = function (line, futureParent) {\n//   let newLineY = line.vertices[0].top\n//   let yValues = futureParent.baselines\n//     .map((parentLine) => parentLine.vertices[0].top)\n//     .sort(function (a, b) {\n//       return a - b\n//     })\n//   let newIndex = yValues.findIndex((value) => value > newLineY)\n//   newIndex = newIndex === -1 ? yValues.length : newIndex\n//   return newIndex\n// }\n\nEditor.prototype.findBaseline = function (e) {\n  // let pointer = this.canvas.getPointer(e)\n  // let foundBaseline = this.baselines().find((baseline) => {\n  //   let polyCoords = baseline.polyCoords\n  //   let point = [pointer.x, pointer.y]\n  //   return pointInPolygon(point, polyCoords)\n  // })\n  // return foundBaseline\n}\n\nEditor.prototype.findShape = function (pointer) {\n  if (this.settings.get('showWords')) {\n    const foundShape = this.words().find((word) => {\n      let polyCoords = word.getArea()\n      let point = [pointer.x, pointer.y]\n      return pointInPolygon(point, polyCoords)\n    })\n    if (foundShape) return foundShape\n  }\n\n  if (this.settings.get('showBaselines')) {\n    const foundShape = this.baselines().find((baseline) => {\n      let polyCoords = baseline.getArea()\n      let point = [pointer.x, pointer.y]\n      return pointInPolygon(point, polyCoords)\n    })\n    if (foundShape) return foundShape\n  }\n\n  if (this.settings.get('showRegions')) {\n    const foundShape = this.getTextRegionsAndCells().find((region) => {\n      let polyCoords = region.getArea()\n      let point = [pointer.x, pointer.y]\n      return pointInPolygon(point, polyCoords)\n    })\n    if (foundShape) return foundShape\n  }\n}\n\nEditor.prototype.getSelectionParter = function (shape, pointer) {\n  // console.log(shape)\n  // const foundLine = this.baselines().find((baseline) =>\n  //   pointInPolygon([pointer.x, pointer.y], baseline.polyCoords)\n  // )\n  // const foundRegion = this.regions.find((region) =>\n  //   pointInPolygon([pointer.x, pointer.y], region.getArea())\n  // )\n  // const areLineSiblings = (line1, line2) => {\n  //   if (line1 == null || line2 == null) return false\n  //   const siblings = this.getBaselineParent(line1.id)?.baselines\n  //   if (siblings == null) return false\n  //   return siblings.find((s) => line2.id === s.id) && true\n  // }\n  // if (areLineSiblings(shape, foundLine)) {\n  //   return foundLine\n  // }\n  // if (shape instanceof Region || (shape instanceof Table && foundRegion)) {\n  //   return foundRegion\n  // }\n}\n\nEditor.prototype.settingsUpdate = function () {\n  this.allShapesAndCellsAndWords().map((s) => s.update())\n  this.updateRelationArrows()\n}\n\nEditor.prototype.buttonClick = function (button) {\n  if (button === Editor.BUTTON.UNDO) {\n    this.setState(Editor.STATE.EDIT)\n    this.actionHandler.undo()\n  }\n  if (button === Editor.BUTTON.REDO) {\n    this.setState(Editor.STATE.EDIT)\n    this.actionHandler.redo()\n  }\n\n  if (button === Editor.BUTTON.ADD_BASELINES) {\n    this.actionHandler.select({\n      type: SELECTION_TYPE.CLEAR,\n    })\n    this.setState(Editor.STATE.ADD_BASELINES)\n  }\n\n  if (button === Editor.BUTTON.ADD_REGIONS) {\n    this.actionHandler.select({\n      type: SELECTION_TYPE.CLEAR,\n    })\n    this.setState(Editor.STATE.ADD_REGIONS)\n  }\n  if (button === Editor.BUTTON.ADD_TABLES) {\n    this.actionHandler.select({\n      type: SELECTION_TYPE.CLEAR,\n    })\n    this.setState(Editor.STATE.ADD_TABLES)\n  }\n\n  if (button === Editor.BUTTON.ADD_RELATION) {\n    this.actionHandler.select({\n      type: SELECTION_TYPE.CLEAR,\n    })\n    this.setState(Editor.STATE.ADD_RELATION)\n  }\n\n  if (button === Editor.BUTTON.POINTER || button === null) {\n    this.activeShapes.setState(Shape.STATE.EDIT)\n    this.setState(Editor.STATE.EDIT)\n  }\n}\n\nEditor.prototype.render = function () {\n  let { regionBlueprints, relationsBlueprint } = jsonToBlueprint(\n    this.pageJSON,\n    this.scaleFactor\n  )\n  log(regionBlueprints)\n  log(relationsBlueprint)\n\n  if (relationsBlueprint != null) {\n    relationsBlueprint.elements.relations.map((blueprint) =>\n      this.relations.push(new Relation(blueprint))\n    )\n  }\n\n  this.regions = regionBlueprints.map((blueprint) => {\n    if (blueprint.elements.textLines) {\n      return new Region(this.canvas, blueprint)\n    }\n    return new Table(this.canvas, blueprint)\n  })\n  this.updateReadingOrder()\n  this.updateRelationArrows()\n}\n\nEditor.prototype.createPageXML = function () {\n  this.actionHandler.select({\n    type: SELECTION_TYPE.CLEAR,\n  })\n  this.updateReadingOrder()\n  let regionBlueprints = this.regions.map((region, index) =>\n    region.getBlueprint(index)\n  )\n  const relationsBlueprint = {\n    attributes: {},\n    elements: { relations: this.relations.map((r) => r.getBlueprint()) },\n  }\n\n  let json = blueprintToJson(\n    this.pageJSON,\n    regionBlueprints,\n    relationsBlueprint,\n    this.scaleFactor\n  )\n  let isValid = true\n  let xml = js2xml(json, {\n    compact: false,\n    ignoreComment: true,\n    spaces: 4,\n    attributesFn: correctAttrVal,\n    attributeValueFn: (value) => {\n      if (\n        typeof value === 'string' &&\n        (value.includes('null') ||\n          value.includes('NaN') ||\n          value.includes('undefined'))\n      ) {\n        isValid = false\n      }\n      return value\n    },\n  })\n  if (!isValid) {\n    console.error('parsing error: null, NaN or undefined was found')\n    return\n  }\n  return xml\n}\n\nEditor.prototype.getLayout = function () {\n  return this.regions.map((r) => r.getLayout())\n}\n\nEditor.prototype.getRemoveAction = function (shapes) {\n  const words = shapes.filter((s) => s instanceof Word)\n  const lines = shapes.filter((s) => s instanceof Baseline)\n  const regions = shapes.filter(\n    (s) => s instanceof Region || s instanceof Table\n  )\n  const shapeRelations = Array.from(\n    shapes.reduce((acc, s) => {\n      return new Set([...acc, ...this.relations.filterByShapeId(s.id)])\n    }, new Set())\n  )\n\n  const actions = [\n    ...shapeRelations.map((r) => {\n      return createAction(ACTION_TYPE.REMOVE_RELATION, { relation: r })\n    }),\n    ...words.map((word) => {\n      const parent = this.getWordParent(word.id)\n      return createAction(ACTION_TYPE.REMOVE_SHAPE, { shape: word, parent })\n    }),\n    ...lines.map((line) => {\n      const parent = this.getBaselineParent(line.id)\n      return createAction(ACTION_TYPE.REMOVE_SHAPE, { shape: line, parent })\n    }),\n    ...regions.map((region) =>\n      createAction(ACTION_TYPE.REMOVE_SHAPE, { shape: region, parent: this })\n    ),\n  ]\n\n  return {\n    type: ACTION_TYPE.MULTI_ACTION,\n    actions,\n  }\n}\n\n// Editor.prototype.removeShapeWithAction = function (shape) {\n//   this.actionHandler.select({\n//     type: SELECTION_TYPE.CLEAR,\n//   })\n//   if (\n//     this.state === Editor.STATE.ADD_BASELINES ||\n//     this.state === Editor.STATE.ADD_REGIONS\n//   ) {\n//     shape.removeFromCanvas()\n//     return\n//   }\n\n//   let action\n//   if (shape instanceof Baseline) {\n//     const parent = this.getBaselineParent(shape.id)\n//     action = {\n//       type: ACTION_TYPE.REMOVE_SHAPE,\n//       shape: shape,\n//       parent_id: parent.id,\n//       index: parent.baselines.findIndex((l) => l.id === shape.id),\n//     }\n//   } else {\n//     action = {\n//       type: ACTION_TYPE.REMOVE_SHAPE,\n//       shape: shape,\n//       index: this.regions.findIndex((l) => l.id === shape.id),\n//     }\n//   }\n\n//   this.actionHandler.doAction(action)\n//   this.actionHandler.addAction(action)\n//   this.updateReadingOrder()\n// }\n\nEditor.prototype.pointRemoveAllowed = function (id) {\n  const shape = this.allShapes().find((s) =>\n    s.vertices?.some((v) => v.id === id)\n  )\n  return (\n    (shape instanceof Region && shape.vertices.length > 3) ||\n    (shape instanceof Baseline && shape.vertices.length > 2)\n  )\n}\n\nEditor.prototype.removePointWithAction = function (id) {\n  const shape = this.allShapes().find((s) =>\n    s.vertices?.some((v) => v.id === id)\n  )\n  const index = shape.vertices.findIndex((v) => v.id === id)\n\n  shape.removePoint(id)\n  shape.modified = true\n  this.actionHandler.addAction({\n    type: ACTION_TYPE.REMOVE_POINT,\n    shape_id: shape.id,\n    point_id: id,\n    point_index: index,\n  })\n}\n\n// Editor.prototype.selectNewShapes = function (shapes) {\n//   if (this.isCell(shape?.id)) {\n//     const table = this.getTableOfCell(shape.id)\n//     this.selectNewShape(table)\n//     table.selectNewCell(shape)\n//     return\n//   }\n//   if (shape && this.activeShape?.id === shape.id) {\n//     if (this.isTable(shape.id)) {\n//       shape.selectNewCell(null)\n//     }\n//     return\n//   }\n//   this.activeShapes.unSelectAll()\n//   this.activeShapes.clear()\n\n//   if (shape) {\n//     shape.select()\n//     const parent = this.getBaselineParent(shape.id)\n//     // this.markNewParent(parent)\n//     this.activeShapes.push(shape)\n//     // console.log(`%cselected: %o`, 'color: orange', shape)\n//   }\n//   // this.vueFunctions.setActiveShape(shape)\n// }\n\nEditor.prototype.markNewParent = function (parent) {\n  if (this.markedParent?.id === parent?.id) return\n  if (this.markedParent) {\n    this.markedParent.unMark()\n    this.markedParent = null\n  }\n  if (parent) {\n    parent.mark()\n    this.markedParent = parent\n  }\n}\n\nEditor.prototype.removeCanvasListeners = function () {\n  this.canvas.off('mouse:down', this.mouseEventHandlers.mouseDown)\n  this.canvas.off('mouse:dblclick', this.mouseEventHandlers.dblClick)\n  this.canvas.off('mouse:move', this.mouseEventHandlers.mouseMove)\n  this.canvas.off('mouse:out', this.mouseEventHandlers.mouseOut)\n}\n\nEditor.prototype.removeKeyListeners = function () {\n  document.removeEventListener('keydown', this.keyEventHandlers.keyDown)\n  document.removeEventListener('keyup', this.keyEventHandlers.keyUp)\n}\n\nEditor.prototype.finishRelation = function () {\n  const properties = this.getStateProperties(Editor.STATE.ADD_RELATION)\n\n  const newRelation = new Relation()\n  newRelation.setIds(properties.ids)\n  newRelation.setType(properties.type)\n  const action = {\n    type: ACTION_TYPE.ADD_RELATION,\n    relation: newRelation,\n  }\n  this.actionHandler.doAction(action)\n  this.actionHandler.addAction(action)\n  this.canvas.remove(properties.activeArrow, ...properties.draftArrows)\n  properties.reset()\n}\n\nEditor.prototype.finishBaseline = function (line) {\n  line.setState(Shape.STATE.EDIT)\n  let parent = this.findParentByPolygon(line.getPolygonCoords())\n  //console.log(parent)\n  if (parent) {\n    const index = parent.expectedIndex(line)\n\n    const action = {\n      type: ACTION_TYPE.ADD_SHAPE,\n      index: index,\n      shape: line,\n      parent_id: parent.id,\n    }\n    this.actionHandler.doAction(action)\n    this.actionHandler.addAction(action)\n  } else {\n    let newRegion = new Region(this.canvas)\n    newRegion.adjustToBaseline(line.getPolygonCoords())\n    newRegion.addBaseline(line, 0)\n    const index = this.expectedRegionIndex(newRegion)\n    const action = {\n      type: ACTION_TYPE.ADD_SHAPE,\n      index: index,\n      shape: newRegion,\n    }\n\n    this.actionHandler.doAction(action)\n    this.actionHandler.addAction(action)\n  }\n}\n\nEditor.prototype.expectedRegionIndex = function (region) {\n  const newRegionY = region.vertices[0].top\n  const yValues = this.regions\n    .map((r) => r.vertices[0].top)\n    .sort((a, b) => a - b)\n  const newIndex = yValues.findIndex((value) => value > newRegionY)\n  return newIndex === -1 ? yValues.length : newIndex\n}\n\nEditor.prototype.splitTextLine = function (currentLine, splitLine) {\n  let splitList = getSplitCoords(currentLine, splitLine)\n  if (splitList.length <= 1) return\n\n  let newLines = splitList.map((splitItem) => {\n    let textLine = new Baseline(this.canvas)\n    textLine.vertices = splitItem.vertices.map((v) =>\n      textLine.getVertex(v.x, v.y, v.id)\n    )\n    textLine.words = currentLine.words\n    textLine.text = currentLine.text\n    return textLine\n  })\n  return newLines\n}\n\nEditor.prototype.splitTextRegion = function (currentRegion, splitLine) {\n  // console.log(currentRegion)\n  let splitList = getSplitCoords(currentRegion, splitLine)\n  //console.log(JSON.parse(JSON.stringify(splitList)))\n  if (splitList.length <= 1 || splitList.length > 3) return\n\n  let last = splitList.pop()\n\n  let newRegions = splitList.map((splitItem, index) => {\n    let newRegion = new Region(this.canvas)\n    newRegion.vertices = splitItem.vertices.map((v) =>\n      newRegion.getVertex(v.x, v.y, v.id)\n    )\n    newRegion.words = currentRegion.words\n    newRegion.text = currentRegion.text\n    if (index === 0) {\n      newRegion.vertices = newRegion.vertices.concat(\n        last.vertices.map((v) => newRegion.getVertex(v.x, v.y, v.id))\n      )\n    }\n    return newRegion\n  })\n\n  // console.log(newRegions)\n\n  let splittedLines = currentRegion.baselines.reduce((acc, line) => {\n    let newLines = this.splitShape(line, splitLine)\n    if (newLines) return acc.concat(newLines)\n    return acc.concat([line])\n  }, [])\n\n  let sides = [\n    {\n      region: newRegions[0],\n      sideIndex: whatSideOfLine(newRegions[0], splitLine),\n    },\n    {\n      region: newRegions[1],\n      sideIndex: whatSideOfLine(newRegions[1], splitLine),\n    },\n  ]\n\n  splittedLines.map((line) => {\n    let lineSideIndex = whatSideOfLine(line, splitLine)\n    sides\n      .find((side) => side.sideIndex === lineSideIndex)\n      .region.baselines.push(line)\n  })\n\n  return sides.map((side) => side.region)\n}\n\nEditor.prototype.splitShape = function (shape, splitLine) {\n  if (shape instanceof Baseline) {\n    return this.splitTextLine(shape, splitLine)\n  }\n  if (shape instanceof Region) {\n    return this.splitTextRegion(shape, splitLine)\n  }\n}\n\nEditor.prototype.getMergeAction = function (oldShapes, newShape) {\n  let newIndex\n  let parent\n  if (oldShapes[0].getType() === Shape.TYPE.BASELINE) {\n    parent = this.getBaselineParent(oldShapes[0].id)\n    log(parent)\n    newIndex = parent.baselines.indexOf(oldShapes[0])\n  }\n  if (oldShapes[0].getType() === Shape.TYPE.REGION) {\n    newIndex = this.regions.indexOf(oldShapes[0])\n  }\n\n  return {\n    type: ACTION_TYPE.MULTI_ACTION,\n    actions: [\n      ...this.getRemoveAction(oldShapes).actions,\n      {\n        type: ACTION_TYPE.ADD_SHAPE,\n        shape: newShape,\n        index: newIndex,\n        parent_id: parent?.id,\n      },\n    ],\n  }\n}\n\nEditor.prototype.getSplitAction = function (oldShape, newShapes) {\n  let parent\n  let oldIndex\n  if (oldShape instanceof Baseline) {\n    parent = this.getBaselineParent(oldShape.id)\n    oldIndex = parent.baselines.indexOf(oldShape)\n  }\n\n  if (oldShape instanceof Region) {\n    oldIndex = this.regions.indexOf(oldShape)\n  }\n\n  return {\n    type: ACTION_TYPE.MULTI_ACTION,\n    actions: [\n      ...this.getRemoveAction([oldShape]).actions,\n      ...newShapes.map((s, index) => ({\n        type: ACTION_TYPE.ADD_SHAPE,\n        shape: s,\n        index: oldIndex + index,\n        parent_id: parent?.id,\n      })),\n    ],\n  }\n}\n\nEditor.prototype.getStateProperties = function (state) {\n  return this.statePropertyWrappers.find((prop) => prop.state === state)\n}\n\nEditor.prototype.getRegion = function (id) {\n  let foundRegion\n  this.regions.map((r) => {\n    if (r.id === id) {\n      foundRegion = r\n    }\n  })\n  return foundRegion\n}\n\nEditor.prototype.getBaselineParent = function (id) {\n  return this.getTextRegionsAndCells().find((shape) =>\n    shape.baselines.find((line) => line.id === id)\n  )\n}\n\nEditor.prototype.getWordParent = function (id) {\n  return this.baselines().find((line) =>\n    line.words.find((word) => word.id === id)\n  )\n}\n\nEditor.prototype.getTextRegionsAndCells = function () {\n  return [...this.textRegions(), ...this.allCells()]\n}\n\nEditor.prototype.getShape = function (id) {\n  return this.allShapesAndCellsAndWords().find((s) => s.id === id)\n}\n\nEditor.prototype.words = function () {\n  return this.baselines().reduce((acc, line) => [...acc, ...line.words], [])\n}\n\nEditor.prototype.allShapes = function () {\n  return this.regions.reduce((acc, region) => {\n    if (region.baselines) {\n      return [...acc, region, ...region.baselines]\n    }\n    return [...acc, region, ...region.getBaselines()]\n  }, [])\n}\n\nEditor.prototype.allShapesAndCells = function () {\n  return [...this.allShapes(), ...this.allCells()]\n}\n\nEditor.prototype.allShapesAndCellsAndWords = function () {\n  return [...this.allShapesAndCells(), ...this.words()]\n}\n\nEditor.prototype.addRegion = function (region, index) {\n  this.regions.splice(index, 0, region)\n  region.baselines?.map((bl) => {\n    bl.update()\n  })\n  region.update()\n}\n\nEditor.prototype.addTable = function (table, index) {\n  this.regions.splice(index, 0, table)\n  table.update()\n}\n\nEditor.prototype.addBaseline = function (line, index, parentId) {\n  let parent = this.getRegion(parentId) || this.getCell(parentId)\n  parent.addBaseline(line, index)\n  line.words.map((w) => w.update())\n  line.update()\n}\n\nEditor.prototype.addWord = function (word, index, parentId) {\n  const parent = this.getShape(parentId)\n  parent.addWord(word, index)\n  word.update()\n}\n\nEditor.prototype.addShape = function (shape, index, parentId) {\n  if (shape instanceof Baseline) {\n    this.addBaseline(shape, index, parentId)\n  }\n  if (shape instanceof Region) {\n    this.addRegion(shape, index)\n  }\n}\n\n// Editor.prototype.removeRegion = function (id) {\n//   this.regions = this.regions.filter((region, index) => {\n//     if (region.id === id) {\n//       region.unSelect()\n//       region.removeFromCanvas()\n//       region.baselines.map((bl) => {\n//         bl.unSelect()\n//         bl.removeFromCanvas()\n//       })\n//       this.deletedShapes.push({\n//         object: region,\n//         index: index,\n//       })\n//       return false\n//     }\n//     return true\n//   })\n// }\n\n// Editor.prototype.restoreShapeRelations = function (id) {\n//   const shapeRelations = this.relationGraveyard.filterByShapeId(id)\n// }\n\n// Editor.prototype.removeShapeRelations = function (id) {\n//   const shapeRelations = this.relations.filterByShapeId(id)\n//   shapeRelations.map((r) => {\n//     const index = this.relations.indexOf(r)\n//     const [deletedRelation] = this.relations.splice(index, 1)\n//     this.relationGraveyard.push(deletedRelation)\n//   })\n// }\n\nEditor.prototype.removeShape = function (id) {\n  let index = this.regions.findIndex((r) => r.id === id)\n  if (index >= 0) {\n    const [region] = this.regions.splice(index, 1)\n    region.unSelect()\n    log('called here')\n    region.removeFromCanvas()\n    region.removeChildsFromCanvas()\n    return\n  }\n  let parent = this.getBaselineParent(id)\n  if (parent != null) {\n    index = parent.baselines.findIndex((l) => l.id === id)\n    if (index >= 0) {\n      const [line] = parent.baselines.splice(index, 1)\n      line.unSelect()\n      line.removeFromCanvas()\n      line.removeChildsFromCanvas()\n      return\n    }\n  }\n  parent = this.getWordParent(id)\n  if (parent != null) {\n    index = parent.words.findIndex((word) => word.id === id)\n    if (index >= 0) {\n      const [line] = parent.words.splice(index, 1)\n      line.unSelect()\n      line.removeFromCanvas()\n      return\n    }\n  }\n}\n\nEditor.prototype.mergeSmallLines = function (region) {\n  return\n  // let mergePartners = []\n  // let candidates = [...region.baselines]\n\n  // region.baselines.map((line) => {\n  //   // console.log(JSON.parse(JSON.stringify(candidates)))\n  //   let otherCandidates = candidates.filter((c) => c.id != line.id)\n  //   let partners = getMergePartners(line, otherCandidates, this.scaleFactor, {\n  //     width: this.canvas.width,\n  //     height: this.vueFunctions.getCanvasHeight(),\n  //   })\n  //   if (partners) {\n  //     //console.log(partners)\n  //     partners.map((p) => {\n  //       candidates = candidates.filter((c) => c.id != p.id)\n  //     })\n  //     mergePartners.push(partners)\n  //   }\n  // })\n\n  // if (mergePartners.length < 1) return\n\n  // let oldLines = mergePartners.flat()\n  // let newLines = mergePartners.map((p) => this.mergeTextLines(p))\n\n  // return {\n  //   type: ACTION_TYPE.MULTI_ACTION,\n  //   actions: oldLines\n  //     .map((line) => ({\n  //       type: ACTION_TYPE.REMOVE_SHAPE,\n  //       shape_id: line.id,\n  //     }))\n  //     .concat(\n  //       newLines.map((line) => ({\n  //         type: ACTION_TYPE.ADD_SHAPE,\n  //         shape_id: line.id,\n  //       }))\n  //     ),\n  // }\n}\n\nEditor.prototype.merge = function () {\n  if (this.activeShapes.areSiblings() === false) return\n  let newShape\n  if (this.activeShapes.areBaselines()) {\n    newShape = this.mergeTextLines([...this.activeShapes])\n  }\n  if (this.activeShapes.areTextRegions()) {\n    newShape = this.mergeTextRegions([...this.activeShapes])\n  }\n  const action = this.getMergeAction([...this.activeShapes], newShape)\n  log(newShape)\n\n  this.actionHandler.select({\n    type: SELECTION_TYPE.CLEAR,\n  })\n  this.actionHandler.doAction(action)\n  this.actionHandler.addAction(action)\n  this.actionHandler.select({\n    type: SELECTION_TYPE.ADD,\n    ids: [newShape.id],\n  })\n}\n\nEditor.prototype.mergeTextLines = function (textLines) {\n  const merge = (lines) => {\n    if (lines.length === 1) {\n      return lines[0]\n    }\n    let newLine = new Baseline(this.canvas)\n    let [line1, line2] = getClosestLine(lines)\n    newLine.vertices = line1.vertices\n      .map((v) => newLine.getVertex(v.left, v.top, v.id))\n      .concat(line2.vertices.map((v) => newLine.getVertex(v.left, v.top, v.id)))\n    newLine.words = line1.words.concat(line2.words)\n    newLine.text = `${line1.text} ${line2.text}`\n    return merge(\n      [newLine].concat(\n        lines.filter((line) => line.id != line1.id && line.id != line2.id)\n      )\n    )\n  }\n  // let parentRegion = this.getBaselineParent(textLines[0].id)\n  let newLine = merge(textLines)\n\n  // textLines.map((line) => {\n  //   this.removeShape(line.id)\n  // })\n  // this.addBaseline(\n  //   newLine,\n  //   parentRegion.baselines.indexOf(textLines[0]),\n  //   parentRegion.id\n  // )\n  return newLine\n}\n\nEditor.prototype.mergeTextRegions = function (textRegions) {\n  let newRegion = new Region(this.canvas)\n\n  let allRegionPoints = textRegions.reduce((allPoints, region) => {\n    return allPoints.concat(region.vertices.map((v) => [v.left, v.top]))\n  }, [])\n\n  let allTextLines = textRegions.reduce((allLines, region) => {\n    return allLines.concat(region.baselines)\n  }, [])\n\n  let hull = polygonHull(allRegionPoints)\n\n  let newVertices = hull.map((point) => newRegion.getVertex(point[0], point[1]))\n\n  newRegion.baselines = allTextLines\n\n  // textRegions.map((region) => {\n  //   this.removeShape(region.id)\n  // })\n\n  newRegion.addMultiplePoints(newVertices)\n  // this.addRegion(newRegion, this.regions.indexOf(textRegions[0]))\n\n  return newRegion\n}\n\n// Editor.prototype.handleMultiselection = function (foundShape) {\n//   console.log(foundShape)\n//   console.log(this.activeShape)\n\n//   const areSiblings = (line1, line2) => {\n//     let siblings = this.getBaselineParent(line1.id).baselines\n//     if (siblings == null) return false\n//     return siblings.find((s) => line2.id === s.id) && true\n//   }\n\n//   const requestSelectionAdd = (selection, shape) => {\n//     if (selection.has(shape)) {\n//       selection.remove(shape)\n//     } else {\n//       selection.add(shape)\n//     }\n//   }\n\n//   const setNewMultiselection = (shape1, shape2) => {\n//     let selection = new Multiselection(this.canvas)\n//     selection.add(shape1)\n//     selection.add(shape2)\n//     this.activeShape = selection\n//   }\n\n//   if (foundShape == null) return\n\n//   const activeType =\n//     this.activeShape instanceof Baseline\n//       ? 'Baseline'\n//       : this.activeShape instanceof Region\n//       ? 'Region'\n//       : this.activeShape instanceof Table\n//       ? 'Table'\n//       : null\n\n//   const foundType =\n//     foundShape instanceof Baseline\n//       ? 'Baseline'\n//       : foundShape instanceof Region\n//       ? 'Region'\n//       : foundShape instanceof Table\n//       ? 'Table'\n//       : null\n\n//   if (\n//     this.activeShape instanceof Baseline &&\n//     !(foundShape instanceof Baseline)\n//   ) {\n//     return\n//   }\n//   if (!areSiblings(this.activeShape, foundShape)) {\n//     return\n//   }\n//   if (\n//     (this.activeShape instanceof Region || this.activeShape instanceof Table) &&\n//     !(\n//       this.activeShape instanceof Region ||\n//       this.activeShape instanceof Table ||\n//       this.activeShape instanceof Baseline\n//     )\n//   ) {\n//     return\n//   }\n\n//   console.log(this.activeShape, foundShape)\n\n//   // if (this.activeShape instanceof Baseline) {\n//   //   if (foundShape instanceof Baseline) {\n//   //     if (areSiblings(this.activeShape, foundShape)) {\n//   //       setNewMultiselection(this.activeShape, foundShape)\n//   //     }\n//   //   }\n//   // } else if (null) {\n//   //   if (foundShape instanceof Region || foundShape instanceof Table) {\n//   //     setNewMultiselection(this.activeShape, foundShape)\n//   //   }\n//   //   if (foundShape instanceof Baseline) {\n//   //     let region = this.getBaselineParent(foundShape.id)\n//   //     setNewMultiselection(this.activeShape, region)\n//   //   }\n//   // } else if (this.activeShape instanceof Multiselection) {\n//   if (this.activeShape.type === 'Baseline' && foundShape instanceof Baseline) {\n//     if (areSiblings(this.activeShape.shapes[0], foundShape)) {\n//       requestSelectionAdd(this.activeShape, foundShape)\n//     }\n//   } else if (\n//     (this.activeShape.type === 'Region' && foundShape instanceof Region) ||\n//     foundShape instanceof Table\n//   ) {\n//     requestSelectionAdd(this.activeShape, foundShape)\n//   } else if (\n//     this.activeShape.type === 'Region' &&\n//     foundShape instanceof Baseline\n//   ) {\n//     let region = this.getBaselineParent(foundShape.id)\n//     requestSelectionAdd(this.activeShape, region)\n//   }\n// }\n// this.vueFunctions.updateTree()\n\nEditor.prototype.getCursorUrl = function (cursor) {\n  switch (cursor) {\n    case Editor.CURSOR.SELECTION:\n      return `url(\"${this.vueFunctions.getRouterBase()}images/Selection-Tool.png\") 5 3, default`\n    case Editor.CURSOR.TEXTLINE:\n      return `url(\"${this.vueFunctions.getRouterBase()}images/Pen-Tool.png\") 2 2, default`\n    case Editor.CURSOR.TEXTREGION:\n      return `url(\"${this.vueFunctions.getRouterBase()}images/Region-Tool.png\") 13 13, default`\n    case Editor.CURSOR.TABLE:\n      return `url(\"${this.vueFunctions.getRouterBase()}images/Table-Tool.png\") 15 15, default`\n  }\n}\n\n// Editor.prototype.previewSplit = function (pointer, state) {\n//   if (state === Editor.STATE.VERTICAL_SPLIT) {\n//     this.prevLine = this.myFabric.getVerticalSplitLine(\n//       this.vueFunctions.getCanvasHeight(),\n//       pointer\n//     )\n//   }\n\n//   if (state === Editor.STATE.HORIZONTAL_SPLIT) {\n//     this.prevLine = this.myFabric.getHorizontalSplitLine(\n//       this.canvas.width,\n//       pointer\n//     )\n//   }\n//   if (state === Editor.STATE.CUSTOM_SPLIT) {\n//     console.log('here')\n//     this.prevLine = this.myFabric.getSplitLine(\n//       this.canvas.width,\n//       this.canvas.height,\n//       pointer,\n//       90\n//     )\n//     console.log(this.prevLine)\n//   }\n//   this.canvas.add(this.prevLine)\n// }\n\nEditor.prototype.updateDuplicate = function (pointer) {\n  if (this.activeShapes.isBaseline() && this.prevDuplicate) {\n    if (!this.canvas.contains(this.prevDuplicate)) {\n      this.canvas.add(this.prevDuplicate)\n    }\n    this.prevDuplicate.set({ left: pointer.x, top: pointer.y })\n    this.canvas.requestRenderAll()\n  }\n}\n\nEditor.prototype.updateRelationArrow = function (pointer) {\n  const properties = this.getStateProperties(Editor.STATE.ADD_RELATION)\n  this.canvas.remove(properties.activeArrow)\n  properties.activeArrow = this.myFabric.getRelationArrow(\n    properties.activeInit,\n    [pointer.x, pointer.y]\n  )\n  this.canvas.add(properties.activeArrow)\n}\n\nEditor.prototype.previewDuplicate = function () {\n  if (this.activeShapes.isBaseline()) {\n    this.prevDuplicate = this.myFabric.clone(this.activeShapes[0].polygon)\n    this.prevDuplicate.set({\n      evented: false,\n      initPosition: { x: this.prevDuplicate.left, y: this.prevDuplicate.top },\n    })\n  }\n}\n\nEditor.prototype.previewNewAssign = function (pointer) {\n  this.canvas.remove(this.prevLine)\n  this.prevLine = this.myFabric.getNewAssignLine(this.newAssignStartPos, [\n    pointer.x,\n    pointer.y,\n  ])\n\n  const parent = this.findParentByPolygon([pointer])\n  this.markNewParent(parent)\n\n  this.canvas.add(this.prevLine)\n}\n\nEditor.prototype.createSelectionRect = function (pointer) {\n  this.selectionRect = this.myFabric.getSelectionRect(pointer.x, pointer.y)\n  this.canvas.add(this.selectionRect)\n}\n\nEditor.prototype.addRelation = function (relation) {\n  this.relations.push(relation)\n  log([...this.relations])\n}\n\nEditor.prototype.removeRelation = function ({ id }) {\n  const index = this.relations.findIndex((r) => r.id === id)\n  this.relations.splice(index, 1)\n}\n\nEditor.prototype.updateRelationIds = function (id, newIds) {\n  const relation = this.relations.find((r) => r.id === id)\n  if (relation == null) {\n    warn('relation could not be found')\n  } else {\n    relation.setIds([...newIds])\n  }\n}\n\nEditor.prototype.showDocks = function () {\n  this.allShapesAndCells().map((s) => {\n    s.showDock(this.getType(s))\n  })\n}\n\nEditor.prototype.getDockPositions = function () {\n  return this.allShapesAndCells().map((s) => {\n    if (s.dock == null) {\n      return\n    }\n    return { x: s.dock.left, y: s.dock.top }\n  })\n}\n\nEditor.prototype.removeDocks = function () {\n  this.allShapesAndCells().map((s) => {\n    s.removeDock()\n  })\n}\n\nEditor.prototype.initRelationCreation = function (id, type) {\n  const properties = this.getStateProperties(Editor.STATE.ADD_RELATION)\n  const baseShape = this.getShape(id)\n  properties.activeInit = [baseShape.dock.left, baseShape.dock.top]\n  properties.activeArrow = this.myFabric.getRelationArrow(\n    properties.activeInit,\n    [this.lastMousePosition.x, this.lastMousePosition.y]\n  )\n  properties.isEmpty = false\n  if (type != null) {\n    properties.type = type\n  }\n  this.canvas.add(properties.activeArrow)\n  properties.ids.push(baseShape.id)\n}\n\n// Editor.prototype.showRelations = function () {\n//   this.relationViews = this.relations.map(({ ids, type }) => {\n//     const vertices = ids.reduce(\n//       (acc, id) => [...acc, ...this.getShape(id).vertices],\n//       []\n//     )\n//     return this.myFabric.getRelationBubble(vertices, type)\n//   })\n//   const views = this.relationViews.flat()\n//   views.map((v) => {\n//     if (!this.canvas.contains(v)) {\n//       this.canvas.add(v)\n//     }\n//   })\n// }\n\nEditor.prototype.textRegions = function () {\n  return this.regions.filter((r) => r instanceof Region)\n}\n\nEditor.prototype.tableRegions = function () {\n  return this.regions.filter((r) => r instanceof Table)\n}\n\nEditor.prototype.updateRelationArrows = function () {\n  //log('Relations: ', this.relations)\n  this.canvas.remove(...this.allRealtionArrows)\n  this.allRealtionArrows = []\n  if (this.settings.get('showRelations')) {\n    this.allRealtionArrows = this.relations.reduce((acc, r) => {\n      const arrows = []\n      log(r.getIds())\n      r.getIds().reduce((id1, id2) => {\n        const s1 = this.getShape(id1)\n        const s2 = this.getShape(id2)\n        if (s1 == null || s2 == null) {\n          warn('Relation has wrong shape ids')\n          return id2\n        }\n        arrows.push(\n          this.myFabric.getRelationArrow(\n            s1.getMidPoint(),\n            s2.getMidPoint(),\n            r.color\n          )\n        )\n        return id2\n      })\n      return [...acc, ...arrows]\n    }, [])\n    this.canvas.add(...this.allRealtionArrows)\n  }\n}\n\nEditor.prototype.updateReadingOrder = function () {\n  this.regions.map((r, rIndex) => {\n    r.setReadingOrder(rIndex)\n    if (r.baselines) {\n      r.baselines.map((l, lIndex) => {\n        l.setReadingOrder(lIndex)\n      })\n    }\n    if (r.allCells) {\n      r.allCells().map((c) => {\n        c.baselines.map((l, index) => {\n          l.setReadingOrder(index)\n        })\n      })\n    }\n  })\n  this.allShapesAndCells().map((s) => s.update())\n}\n\nEditor.prototype.resetContextMenu = function () {\n  ctxmenu.update('#box', [])\n}\n\nEditor.prototype.updateContextMenu = function (element, position) {\n  ctxmenu.update('#layout-panel', [])\n\n  const getStructureItem = (shapeInfo, type, color, bold) => ({\n    text: `<div style=\"display: inline-block;\n      background-color:${color};\n      border-radius:20px;\n      width: 20px;\n      height: 20px;\n      margin-bottom: -3px;\n      margin-right: 12px;\n      margin-left: -3px;\"></div>${bold ? `<strong>${type}</strong>` : type} `,\n    action: () => {\n      let action\n      if (shapeInfo.length === 1) {\n        const [{ id, oldType }] = shapeInfo\n        action = {\n          type: ACTION_TYPE.SET_STRUCTUR_TYPE,\n          shape_id: id,\n          old_type: oldType,\n          new_type: type,\n        }\n      } else {\n        action = {\n          type: ACTION_TYPE.MULTI_ACTION,\n          actions: shapeInfo.map(({ id, oldType }) => ({\n            type: ACTION_TYPE.SET_STRUCTUR_TYPE,\n            shape_id: id,\n            old_type: oldType,\n            new_type: type,\n          })),\n        }\n      }\n      this.actionHandler.doAction(action)\n      this.actionHandler.addAction(action)\n    },\n  })\n\n  const getAssignStructure = (shapes) => {\n    const structureTypeList = [...this.settings.structureTypes]\n    structureTypeList.push({ name: 'none', color: '#FFFFFF' })\n\n    if (shapes.areTableAndCell()) {\n      const cell = shapes.find((s) => s instanceof Cell)\n      const cellStructureType = cell?.attributes?.custom?.structureType\n      const cellStructureTypeIndex = structureTypeList.findIndex(\n        (el) => el.name === cellStructureType\n      )\n      return {\n        text: this.$t('Assign structure type'),\n        subMenu: structureTypeList.map(({ name, color }, index) =>\n          getStructureItem(\n            [\n              {\n                id: cell.id,\n                oldType: cellStructureType,\n              },\n            ],\n            name,\n            color,\n            cellStructureTypeIndex === index\n          )\n        ),\n      }\n    }\n    if (shapes.areMultiple()) {\n      const shapeInfo = shapes.map((s) => ({\n        id: s.id,\n        oldType: s.attributes.custom.structureType,\n      }))\n      const indices = shapeInfo.map(({ oldType }) =>\n        structureTypeList.findIndex((el) => el.name === oldType)\n      )\n      return {\n        text: this.$t('Assign structure type'),\n        subMenu: structureTypeList.map(({ name, color }, index) =>\n          getStructureItem(shapeInfo, name, color, indices.includes(index))\n        ),\n      }\n    }\n    const currentStructureType = shapes[0].attributes.custom.structureType\n    const structureTypeIndex = structureTypeList.findIndex(\n      (el) => el.name === currentStructureType\n    )\n    return {\n      text: this.$t('Assign structure type'),\n      subMenu: structureTypeList.map(({ name, color }, index) =>\n        getStructureItem(\n          [\n            {\n              id: shapes[0].id,\n              oldType: currentStructureType,\n            },\n          ],\n          name,\n          color,\n          structureTypeIndex === index\n        )\n      ),\n    }\n  }\n\n  const getDelete = (shapes) => {\n    return {\n      text: this.$t('Delete'),\n      action: () => {\n        const action = this.getRemoveAction(shapes)\n        this.actionHandler.select({\n          type: SELECTION_TYPE.CLEAR,\n        })\n        this.actionHandler.addAction(action)\n        this.actionHandler.doAction(action)\n      },\n    }\n  }\n\n  const getTableItems = (shapes, position) => {\n    const table = shapes.find((s) => s instanceof Table)\n    return [\n      {\n        text: this.$t('Dissolve cells'),\n        action: () => {\n          table.dissolveCells(position)\n        },\n      },\n      {\n        text: this.$t('Merge row'),\n        action: () => {\n          table.mergeRow(position)\n        },\n      },\n      {\n        text: this.$t('Merge column'),\n        action: () => {\n          table.mergeColumn(position)\n        },\n      },\n      {\n        text: this.$t(\n          `<div class='ctx-menu-icon ' id='arrowRight-icon'></div>Merge right`\n        ),\n        action: () => {\n          table.mergeRightCell(position)\n        },\n      },\n      {\n        text: this.$t(\n          `<div class='ctx-menu-icon ' id='arrowLeft-icon'></div>Merge left`\n        ),\n        action: () => {\n          table.mergeLeftCell(position)\n        },\n      },\n      {\n        text: this.$t(\n          `<div class='ctx-menu-icon ' id='arrowUp-icon'></div>Merge above`\n        ),\n        action: () => {\n          table.mergeTopCell(position)\n        },\n      },\n      {\n        text: this.$t(\n          `<div class='ctx-menu-icon ' id='arrowDown-icon'></div>Merge below`\n        ),\n        action: () => {\n          table.mergeBottomCell(position)\n        },\n      },\n    ]\n  }\n\n  const getMerge = () => {\n    return {\n      text: this.$t('Merge Shapes'),\n      action: () => {\n        this.merge()\n      },\n    }\n  }\n\n  const getVerticalSplit = () => {\n    return {\n      text: this.$t('Vertical split'),\n      action: () => {\n        this.setState(Editor.STATE.VERTICAL_SPLIT)\n      },\n    }\n  }\n\n  const getHorizontalSplit = () => {\n    return {\n      text: this.$t('Horizontal split'),\n      action: () => {\n        this.setState(Editor.STATE.HORIZONTAL_SPLIT)\n      },\n    }\n  }\n\n  const getCustomSplit = () => {\n    return {\n      text: this.$t('Custom split'),\n      action: () => {\n        this.setState(Editor.STATE.CUSTOM_SPLIT)\n      },\n    }\n  }\n\n  const getDeletePoint = (element) => {\n    return {\n      text: this.$t('Delete Point'),\n      action: () => {\n        if (this.pointRemoveAllowed(element.id)) {\n          this.removePointWithAction(element.id)\n        }\n      },\n    }\n  }\n\n  const getRemoveDivider = (foundShape, element) => {\n    return {\n      text: this.$t('Remove Divider'),\n      action: () => {\n        foundShape.removeLine(element.id)\n      },\n    }\n  }\n\n  const getAssignNewParent = () => {\n    return {\n      text: this.$t('Assign to new region'),\n      action: () => {\n        this.setState(Editor.STATE.ASSIGN_NEW_PARENT)\n      },\n    }\n  }\n\n  const getSelectAll = () => {\n    return {\n      text: this.$t('Select All'),\n      action: () => {\n        if (this.regions.length > 0) {\n          this.actionHandler.select({\n            type: SELECTION_TYPE.CLEAR,\n          })\n          this.actionHandler.select({\n            type: SELECTION_TYPE.ADD,\n            ids: this.allShapesAndCells().map((r) => r.id),\n          })\n        }\n      },\n    }\n  }\n\n  const getDuplicate = (shape) => {\n    return {\n      text: this.$t('Duplicate'),\n      action: () => {\n        this.setState(Editor.STATE.DUPLICATE)\n      },\n    }\n  }\n\n  const getCreateRelation = (shape) => {\n    Object.values(Relation.TYPE)\n    return {\n      text: this.$t('Add Relation'),\n      subMenu: Object.values(Relation.TYPE).map((type) => ({\n        text: type,\n        action: () => {\n          this.setState(Editor.STATE.ADD_RELATION)\n          this.initRelationCreation(shape.id, type)\n        },\n      })),\n    }\n  }\n\n  const getDeleteRelation = (shape) => {\n    return {\n      text: this.$t('Remove Relation'),\n      action: () => {\n        const relations = this.relations.filterByShapeId(shape.id)\n        const action = {\n          type: ACTION_TYPE.MULTI_ACTION,\n          actions: relations.map((r) => ({\n            type: ACTION_TYPE.REMOVE_RELATION,\n            relation: r,\n          })),\n        }\n        this.actionHandler.doAction(action)\n        this.actionHandler.addAction(action)\n      },\n    }\n  }\n\n  let itemList = []\n\n  if (this.activeShapes.isEmpty()) {\n    itemList = [getSelectAll()]\n  }\n\n  if (this.activeShapes.areMultiple()) {\n    itemList = [\n      getAssignStructure(this.activeShapes),\n      getDelete(this.activeShapes),\n      getVerticalSplit(),\n      getHorizontalSplit(),\n      getCustomSplit(),\n    ]\n    if (this.activeShapes.areSiblings()) {\n      itemList.push(getMerge())\n      if (this.activeShapes.areBaselines()) {\n        itemList.push(getAssignNewParent())\n      }\n    }\n  }\n\n  if (this.activeShapes.areTableAndCell() || this.activeShapes.isSingle()) {\n    itemList = [\n      getAssignStructure(this.activeShapes),\n      getDelete(this.activeShapes),\n      getVerticalSplit(),\n      getHorizontalSplit(),\n      getCustomSplit(),\n    ]\n    if (this.activeShapes.areTableAndCell()) {\n      itemList.push(getCreateRelation(this.activeShapes.getCell()))\n      itemList.push(getDeleteRelation(this.activeShapes.getCell()))\n      itemList.push(...getTableItems(this.activeShapes, position))\n    } else {\n      itemList.push(getCreateRelation(this.activeShapes[0]))\n      itemList.push(getDeleteRelation(this.activeShapes[0]))\n    }\n\n    if (this.activeShapes.isBaseline()) {\n      itemList.push(getAssignNewParent())\n      itemList.push(getDuplicate())\n    }\n    if (this.activeShapes.isWord()) {\n      itemList = [\n        getAssignStructure(this.activeShapes),\n        getDelete(this.activeShapes),\n      ]\n    }\n  }\n\n  if (element instanceof fabric.Polyline) {\n    if (this.activeShapes.areTableAndCell()) {\n      const table = this.activeShapes.find((s) => s instanceof Table)\n      itemList = [getRemoveDivider(table, element)]\n    }\n  }\n\n  if (element instanceof fabric.Circle) {\n    itemList = [getDeletePoint(element)]\n  }\n\n  if (this.activeShapes[0]?.invalid) {\n    ctxmenu.update('#box', [])\n  }\n\n  ctxmenu.update('#box', itemList)\n  return\n}\n\nEditor.prototype.getType = function (shape) {\n  if (shape instanceof Region) {\n    return Editor.SHAPE_TYPE.REGION\n  }\n  if (shape instanceof Table) {\n    return Editor.SHAPE_TYPE.TABLE\n  }\n  if (shape instanceof Baseline) {\n    return Editor.SHAPE_TYPE.BASELINE\n  }\n  if (shape instanceof Cell) {\n    return Editor.SHAPE_TYPE.CELL\n  }\n}\n\nEditor.prototype.getIndex = function (shape) {\n  if (shape instanceof Region || shape instanceof Table) {\n    return this.regions.indexOf(shape)\n  }\n  if (shape instanceof Baseline) {\n    const parent = this.getBaselineParent(shape.id)\n    return parent.baselines.indexOf(shape)\n  }\n}\n\nEditor.prototype.writeToClipboard = function (shapes) {\n  const filterTextlines = (blueprint) => {\n    if (blueprint.elements?.textLines != null) {\n      blueprint.elements.textLines = blueprint.elements.textLines.filter(\n        (tl) => {\n          if (lineIds.includes(tl.attributes.id)) {\n            lines = lines.filter((l) => l.id != tl.attributes.id)\n            return true\n          }\n          return false\n        }\n      )\n    }\n    if (blueprint.elements?.cells != null) {\n      blueprint.elements.cells.map((c) => filterTextlines(c))\n    }\n  }\n\n  let lines = shapes.filter((s) => s instanceof Baseline)\n  const lineIds = lines.map((l) => l.id)\n\n  const regions = shapes.filter(\n    (s) => s instanceof Region || s instanceof Table\n  )\n\n  const regionInfos = regions.map((s) => {\n    log(s)\n    const index = this.getIndex(s)\n    const bluePrint = s.getBlueprint(index, true)\n    filterTextlines(bluePrint)\n    return {\n      type: this.getType(s),\n      blueprint: bluePrint,\n    }\n  })\n  const lineInfos = lines.map((s) => {\n    const index = this.getIndex(s)\n    const parentId = this.getBaselineParent(s.id).id\n    return {\n      type: this.getType(s),\n      blueprint: s.getBlueprint(index, null, true),\n      parentId,\n    }\n  })\n  const infos = [...regionInfos, ...lineInfos]\n  log(infos)\n  return navigator.clipboard.writeText(JSON.stringify(infos))\n}\n\nEditor.prototype.readFromClipboard = function () {\n  const isValid = (string) => {\n    try {\n      const json = JSON.parse(string)\n      if (!('type' in json[0]) || !('blueprint' in json[0])) {\n        return false\n      }\n    } catch (e) {\n      return false\n    }\n    return true\n  }\n  const dimensionAlreadyExists = (shape) =>\n    this.allShapes().some((s) =>\n      shape.vertices.every((v) =>\n        s.vertices.find((vert) => vert.left === v.left && vert.top === v.top)\n      )\n    )\n\n  const requestVertexShift = (shape) => {\n    if (dimensionAlreadyExists(shape)) {\n      shape.vertices.map((v) => {\n        v.left = v.left + 10\n        v.top = v.top + 10\n      })\n      if (shape.getBaselines) {\n        shape.getBaselines().map((l) => {\n          requestVertexShift(l)\n        })\n      }\n      requestVertexShift(shape)\n    }\n  }\n\n  navigator.clipboard.readText().then((string) => {\n    if (!isValid(string)) return\n    const infos = JSON.parse(string)\n    const actions = []\n    const shapes = infos.map((info) => {\n      info.blueprint.attributes.id = IdHandler.instance().requestId('s')\n      switch (info.type) {\n        case Editor.SHAPE_TYPE.REGION:\n          const region = new Region(this.canvas, info.blueprint)\n          requestVertexShift(region)\n          actions.push({\n            type: ACTION_TYPE.ADD_SHAPE,\n            index: info.blueprint.attributes.custom.readingOrder,\n            shape: region,\n          })\n          return region\n        case Editor.SHAPE_TYPE.TABLE:\n          const table = new Table(this.canvas, info.blueprint)\n          requestVertexShift(table)\n          actions.push({\n            type: ACTION_TYPE.ADD_SHAPE,\n            index: info.blueprint.attributes.custom.readingOrder,\n            shape: table,\n          })\n          return table\n        case Editor.SHAPE_TYPE.BASELINE:\n          const line = new Baseline(this.canvas, info.blueprint)\n          requestVertexShift(line)\n          const parent = this.getShape(info.parentId)\n          if (parent instanceof Region || parent instanceof Cell) {\n            actions.push({\n              type: ACTION_TYPE.ADD_SHAPE,\n              index: info.blueprint.attributes.custom.readingOrder,\n              shape: line,\n              parent_id: parent.id,\n            })\n            return line\n          }\n          const polyParent = this.findParentByPolygon(line.getPolygonCoords())\n          if (polyParent != null) {\n            actions.push({\n              type: ACTION_TYPE.ADD_SHAPE,\n              index: info.blueprint.attributes.custom.readingOrder,\n              shape: line,\n              parent_id: polyParent.id,\n            })\n            return line\n          }\n          const newRegion = new Region(this.canvas)\n          newRegion.adjustToBaseline(line.getPolygonCoords())\n          newRegion.addBaseline(line, 0)\n          const index = this.expectedRegionIndex(newRegion)\n          actions.push({\n            type: ACTION_TYPE.ADD_SHAPE,\n            index: index,\n            shape: newRegion,\n          })\n          return newRegion\n      }\n    })\n    const action = {\n      type: ACTION_TYPE.MULTI_ACTION,\n      actions,\n    }\n\n    this.actionHandler.doAction(action)\n    this.actionHandler.addAction(action)\n    this.actionHandler.select({\n      type: SELECTION_TYPE.CLEAR,\n    })\n    const ids = shapes.reduce(\n      (acc, s) => [\n        ...acc,\n        s.id,\n        ...(s.getBaselines ? s.getBaselines().map((l) => l.id) : []),\n      ],\n      []\n    )\n    log(ids)\n    this.actionHandler.select({\n      type: SELECTION_TYPE.ADD,\n      ids,\n    })\n  })\n}\n\nEditor.prototype.selectSingleShape = function (event, position) {\n  const foundShape = this.findShape(position)\n  if (\n    this.activeShapes.isEmpty() ||\n    (this.activeShapes.haveState(Shape.STATE.EDIT) && !event.target)\n  ) {\n    this.actionHandler.select({\n      type: SELECTION_TYPE.CLEAR,\n    })\n    if (foundShape != null) {\n      this.actionHandler.select({\n        type: SELECTION_TYPE.ADD,\n        ids: [foundShape.id],\n      })\n      if (foundShape instanceof Cell) {\n        const table = this.getTableOfCell(foundShape.id)\n        if (!this.activeShapes.includes(table)) {\n          this.actionHandler.select({\n            type: SELECTION_TYPE.ADD,\n            ids: [table.id],\n          })\n        }\n      }\n    }\n  }\n}\n\nEditor.prototype.updateVertexSizes = function (target) {\n  const unSelect = () => {\n    if (this.hoveredVertex == null) return\n    this.hoveredVertex.set({ radius: this.hoveredVertex.defaultRadius })\n    this.hoveredVertex = null\n  }\n\n  const select = (vertex) => {\n    if (target == null) return\n    vertex.set({ radius: vertex.defaultRadius * 1.5 })\n    this.hoveredVertex = vertex\n  }\n\n  if (target == null || target.type != 'circle') {\n    unSelect()\n    this.canvas.requestRenderAll()\n    return\n  }\n\n  if (this.hoveredVertex == null) {\n    select(target)\n    this.canvas.requestRenderAll()\n    return\n  }\n\n  if (this.hoveredVertex.id != target.id) {\n    unSelect()\n    select(target)\n    this.canvas.requestRenderAll()\n    return\n  }\n}\n\nfunction dblClick() {\n  if (\n    this.activeShapes.haveState(Shape.STATE.ADD_VERTEX) &&\n    this.activeShapes.isSingle()\n  ) {\n    this.activeShapes[0].removeLastAddedVertex()\n    this.activeShapes.setState(Shape.STATE.EDIT)\n  }\n\n  if (this.state === Editor.STATE.ADD_RELATION) {\n    this.finishRelation()\n  }\n\n  if (this.draft == null) return\n\n  if (this.draft instanceof Baseline) {\n    if (this.draft.vertices.length <= 2) {\n      this.draft.removeFromCanvas()\n    } else {\n      this.draft.removeLastAddedVertex()\n      this.finishBaseline(this.draft)\n    }\n  }\n  this.draft = null\n}\n\nfunction mouseMove(event) {\n  this.moveCounter = (this.moveCounter + 1) % 10\n  // const throttle = (fn, intensity) => {\n  //   if (this.throttleCounter % intensity === 0) fn()\n  //   this.throttleCounter++\n  // }\n  this.lastMousePosition = this.canvas.getPointer(event.e)\n  if (\n    this.state === Editor.STATE.VERTICAL_SPLIT ||\n    this.state === Editor.STATE.HORIZONTAL_SPLIT ||\n    this.state === Editor.STATE.CUSTOM_SPLIT\n  ) {\n    this.prevLine.set({\n      left: this.lastMousePosition.x,\n      top: this.lastMousePosition.y,\n    })\n    this.canvas.requestRenderAll()\n    return\n  }\n  if (this.state === Editor.STATE.ASSIGN_NEW_PARENT) {\n    this.previewNewAssign(this.canvas.getPointer(event.e))\n    return\n  }\n  if (this.state === Editor.STATE.DUPLICATE) {\n    this.updateDuplicate(this.lastMousePosition)\n    return\n  }\n  if (this.state === Editor.STATE.ADD_RELATION) {\n    this.updateRelationArrow(this.lastMousePosition)\n    this.updateVertexSizes(event.target)\n    return\n  }\n  if (this.state === Editor.STATE.MULTI_SELECT) {\n    if (this.selectionRect != null) {\n      this.selectionRect.update(\n        this.lastMousePosition.x,\n        this.lastMousePosition.y\n      )\n      this.canvas.requestRenderAll()\n\n      if (this.moveCounter === 0) {\n        const rectArea = this.selectionRect.getArea()\n        const foundShapes = this.allShapesAndCellsAndWords().reduce(\n          (acc, shape) => [\n            ...acc,\n            ...(shape.isVisible()\n              ? polygonIntersectsPolygon(rectArea, shape.getArea()) ||\n                polygonInPolygon(shape.getArea(), rectArea)\n                ? [shape]\n                : []\n              : []),\n          ],\n          []\n        )\n        const currentIds = this.activeShapes.map((s) => s.id)\n        const foundIds = foundShapes.map((s) => s.id)\n        const newIds = foundIds.filter((id) => !currentIds.includes(id))\n        const removeIds = currentIds.filter((id) => !foundIds.includes(id))\n        if (newIds.length > 0) {\n          this.actionHandler.select({\n            type: SELECTION_TYPE.ADD,\n            ids: newIds,\n          })\n        }\n        if (removeIds.length > 0) {\n          this.actionHandler.select({\n            type: SELECTION_TYPE.REMOVE,\n            ids: removeIds,\n          })\n        }\n      }\n    }\n  }\n\n  this.updateVertexSizes(event.target)\n\n  this.activeShapes.map((s) => s.handleMouseMoveEvent(event))\n  this.draft?.handleMouseMoveEvent(event)\n}\n\nfunction mouseOut(o) {\n  this.activeShapes.map((s) => s.handleMouseOut(o))\n}\n\nfunction mouseDown(event) {\n  this.canvasDrag = false\n  this.lastDownEvent = event\n\n  const position = this.canvas.getPointer(event.e)\n\n  switch (this.state) {\n    case Editor.STATE.MULTI_SELECT:\n      this.createSelectionRect(position)\n      this.vueFunctions.setDrag(false)\n      break\n\n    case Editor.STATE.ADD_RELATION: {\n      const properties = this.getStateProperties(Editor.STATE.ADD_RELATION)\n      if (event.target?.id == null) break\n      if (properties.ids.includes(event.target.id)) break\n      if (properties.isEmpty) {\n        this.initRelationCreation(event?.target?.id)\n      } else {\n        properties.draftArrows.push(properties.activeArrow)\n        const baseShape = this.getShape(event.target.id)\n        properties.activeInit = [baseShape.dock.left, baseShape.dock.top]\n        properties.activeArrow = this.myFabric.getRelationArrow(\n          properties.activeInit,\n          [this.lastMousePosition.x, this.lastMousePosition.y]\n        )\n        properties.draftArrows.map((a) => {\n          if (!this.canvas.contains(a)) {\n            this.canvas.add(a)\n          }\n        })\n        properties.ids.push(baseShape.id)\n      }\n    }\n    // case Editor.STATE.CREATE_RELATION: {\n    //   if (event.target?.id == null) break\n    //   const cutAfterId = (ids, cut_id) => {\n    //     const newIds = []\n    //     let found = false\n    //     ids.map((id) => {\n    //       if (found === false) {\n    //         newIds.push(id)\n    //       }\n    //       if (id === cut_id) {\n    //         found = true\n    //       }\n    //     })\n    //     return newIds\n    //   }\n    //   const cutBeforeId = (ids, cut_id) => {\n    //     const newIds = []\n    //     let found = false\n    //     ids.map((id) => {\n    //       if (id === cut_id) {\n    //         found = true\n    //       }\n    //       if (found) {\n    //         newIds.push(id)\n    //       }\n    //     })\n    //     return newIds\n    //   }\n\n    //   const activeShape = this.activeShapes[0]\n    //   const targetShape = this.getShape(event.target.id)\n\n    //   const originRelation = this.relations.getByShapeId(activeShape.id)\n    //   const targetRelation = this.relations.getByShapeId(targetShape.id)\n\n    //   const actions = []\n\n    //   const newIds = []\n\n    //   if (originRelation == null) {\n    //     newIds.push(activeShape.id)\n    //   } else {\n    //     newIds.push(...cutAfterId(originRelation.getIds(), activeShape.id))\n    //   }\n\n    //   if (targetRelation == null) {\n    //     newIds.push(targetShape.id)\n    //   } else {\n    //     newIds.push(...cutBeforeId(targetRelation.getIds(), targetShape.id))\n    //   }\n\n    //   if (originRelation == null) {\n    //     const newRelation = new Relation()\n    //     newRelation.setIds(newIds)\n    //     newRelation.setType(Relation.TYPE.JOIN)\n    //     actions.push({\n    //       type: ACTION_TYPE.ADD_RELATION,\n    //       relation: newRelation,\n    //     })\n    //   } else {\n    //     actions.push({\n    //       type: ACTION_TYPE.UPDATE_RELATION_IDS,\n    //       relation_id: originRelation.id,\n    //       old_shape_ids: originRelation.getIds(),\n    //       new_shape_ids: newIds,\n    //     })\n    //   }\n    //   if (targetRelation) {\n    //     actions.push({\n    //       type: ACTION_TYPE.REMOVE_RELATION,\n    //       relation: targetRelation,\n    //     })\n    //   }\n\n    //   const action = {\n    //     type: ACTION_TYPE.MULTI_ACTION,\n    //     actions,\n    //   }\n    //   this.actionHandler.doAction(action)\n    //   this.actionHandler.addAction(action)\n    //   this.setState(Editor.STATE.EDIT)\n    //   break\n    // }\n    case Editor.STATE.ASSIGN_NEW_PARENT:\n      if (this.markedParent == null) break\n      const oldParent = this.getBaselineParent(this.activeShapes[0].id)\n      const newParent = this.markedParent\n      const oldParentLinesCopy = [...oldParent.baselines]\n      const newParentLinesCopy = [...newParent.baselines]\n\n      const getNewAssignAction = (oldIndex, newIndex) => ({\n        type: ACTION_TYPE.CHANGE_PARENT,\n        shape_count: 1,\n        old_parent_id: oldParent.id,\n        new_parent_id: newParent.id,\n        old_index: oldIndex,\n        new_index: newIndex,\n      })\n      const expectedIndex = (list, line) => {\n        let newLineY = line.vertices[0].top\n        let yValues = list\n          .map((parentLine) => parentLine.vertices[0].top)\n          .sort((a, b) => a - b)\n        let newIndex = yValues.findIndex((value) => value > newLineY)\n        return newIndex === -1 ? yValues.length : newIndex\n      }\n      const actions = this.activeShapes.map((line) => {\n        const oldIndex = oldParentLinesCopy.indexOf(line)\n        oldParentLinesCopy.splice(oldIndex, 1)\n        const newIndex = expectedIndex(newParentLinesCopy, line)\n        newParentLinesCopy.splice(newIndex, 0, line)\n        return getNewAssignAction(oldIndex, newIndex)\n      })\n\n      const finalAction = { type: ACTION_TYPE.MULTI_ACTION, actions }\n      this.actionHandler.doAction(finalAction)\n      this.actionHandler.addAction(finalAction)\n\n      const circle = this.myFabric.getNewAssignCircle(\n        this.newAssignStartPos[0],\n        this.newAssignStartPos[1]\n      )\n      this.canvas.add(circle)\n      circle.animate(\n        { left: position.x, top: position.y },\n        {\n          onChange: this.canvas.renderAll.bind(this.canvas),\n          duration: 100,\n          onComplete: () => this.canvas.remove(circle),\n        }\n      )\n      this.canvas.remove(this.prevLine)\n      this.setState(Editor.STATE.EDIT)\n      break\n  }\n\n  if (event.button === 3) {\n    if (this.state === Editor.STATE.EDIT) {\n      const foundShape = this.findShape(position)\n\n      if (!this.activeShapes.map((s) => s.id).includes(foundShape?.id)) {\n        this.selectSingleShape(event, position)\n      }\n      this.updateContextMenu(event.target?.id ? event.target : null, position)\n    } else {\n      this.resetContextMenu()\n    }\n  }\n\n  this.activeShapes.map((s) => s.handleClickEvent(event, this.controlPressed))\n}\n\nfunction containerMouseUp(e) {\n  protocolLog(`%cclicked: ${e.x},${e.y}`, 'color: pink')\n\n  const event = this.lastDownEvent\n\n  this.vueFunctions.setDrag(true)\n  if (this.canvasDrag) return\n  const position = this.lastMousePosition\n  const foundShape = this.findShape(position)\n\n  switch (this.state) {\n    case Editor.STATE.MULTI_SELECT:\n      const updated = this.selectionRect.updated\n      if (updated) break\n\n      if (foundShape == null) break\n      if (this.activeShapes.includes(foundShape)) {\n        this.actionHandler.select({\n          type: SELECTION_TYPE.REMOVE,\n          ids: [foundShape.id],\n        })\n        if (foundShape instanceof Cell) {\n          const table = this.getTableOfCell(foundShape.id)\n          if (table.allCells().every((c) => !this.activeShapes.includes(c))) {\n            this.actionHandler.select({\n              type: SELECTION_TYPE.REMOVE,\n              ids: [table.id],\n            })\n          }\n        }\n      } else {\n        this.actionHandler.select({\n          type: SELECTION_TYPE.ADD,\n          ids: [foundShape.id],\n        })\n        if (foundShape instanceof Cell) {\n          const table = this.getTableOfCell(foundShape.id)\n          if (!this.activeShapes.includes(table)) {\n            this.actionHandler.select({\n              type: SELECTION_TYPE.ADD,\n              ids: [table.id],\n            })\n          }\n        }\n      }\n      break\n    case Editor.STATE.EDIT:\n      this.selectSingleShape(event, position)\n      break\n    case Editor.STATE.ADD_REGIONS:\n      if (this.draft == null) {\n        let newRegion = new Region(this.canvas)\n        this.draft = newRegion\n        newRegion.setState(Shape.STATE.FIRST_DRAW)\n        newRegion.initCoord = { x: position.x, y: position.y }\n      } else {\n        const coordList = getRectCoords(position, this.draft.initCoord)\n        coordList.map((c) => {\n          const newVertex = this.draft.getVertex(c.x, c.y)\n          this.draft.addPoint(newVertex, this.draft.vertices.length)\n        })\n        this.draft.setState(Shape.STATE.EDIT)\n        const index = this.expectedRegionIndex(this.draft)\n        const action = {\n          type: ACTION_TYPE.ADD_SHAPE,\n          shape: this.draft,\n          index: index,\n        }\n        this.actionHandler.doAction(action)\n        this.actionHandler.addAction(action)\n        this.draft.unSelect()\n        this.draft = null\n      }\n      break\n    case Editor.STATE.ADD_TABLES:\n      if (this.draft == null) {\n        let newTable = new Table(this.canvas)\n        this.draft = newTable\n        newTable.setState(Shape.STATE.FIRST_DRAW)\n        newTable.initCoord = { x: position.x, y: position.y }\n      } else {\n        let coordList = getRectCoords(position, this.draft.initCoord)\n        let [first, ...rest] = coordList.reverse()\n        coordList = [...rest, first]\n        this.draft.init(coordList)\n        this.draft.setState(Shape.STATE.EDIT)\n        const index = this.expectedRegionIndex(this.draft)\n        const action = {\n          type: ACTION_TYPE.ADD_SHAPE,\n          shape: this.draft,\n          index: index,\n        }\n        this.actionHandler.doAction(action)\n        this.actionHandler.addAction(action)\n        this.draft.unSelect()\n        this.draft = null\n      }\n      break\n    case Editor.STATE.ADD_BASELINES:\n      if (this.draft === null) {\n        let newLine = new Baseline(this.canvas)\n        this.draft = newLine\n        newLine.setState(Shape.STATE.FIRST_DRAW)\n      }\n      break\n    case Editor.STATE.VERTICAL_SPLIT:\n    case Editor.STATE.HORIZONTAL_SPLIT:\n    case Editor.STATE.CUSTOM_SPLIT:\n      let selectionIds = []\n\n      let splitLine = createSplitline(\n        [this.lastMousePosition.x, this.lastMousePosition.y],\n        this.prevLine.angle,\n        this.canvasDiagonal * 2\n      )\n      if (\n        this.activeShapes.areBaselines() ||\n        this.activeShapes.areTextRegions()\n      ) {\n        const action = {\n          type: ACTION_TYPE.MULTI_ACTION,\n          actions: [],\n        }\n        const resultShapes = this.activeShapes\n          .withoutCells()\n          .reduce((acc, shape) => {\n            let newShapes = this.splitShape(shape, splitLine)\n            if (newShapes) {\n              let newAction = this.getSplitAction(shape, newShapes)\n              action.actions.push(newAction)\n              return acc.concat(newShapes)\n            }\n            return acc.concat([shape])\n          }, [])\n        this.actionHandler.select({\n          type: SELECTION_TYPE.CLEAR,\n        })\n        this.actionHandler.doAction(action)\n        this.actionHandler.addAction(action)\n        resultShapes.map((s) => {\n          if (whatSideOfLine(s, splitLine) > 0) {\n            selectionIds.push(s.id)\n          }\n        })\n        this.actionHandler.select({\n          type: SELECTION_TYPE.ADD,\n          ids: selectionIds,\n        })\n        break\n      }\n      if (this.activeShapes.areTableAndCell()) {\n        if (this.state === Editor.STATE.VERTICAL_SPLIT) {\n          log('here')\n          this.activeShapes.getTable().addVerticalLine(position, splitLine)\n          break\n        }\n        if (this.state === Editor.STATE.HORIZONTAL_SPLIT) {\n          this.activeShapes.getTable().addHorizontalLine(position, splitLine)\n          break\n        }\n        if (this.state === Editor.STATE.CUSTOM_SPLIT) {\n          this.activeShapes.getTable().addVerticalLine(position, splitLine) ||\n            this.activeShapes.getTable().addHorizontalLine(position, splitLine)\n          break\n        }\n      }\n      break\n    case Editor.STATE.DUPLICATE:\n      const xShift =\n        this.lastMousePosition.x - this.prevDuplicate.initPosition.x\n      const yShift =\n        this.lastMousePosition.y - this.prevDuplicate.initPosition.y\n      const index = this.getIndex()\n      const blueprint = JSON.parse(\n        JSON.stringify(this.activeShapes[0].getBlueprint(index))\n      )\n\n      const line = new Baseline(this.canvas, blueprint)\n      log(xShift)\n      line.vertices.map((v) => {\n        v.left = v.left + xShift\n        v.top = v.top + yShift\n      })\n      const parent = this.getBaselineParent(this.activeShapes[0].id)\n      if (parent != null) {\n        log(parent)\n        const index = parent.expectedIndex(line)\n        const action = {\n          type: ACTION_TYPE.ADD_SHAPE,\n          index: index,\n          shape: line,\n          parent_id: parent.id,\n        }\n        this.actionHandler.doAction(action)\n        this.actionHandler.addAction(action)\n      }\n      break\n  }\n  this.canvas.remove(this.selectionRect)\n  this.selectionRect = null\n\n  this.draft?.handleMouseUpEvent(this.lastMousePosition, this.controlPressed)\n}\n\nfunction keyDown(e) {\n  protocolLog(`%cKey down: ${e.key}`, 'color: green')\n  switch (e.key) {\n    case 'Delete':\n    case 'Backspace':\n      {\n        const action = this.getRemoveAction(this.activeShapes)\n        this.actionHandler.select({\n          type: SELECTION_TYPE.CLEAR,\n        })\n        this.actionHandler.addAction(action)\n        this.actionHandler.doAction(action)\n      }\n      break\n    case 'Escape':\n      this.activeShapes.setState(Shape.STATE.EDIT)\n      this.setState(Editor.STATE.EDIT)\n      break\n    case 'Enter':\n      e.preventDefault()\n      if (this.state === Editor.STATE.ADD_RELATION) {\n        this.finishRelation()\n      }\n      if (this.draft == null) break\n      if (this.draft.vertices.length <= 1) {\n        this.draft.removeFromCanvas()\n      } else {\n        this.finishBaseline(this.draft)\n      }\n      this.draft = null\n      break\n    case 'z':\n      if (this.controlPressed) {\n        this.setState(Editor.STATE.EDIT)\n        this.actionHandler.undo()\n      }\n      break\n    case 'y':\n      if (this.controlPressed) {\n        this.setState(Editor.STATE.EDIT)\n        this.actionHandler.redo()\n      }\n      break\n    case 's':\n      if (this.controlPressed) {\n        e.preventDefault()\n        this.vueFunctions.save()\n      }\n      break\n    case 'v':\n      if (this.controlPressed) {\n        this.readFromClipboard()\n        break\n      }\n      if (this.state != Editor.STATE.VERTICAL_SPLIT) {\n        this.setState(Editor.STATE.VERTICAL_SPLIT)\n      }\n      break\n    case 'h':\n      if (this.state != Editor.STATE.HORIZONTAL_SPLIT) {\n        this.setState(Editor.STATE.HORIZONTAL_SPLIT)\n      }\n      break\n\n    case 'a':\n      if (this.activeShapes.haveState(Shape.STATE.EDIT)) {\n        this.activeShapes.map((s) => {\n          s.lastMousePosition = this.lastMousePosition\n        })\n        this.activeShapes.setState(Shape.STATE.ADD_VERTEX)\n      }\n      if (this.controlPressed) {\n        e.preventDefault()\n        if (this.regions.length > 0) {\n          this.actionHandler.select({\n            type: SELECTION_TYPE.CLEAR,\n          })\n          this.actionHandler.select({\n            type: SELECTION_TYPE.ADD,\n            ids: this.allShapesAndCells().map((r) => r.id),\n          })\n        }\n      }\n      break\n    case 'c':\n      if (this.controlPressed) {\n        this.writeToClipboard(this.activeShapes)\n        break\n      }\n      if (this.state != Editor.STATE.CUSTOM_SPLIT) {\n        this.setState(Editor.STATE.CUSTOM_SPLIT)\n      }\n      break\n    case 'x':\n      if (this.controlPressed) {\n        this.writeToClipboard(this.activeShapes).then(() => {\n          const action = this.getRemoveAction(this.activeShapes)\n          this.actionHandler.select({\n            type: SELECTION_TYPE.CLEAR,\n          })\n          this.actionHandler.addAction(action)\n          this.actionHandler.doAction(action)\n        })\n\n        break\n      }\n      break\n    case 'l':\n      if (this.controlPressed) {\n        e.preventDefault()\n        this.selectLinesOfRegion()\n      }\n\n      break\n    case 'Shift':\n      if (!this.shifted) {\n        this.shifted = true\n        this.setState(Editor.STATE.GROUP_SELECTION)\n      }\n      break\n    case 'Meta':\n    case 'Control':\n      if (!this.controlPressed) {\n        this.controlPressed = true\n        if (this.state === Editor.STATE.EDIT) {\n          this.setState(Editor.STATE.MULTI_SELECT)\n        }\n        //this.vueFunctions.setDrag(false)\n      }\n      break\n    // case 'd':\n    //   if (this.activeShape && this.activeShape.state === Shape.STATE.EDIT) {\n    //     this.activeShape.setState(Shape.STATE.REMOVE_VERTEX)\n    //   }\n    //   break\n    case 'l':\n      let actions = []\n      this.regions.map((region) => {\n        let action = this.mergeSmallLines(region)\n        if (action) actions.push(action)\n      })\n      if (actions.length > 0) {\n        this.actionHandler.addAction({\n          type: ACTION_TYPE.MULTI_ACTION,\n          actions: actions,\n        })\n      }\n      break\n    case 'm':\n      this.merge()\n      break\n    case 'Tab':\n      e.preventDefault()\n      if (this.activeShapes.isSingle() === false) return\n      let newId\n      if (this.activeShapes.isBaseline()) {\n        const line = this.activeShapes[0]\n        const parent = this.getBaselineParent(line.id)\n        const index = parent.baselines.indexOf(line)\n        const newIndex = (index + 1) % parent.baselines.length\n        newId = parent.baselines[newIndex].id\n      }\n      if (this.activeShapes.isRegion()) {\n        const region = this.activeShapes[0]\n        const index = this.regions.indexOf(region)\n        const newIndex = (index + 1) % this.regions.length\n        newId = this.regions[newIndex].id\n      }\n      this.actionHandler.select({\n        type: SELECTION_TYPE.CLEAR,\n      })\n      this.actionHandler.select({\n        type: SELECTION_TYPE.ADD,\n        ids: [newId],\n      })\n      break\n    case 'ArrowLeft':\n      if (this.state === Editor.STATE.CUSTOM_SPLIT) {\n        if (this.prevLine == null) return\n\n        let angle = this.prevLine.angle\n        // console.log('Before: ' + angle)\n\n        angle--\n        if (angle === -1) {\n          angle = 359\n        }\n        this.prevLine.set({ angle })\n        this.canvas.requestRenderAll()\n        // console.log('After: ' + angle)\n      }\n      break\n    case 'ArrowRight':\n      if (this.state === Editor.STATE.CUSTOM_SPLIT) {\n        if (this.prevLine == null) return\n\n        let angle = this.prevLine.angle\n\n        // console.log('Before: ' + angle)\n        this.settings.get('splitLineAngle')\n        angle = (angle + 1) % 360\n        this.prevLine.set({ angle })\n        this.canvas.requestRenderAll()\n        // console.log('After: ' + angle)\n      }\n      break\n  }\n}\n\nfunction keyUp(e) {\n  protocolLog(`%cKey up: ${e.key}`, 'color: green')\n  e.preventDefault()\n  switch (e.key) {\n    case 'ArrowLeft':\n    case 'ArrowRight':\n      if (this.state === Editor.STATE.CUSTOM_SPLIT) {\n        if (this.prevLine == null) break\n        this.settings.set({ splitLineAngle: this.prevLine.angle })\n      }\n      break\n\n    case 'Shift':\n      this.shifted = false\n      this.setState(Editor.STATE.EDIT)\n      break\n    case 'Meta':\n    case 'Control':\n      this.controlPressed = false\n      if (this.state === Editor.STATE.MULTI_SELECT) {\n        this.setState(Editor.STATE.EDIT)\n      }\n      //this.vueFunctions.setDrag(true)\n      break\n    case 'a':\n      this.activeShapes.setState(Shape.STATE.EDIT)\n      break\n    case 'v':\n      this.setState(Editor.STATE.EDIT)\n      break\n    case 'c':\n      this.setState(Editor.STATE.EDIT)\n      break\n    case 'h':\n      this.setState(Editor.STATE.EDIT)\n      break\n    // case 'd':\n    //   if (\n    //     this.activeShape &&\n    //     this.activeShape.state === Shape.STATE.REMOVE_VERTEX\n    //   ) {\n    //     this.activeShape.setState(Shape.STATE.EDIT)\n    //   }\n    //   break\n  }\n}\n\nfunction correctAttrVal(value, parent) {\n  if (value.imgUrl) {\n    value.imgUrl = value.imgUrl.replaceAll('&', '&amp;')\n  }\n  return value\n}\n\nexport default Editor\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.types)?_c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"auto\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_c('b-icon',{attrs:{\"icon\":\"label-multiple\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Structure Types'))+\" \")],1),_c('button',{staticClass:\"delete\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('close')}}})]),_c('section',{staticClass:\"modal-card-body\"},[_vm._l((_vm.types),function(type,index){return _c('b-collapse',{key:index,staticClass:\"card\",attrs:{\"animation\":\"slide\",\"open\":false},scopedSlots:_vm._u([{key:\"trigger\",fn:function(props){return [_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"button\"}},[(type.name)?_c('p',{staticClass:\"card-header-title\"},[_vm._v(\" \"+_vm._s(type.name)+\" \")]):_c('p',{staticClass:\"card-header-title\"},[_vm._v(\" \"+_vm._s(type.label)+\" \")]),_c('a',{staticClass:\"card-header-icon\"},[_c('span',{staticClass:\"dot\",style:(_vm.backgroundDot(type))}),_c('b-icon',{attrs:{\"icon\":props.open ? 'menu-down' : 'menu-up'}})],1)])]}}],null,true)},[_c('div',{staticClass:\"card-content\"},[_c('div',{staticClass:\"content\"},[_c('b-field',{attrs:{\"label\":\"Name\"}},[_c('b-input',{attrs:{\"disabled\":type.default === 'true'},on:{\"input\":function($event){return _vm.format(index)}},model:{value:(type.name),callback:function ($$v) {_vm.$set(type, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"type.name\"}})],1),_c('b-field',{attrs:{\"label\":_vm.$t('Choose color')}},[(_vm.swatchesExists())?_c('v-swatches',{attrs:{\"fallback-input-type\":\"color\",\"show-fallback\":\"\",\"disabled\":type.default === 'true'},model:{value:(type.color),callback:function ($$v) {_vm.$set(type, \"color\", $$v)},expression:\"type.color\"}}):_vm._e()],1),_c('b-button',{attrs:{\"icon-left\":\"minus\",\"type\":\"is-danger\",\"expanded\":\"\",\"disabled\":type.default === 'true'},on:{\"click\":function($event){return _vm.openConfirm(index)}}},[_vm._v(_vm._s(_vm.$t('Remove')))])],1)])])}),_c('b-field',[_c('b-button',{attrs:{\"icon-left\":\"plus\",\"type\":\"is-primary\",\"expanded\":\"\"},on:{\"click\":_vm.openAdd}},[_vm._v(_vm._s(_vm.$t('Add new structure type')))])],1),_c('b-field',[_c('b-button',{attrs:{\"icon-left\":\"content-save-all\",\"type\":\"is-success\",\"expanded\":\"\"},on:{\"click\":_vm.saveConfig}},[_vm._v(_vm._s(_vm.$t('Save')))])],1)],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\",staticStyle:{\"width\":\"auto\"}},[_c('header',{staticClass:\"card-header\"},[_c('div',{staticClass:\"card-header-title\"},[_vm._v(\" \"+_vm._s(_vm.$t('Create new structure type'))+\" \")]),_c('div',{staticClass:\"card-header-icon\"},[_c('button',{staticClass:\"delete is-large\",on:{\"click\":function($event){return _vm.$parent.close()}}})])]),_c('div',{staticClass:\"card-content\"},[_c('div',{staticClass:\"content\"},[_c('b-field',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"label\":\"Name\"}},[_c('b-input',{on:{\"input\":function($event){return _vm.format()}},model:{value:(_vm.type.name),callback:function ($$v) {_vm.$set(_vm.type, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"type.name\"}})],1),_c('b-field',{staticStyle:{\"margin-top\":\"40px\",\"margin-bottom\":\"30px\"},attrs:{\"label\":_vm.$t('Choose color')}},[(_vm.swatchesExists())?_c('v-swatches',{attrs:{\"fallback-input-type\":\"color\",\"swatches\":\"text-advanced\",\"show-fallback\":\"\",\"popover-y\":\"top\"},model:{value:(_vm.type.color),callback:function ($$v) {_vm.$set(_vm.type, \"color\", $$v)},expression:\"type.color\"}}):_vm._e()],1),_c('p',{staticClass:\"control\"},[_c('b-button',{staticClass:\"button is-primary\",attrs:{\"icon-left\":\"plus\"},on:{\"click\":_vm.create}},[_vm._v(_vm._s(_vm.$t('Create')))])],1)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"card\" style=\"width: auto\">\n    <header class=\"card-header\">\n      <div class=\"card-header-title\">\n        {{ $t('Create new structure type') }}\n      </div>\n      <div class=\"card-header-icon\">\n        <button @click=\"$parent.close()\" class=\"delete is-large\"></button>\n      </div>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <b-field label=\"Name\" style=\"margin-top: 20px\">\n          <b-input v-model.trim=\"type.name\" @input=\"format()\"></b-input>\n        </b-field>\n        <b-field\n          :label=\"$t('Choose color')\"\n          style=\"margin-top: 40px; margin-bottom: 30px\"\n        >\n          <v-swatches\n            v-if=\"swatchesExists()\"\n            v-model=\"type.color\"\n            fallback-input-type=\"color\"\n            swatches=\"text-advanced\"\n            show-fallback\n            popover-y=\"top\"\n          ></v-swatches>\n        </b-field>\n        <p class=\"control\">\n          <b-button\n            icon-left=\"plus\"\n            @click=\"create\"\n            class=\"button is-primary\"\n            >{{ $t('Create') }}</b-button\n          >\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'vue-swatches/dist/vue-swatches.css'\n\nexport default {\n  data() {\n    return {\n      type: {\n        name: 'newType',\n        color: '#00aaff',\n      },\n    }\n  },\n  props: {\n    currentTypes: {\n      type: Array,\n      required: true,\n      default: () => [],\n    },\n  },\n  methods: {\n    swatchesExists() {\n      return this.$router != null\n    },\n    create() {\n      if (this.currentTypes.some((type) => type.name === this.type.name)) {\n        this.openToast(this.$t('This type already exists'), 'is-danger')\n      } else {\n        this.$emit('closeModal', this.type)\n      }\n    },\n    format() {\n      this.type.name = this.type.name.replaceAll(' ', '-')\n    },\n    openToast(message, type) {\n      this.$buefy.toast.open({\n        duration: 4000,\n        message: message,\n        position: 'is-top',\n        type: type,\n      })\n    },\n  },\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddStructureType.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddStructureType.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddStructureType.vue?vue&type=template&id=328ccdf0&\"\nimport script from \"./AddStructureType.vue?vue&type=script&lang=js&\"\nexport * from \"./AddStructureType.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"modal-card\" style=\"width: auto\" v-if=\"types\">\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\">\n        <b-icon icon=\"label-multiple\"></b-icon> {{ $t('Structure Types') }}\n      </p>\n      <button type=\"button\" class=\"delete\" @click=\"$emit('close')\" />\n    </header>\n    <section class=\"modal-card-body\">\n      <b-collapse\n        class=\"card\"\n        animation=\"slide\"\n        v-for=\"(type, index) of types\"\n        :key=\"index\"\n        :open=\"false\"\n      >\n        <template #trigger=\"props\">\n          <div class=\"card-header\" role=\"button\">\n            <p v-if=\"type.name\" class=\"card-header-title\">\n              {{ type.name }}\n            </p>\n            <p v-else class=\"card-header-title\">\n              {{ type.label }}\n            </p>\n            <a class=\"card-header-icon\">\n              <span :style=\"backgroundDot(type)\" class=\"dot\"></span>\n              <b-icon :icon=\"props.open ? 'menu-down' : 'menu-up'\"> </b-icon>\n            </a>\n          </div>\n        </template>\n        <div class=\"card-content\">\n          <div class=\"content\">\n            <b-field label=\"Name\">\n              <b-input\n                v-model.trim=\"type.name\"\n                @input=\"format(index)\"\n                :disabled=\"type.default === 'true'\"\n              ></b-input>\n            </b-field>\n            <b-field :label=\"$t('Choose color')\">\n              <v-swatches\n                v-if=\"swatchesExists()\"\n                v-model=\"type.color\"\n                fallback-input-type=\"color\"\n                show-fallback\n                :disabled=\"type.default === 'true'\"\n              ></v-swatches>\n            </b-field>\n            <b-button\n              icon-left=\"minus\"\n              type=\"is-danger\"\n              @click=\"openConfirm(index)\"\n              expanded\n              :disabled=\"type.default === 'true'\"\n              >{{ $t('Remove') }}</b-button\n            >\n          </div>\n        </div>\n      </b-collapse>\n      <b-field>\n        <b-button\n          icon-left=\"plus\"\n          type=\"is-primary\"\n          @click=\"openAdd\"\n          expanded\n          >{{ $t('Add new structure type') }}</b-button\n        >\n      </b-field>\n      <b-field>\n        <b-button\n          icon-left=\"content-save-all\"\n          type=\"is-success\"\n          @click=\"saveConfig\"\n          expanded\n          >{{ $t('Save') }}</b-button\n        >\n      </b-field>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nimport AddStructureType from './AddStructureType.vue'\nimport 'vue-swatches/dist/vue-swatches.css'\n\nexport default {\n  props: {\n    initTypes: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      types: JSON.parse(JSON.stringify(this.initTypes)),\n    }\n  },\n  mounted() {\n    //console.log(this.$router)\n  },\n\n  methods: {\n    swatchesExists() {\n      return this.$router != null\n    },\n    // isDefault(type) {\n    //   return this.defaultConfig.definitions.structure.some(\n    //     (t) => t.name === type.name\n    //   )\n    // },\n\n    openConfirm(index) {\n      this.$buefy.dialog.confirm({\n        title: this.$t('Delete structure type'),\n        message: this.$t(\n          'Are you sure you want to delete this type definition?'\n        ),\n        confirmText: this.$t('Delete structure type'),\n        type: 'is-danger',\n        hasIcon: true,\n        onConfirm: () => this.removeTag(index),\n      })\n    },\n    openAdd() {\n      const modal = this.$buefy.modal.open({\n        parent: this,\n        component: AddStructureType,\n        props: {\n          currentTypes: this.types,\n        },\n        events: {\n          closeModal: (newType) => {\n            this.types.push(newType)\n            modal.close()\n          },\n        },\n      })\n    },\n    backgroundDot(tag) {\n      return 'background-color: ' + tag.color\n    },\n    removeTag(index) {\n      this.types.splice(index, 1)\n    },\n    async saveConfig() {\n      this.$emit('save', this.types)\n    },\n    format(index) {\n      this.types[index].name = this.types[index].name.replaceAll(' ', '-')\n    },\n    openToast(message, type) {\n      this.$buefy.toast.open({\n        duration: 4000,\n        message,\n        position: 'is-top',\n        type,\n      })\n    },\n  },\n}\n</script>\n\n<style scoped>\n.dot {\n  height: 25px;\n  width: 25px;\n  background-color: #bbb;\n  border-radius: 50%;\n  display: inline-block;\n}\n.tags:not(:last-child) {\n  margin-bottom: 0rem;\n}\n/* .tags .tag {\n\tmargin-bottom: 0rem;\n} */\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StructureTypeManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StructureTypeManager.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StructureTypeManager.vue?vue&type=template&id=7b3dceef&scoped=true&\"\nimport script from \"./StructureTypeManager.vue?vue&type=script&lang=js&\"\nexport * from \"./StructureTypeManager.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StructureTypeManager.vue?vue&type=style&index=0&id=7b3dceef&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b3dceef\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"auto\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_c('b-icon',{style:({ 'margin-right': '10px' }),attrs:{\"icon\":\"cogs\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Settings'))+\" \")],1),_c('button',{staticClass:\"delete\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('close')}}})]),_c('section',{staticClass:\"modal-card-body\"},[_c('b-tabs',{attrs:{\"type\":\"is-boxed\",\"position\":\"is-centered\",\"expanded\":\"\"}},[_c('b-tab-item',{attrs:{\"label\":_vm.$t('General'),\"icon\":\"tune\"}},[_c('div',{staticClass:\"tab-content\"},[_c('ul',[_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('showRegions')}},model:{value:(_vm.handles.showRegions),callback:function ($$v) {_vm.$set(_vm.handles, \"showRegions\", $$v)},expression:\"handles.showRegions\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Show Regions'))+\" \")],1),_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('showBaselines')}},model:{value:(_vm.handles.showBaselines),callback:function ($$v) {_vm.$set(_vm.handles, \"showBaselines\", $$v)},expression:\"handles.showBaselines\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Show Baselines'))+\" \")],1),_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('showWords')}},model:{value:(_vm.handles.showWords),callback:function ($$v) {_vm.$set(_vm.handles, \"showWords\", $$v)},expression:\"handles.showWords\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Show Words'))+\" \")],1),_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('showStructureTypes')}},model:{value:(_vm.handles.showStructureTypes),callback:function ($$v) {_vm.$set(_vm.handles, \"showStructureTypes\", $$v)},expression:\"handles.showStructureTypes\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Show structure types'))+\" \")],1),_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('showReadingOrder')}},model:{value:(_vm.handles.showReadingOrder),callback:function ($$v) {_vm.$set(_vm.handles, \"showReadingOrder\", $$v)},expression:\"handles.showReadingOrder\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Show readingorder'))+\" \")],1),_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('showRelations')}},model:{value:(_vm.handles.showRelations),callback:function ($$v) {_vm.$set(_vm.handles, \"showRelations\", $$v)},expression:\"handles.showRelations\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Show relations'))+\" \")],1),_c('li',[_c('div',{style:({\n                  display: 'flex',\n                  'flex-direction': 'horizontal',\n                  'align-items': 'center',\n                })},[_c('b-slider',{style:({ width: '100px' }),attrs:{\"rounded\":\"\",\"min\":5,\"max\":80},on:{\"input\":function($event){return _vm.changed('structureTypeSize')}},model:{value:(_vm.handles.structureTypeSize),callback:function ($$v) {_vm.$set(_vm.handles, \"structureTypeSize\", $$v)},expression:\"handles.structureTypeSize\"}}),_c('span',{style:({ 'margin-left': '20px' })},[_vm._v(_vm._s(_vm.$t('Change label size')))]),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Reset')}},[_c('b-button',{style:({\n                        'margin-left': '20px',\n                        width: '30px',\n                        height: '30px',\n                      }),attrs:{\"icon-left\":\"rotate-left\"},on:{\"click\":function($event){return _vm.reset('structureTypeSize')}}})],1)],1)],1)]),_c('li',[_c('div',{style:({\n                  display: 'flex',\n                  'flex-direction': 'horizontal',\n                  'align-items': 'center',\n                })},[_c('b-slider',{style:({ width: '100px' }),attrs:{\"rounded\":\"\",\"min\":2,\"max\":10},on:{\"input\":function($event){return _vm.changed('circleSize')}},model:{value:(_vm.handles.circleSize),callback:function ($$v) {_vm.$set(_vm.handles, \"circleSize\", $$v)},expression:\"handles.circleSize\"}}),_c('span',{style:({ 'margin-left': '20px' })},[_vm._v(_vm._s(_vm.$t('Change circle size')))]),_c('div',[_c('b-tooltip',{attrs:{\"position\":\"is-right\",\"label\":_vm.$t('Reset')}},[_c('b-button',{style:({\n                        'margin-left': '20px',\n                        width: '30px',\n                        height: '30px',\n                      }),attrs:{\"icon-left\":\"rotate-left\"},on:{\"click\":function($event){return _vm.reset('circleSize')}}})],1)],1)],1)]),_c('li',{staticStyle:{\"cursor\":\"pointer\"},on:{\"click\":_vm.openStructureManager}},[_c('b-icon',{staticClass:\"media-left\",attrs:{\"icon\":\"label-multiple\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Manage Structure Types'))+\" \")],1),_c('li',{staticStyle:{\"cursor\":\"pointer\"},on:{\"click\":_vm.openShortcutManager}},[_c('b-icon',{staticClass:\"media-left\",attrs:{\"icon\":\"keyboard\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Manage keyboard shortcuts'))+\" \")],1)])])]),_c('b-tab-item',{attrs:{\"label\":_vm.$t('Layouttree'),\"icon\":\"file-tree\"}},[_c('div',{staticClass:\"tab-content\"},[_c('ul',[_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('treeExpand')}},model:{value:(_vm.handles.treeExpand),callback:function ($$v) {_vm.$set(_vm.handles, \"treeExpand\", $$v)},expression:\"handles.treeExpand\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Always expand'))+\" \")],1),_c('li',[_c('b-switch',{attrs:{\"size\":\"is-small\"},on:{\"input\":function($event){return _vm.changed('treeShowTextOnly')}},model:{value:(_vm.handles.treeShowTextOnly),callback:function ($$v) {_vm.$set(_vm.handles, \"treeShowTextOnly\", $$v)},expression:\"handles.treeShowTextOnly\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Only display text'))+\" \")],1)])])])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"auto\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_c('b-icon',{style:({ 'margin-right': '10px' }),attrs:{\"icon\":\"keyboard\"}}),_vm._v(\" \"+_vm._s(_vm.$t('Shortcuts'))+\" \")],1),_c('button',{staticClass:\"delete\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('close')}}})]),_c('section',{staticClass:\"modal-card-body\"},[_c('div',{staticClass:\"description\"},[_c('ul',_vm._l((_vm.shortcuts),function(shortcut){return _c('li',{key:shortcut.string},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t(shortcut.string))}})])}),0)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"modal-card\" style=\"width: auto\">\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\">\n        <b-icon icon=\"keyboard\" :style=\"{ 'margin-right': '10px' }\"></b-icon>\n        {{ $t('Shortcuts') }}\n      </p>\n      <button type=\"button\" class=\"delete\" @click=\"$emit('close')\" />\n    </header>\n    <section class=\"modal-card-body\">\n      <div class=\"description\">\n        <ul>\n          <li v-for=\"shortcut in shortcuts\" :key=\"shortcut.string\">\n            <span v-html=\"$t(shortcut.string)\"></span>\n          </li>\n        </ul>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport 'vue-swatches/dist/vue-swatches.css'\n\nexport default {\n  props: {\n    initTypes: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      shortcuts: [\n        {\n          string: `Hold <div class='description-icon' id='a-icon' ></div> to add points to the beginning or end of a selected Line`,\n        },\n\n        {\n          string: `Hold V to <strong>split</strong> a shape vertically`,\n        },\n        {\n          string: `Hold H to <strong>split</strong> a shape horizontally`,\n        },\n        {\n          string: `Hold C to <strong>split</strong> a shape with a custom line (use arrow keys to change the angle)`,\n        },\n        // {\n        //   string: `Press L to <strong>merge small Lines</strong> in all Regions`,\n        // },\n        // {\n        //   string: `Press <div class='description-icon' id='delete-icon'></div> or <div class='description-icon' id='backspace-icon'></div> to delete selected points or selected shapes`,\n        // },\n        {\n          string: `Press <div class='description-icon' id='m-icon' ></div> to merge two selected Lines`,\n        },\n        {\n          string: `Press <div class='description-icon' id='esc-icon' > </div> to leave the current mode and enter selection mode`,\n        },\n      ],\n    }\n  },\n  mounted() {},\n\n  methods: {},\n}\n</script>\n\n<style scoped lang=\"scss\"></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShortcutManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShortcutManager.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ShortcutManager.vue?vue&type=template&id=05c4de49&scoped=true&\"\nimport script from \"./ShortcutManager.vue?vue&type=script&lang=js&\"\nexport * from \"./ShortcutManager.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"05c4de49\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"modal-card\" style=\"width: auto\">\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\">\n        <b-icon :style=\"{ 'margin-right': '10px' }\" icon=\"cogs\"></b-icon>\n        {{ $t('Settings') }}\n      </p>\n      <button type=\"button\" class=\"delete\" @click=\"$emit('close')\" />\n    </header>\n    <section class=\"modal-card-body\">\n      <b-tabs type=\"is-boxed\" position=\"is-centered\" expanded>\n        <b-tab-item :label=\"$t('General')\" icon=\"tune\">\n          <div class=\"tab-content\">\n            <ul>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.showRegions\"\n                  @input=\"changed('showRegions')\"\n                >\n                </b-switch>\n                {{ $t('Show Regions') }}\n              </li>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.showBaselines\"\n                  @input=\"changed('showBaselines')\"\n                >\n                </b-switch>\n                {{ $t('Show Baselines') }}\n              </li>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.showWords\"\n                  @input=\"changed('showWords')\"\n                >\n                </b-switch>\n                {{ $t('Show Words') }}\n              </li>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.showStructureTypes\"\n                  @input=\"changed('showStructureTypes')\"\n                >\n                </b-switch>\n                {{ $t('Show structure types') }}\n              </li>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.showReadingOrder\"\n                  @input=\"changed('showReadingOrder')\"\n                >\n                </b-switch>\n                {{ $t('Show readingorder') }}\n              </li>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.showRelations\"\n                  @input=\"changed('showRelations')\"\n                >\n                </b-switch>\n                {{ $t('Show relations') }}\n              </li>\n              <li>\n                <div\n                  :style=\"{\n                    display: 'flex',\n                    'flex-direction': 'horizontal',\n                    'align-items': 'center',\n                  }\"\n                >\n                  <b-slider\n                    :style=\"{ width: '100px' }\"\n                    v-model=\"handles.structureTypeSize\"\n                    rounded\n                    :min=\"5\"\n                    :max=\"80\"\n                    @input=\"changed('structureTypeSize')\"\n                  ></b-slider>\n                  <span :style=\"{ 'margin-left': '20px' }\">{{\n                    $t('Change label size')\n                  }}</span>\n                  <div>\n                    <b-tooltip position=\"is-right\" :label=\"$t('Reset')\">\n                      <b-button\n                        icon-left=\"rotate-left\"\n                        @click=\"reset('structureTypeSize')\"\n                        :style=\"{\n                          'margin-left': '20px',\n                          width: '30px',\n                          height: '30px',\n                        }\"\n                      >\n                      </b-button>\n                    </b-tooltip>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div\n                  :style=\"{\n                    display: 'flex',\n                    'flex-direction': 'horizontal',\n                    'align-items': 'center',\n                  }\"\n                >\n                  <b-slider\n                    :style=\"{ width: '100px' }\"\n                    v-model=\"handles.circleSize\"\n                    rounded\n                    :min=\"2\"\n                    :max=\"10\"\n                    @input=\"changed('circleSize')\"\n                  ></b-slider>\n                  <span :style=\"{ 'margin-left': '20px' }\">{{\n                    $t('Change circle size')\n                  }}</span>\n                  <div>\n                    <b-tooltip position=\"is-right\" :label=\"$t('Reset')\">\n                      <b-button\n                        icon-left=\"rotate-left\"\n                        @click=\"reset('circleSize')\"\n                        :style=\"{\n                          'margin-left': '20px',\n                          width: '30px',\n                          height: '30px',\n                        }\"\n                      >\n                      </b-button>\n                    </b-tooltip>\n                  </div>\n                </div>\n              </li>\n              <li @click=\"openStructureManager\" style=\"cursor: pointer\">\n                <b-icon icon=\"label-multiple\" class=\"media-left\" />\n                {{ $t('Manage Structure Types') }}\n              </li>\n\n              <li @click=\"openShortcutManager\" style=\"cursor: pointer\">\n                <b-icon icon=\"keyboard\" class=\"media-left\" />\n                {{ $t('Manage keyboard shortcuts') }}\n              </li>\n            </ul>\n          </div>\n        </b-tab-item>\n        <b-tab-item :label=\"$t('Layouttree')\" icon=\"file-tree\">\n          <div class=\"tab-content\">\n            <ul>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.treeExpand\"\n                  @input=\"changed('treeExpand')\"\n                >\n                </b-switch>\n                {{ $t('Always expand') }}\n              </li>\n              <li>\n                <b-switch\n                  size=\"is-small\"\n                  v-model=\"handles.treeShowTextOnly\"\n                  @input=\"changed('treeShowTextOnly')\"\n                >\n                </b-switch>\n                {{ $t('Only display text') }}\n              </li>\n            </ul>\n          </div>\n        </b-tab-item>\n      </b-tabs>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport StructureTypeManager from './StructureTypeManager.vue'\nimport ShortcutManager from './ShortcutManager.vue'\nimport { Singleton as Settings } from '../singletons/settings.js'\n\nimport AddStructureType from './AddStructureType.vue'\nimport 'vue-swatches/dist/vue-swatches.css'\n\nexport default {\n  props: {\n    structureTypes: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      handles: {},\n    }\n  },\n  mounted() {\n    this.fetchSettings()\n  },\n\n  methods: {\n    fetchSettings() {\n      const settings = Settings.instance()\n      this.handles = {\n        ...settings.getAll(),\n      }\n    },\n    changed(key) {\n      Settings.instance().set({ [key]: this.handles[key] })\n    },\n    reset(key) {\n      Settings.instance().reset(key)\n      this.fetchSettings()\n    },\n    openStructureManager() {\n      this.$buefy.modal.open({\n        parent: this,\n        component: StructureTypeManager,\n        props: {\n          initTypes: this.structureTypes,\n        },\n        events: {\n          save: (structureTypes) => {\n            this.$emit('save', structureTypes)\n          },\n        },\n      })\n    },\n    openShortcutManager() {\n      this.$buefy.modal.open({\n        parent: this,\n        component: ShortcutManager,\n      })\n    },\n  },\n}\n</script>\n\n<style scoped lang=\"scss\">\n.tab-content {\n  height: 400px;\n  padding-left: 5px;\n  line-height: 1.2;\n\n  ul {\n    list-style: none;\n    font-size: 15px;\n    margin-left: 10px;\n    li {\n      margin-top: 10px;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingsModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingsModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SettingsModal.vue?vue&type=template&id=549c31c2&scoped=true&\"\nimport script from \"./SettingsModal.vue?vue&type=script&lang=js&\"\nexport * from \"./SettingsModal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SettingsModal.vue?vue&type=style&index=0&id=549c31c2&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"549c31c2\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\",staticStyle:{\"width\":\"auto\"}},[_c('header',{staticClass:\"card-header\"},[_c('div',{staticClass:\"card-header-title is-centered\"},[_vm._v(\" \"+_vm._s(_vm.$t(_vm.heading))+\" \")])]),_c('div',{staticClass:\"card-content\"},[_c('div',{staticClass:\"content\"},[_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(_vm._s(_vm.$t(_vm.text)))])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"card\" style=\"width: auto\">\n    <header class=\"card-header\">\n      <div class=\"card-header-title is-centered\">\n        {{ $t(heading) }}\n      </div>\n    </header>\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <p style=\"text-align: center\">{{ $t(text) }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    heading: {\n      type: String,\n    },\n    text: {\n      type: String,\n    },\n  },\n  data() {\n    return {}\n  },\n  methods: {},\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Modal.vue?vue&type=template&id=2d9b6d99&\"\nimport script from \"./Modal.vue?vue&type=script&lang=js&\"\nexport * from \"./Modal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"layout-panel\"}},[_c('div',{staticStyle:{\"height\":\"30px\",\"overflow-x\":\"hidden\",\"white-space\":\"nowrap\"}},[(!_vm.showTextOnly)?_c('span',{staticClass:\"inline-span\",style:((\"position:absolute; left: \" + (this.margins.id + this.defaultTreeIndent / 4) + \"px\"))},[_c('strong',[_vm._v(_vm._s(_vm.$t('Id')))])]):_vm._e(),(!_vm.showTextOnly)?_c('span',{staticClass:\"inline-span\",style:((\"position:absolute; left: \" + (this.margins.readingOrder + this.defaultTreeIndent / 4) + \"px\"))},[_c('strong',[_vm._v(_vm._s(_vm.$t('Order')))])]):_vm._e(),(!_vm.showTextOnly)?_c('span',{staticClass:\"inline-span\",style:((\"position:absolute; left: \" + (this.margins.structureType + this.defaultTreeIndent / 4) + \"px\"))},[_c('strong',[_vm._v(_vm._s(_vm.$t('Structure Type')))])]):_vm._e(),_c('span',{staticClass:\"inline-span\",style:((\"position:absolute; left: \" + ((this.showTextOnly ? this.margins.id : this.margins.text) +\n        this.defaultTreeIndent / 4) + \"px\"))},[_c('strong',[_vm._v(_vm._s(_vm.$t('Text')))])])]),_c('div',{attrs:{\"id\":\"scroll-box\"},on:{\"click\":_vm.panelClick}},[_c('Tree',{ref:\"tree\",attrs:{\"edgeScroll\":\"\",\"value\":_vm.treeData,\"ondragstart\":_vm.layoutDragStart,\"ondragend\":_vm.layoutDragEnd},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n      var node = ref.node;\n      var path = ref.path;\n      var tree = ref.tree;\nreturn _c('div',{staticClass:\"node-container\",attrs:{\"id\":(\"node_\" + (node.id))},on:{\"click\":function($event){return _vm.layoutClick(node, path)}}},[_c('span',[(node.children && node.children.length > 0)?_c('b',{on:{\"click\":function($event){return tree.toggleFold(node, path)}}},[_vm._v(\" \"+_vm._s(node.$folded ? '+' : '-')+\" \")]):_vm._e(),_c('span',[_c('strong',[_vm._v(_vm._s(((node.type === 'Baseline' ? _vm.$t('Line') : _vm.$t(node.type)) + \" \" + (node.selected ? '' : ''))))])])]),(!_vm.showTextOnly)?_c('span',{staticClass:\"column-element\",style:(_vm.getIdStyle(path))},[_c('p',[_vm._v(_vm._s((\"#\" + (node.id))))])]):_vm._e(),(!_vm.showTextOnly)?_c('span',{staticClass:\"column-element\",style:(_vm.getReadingOrderStyle(path))},[_c('p',[_vm._v(_vm._s(path[path.length - 1] + 1))])]):_vm._e(),(!_vm.showTextOnly)?_c('span',{staticClass:\"column-element\",style:(_vm.getStructureStyle(node.structureType, path))},[_c('p',[_vm._v(_vm._s(node.structureType))])]):_vm._e(),_c('span',{staticClass:\"column-element\",style:(_vm.getTextStyle(path))},[_c('p',[_vm._v(_vm._s(node.text))])])])}}])})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"layout-panel\">\n    <div style=\"height: 30px; overflow-x: hidden; white-space: nowrap\">\n      <span\n        v-if=\"!showTextOnly\"\n        class=\"inline-span\"\n        :style=\"`position:absolute; left: ${\n          this.margins.id + this.defaultTreeIndent / 4\n        }px`\"\n        ><strong>{{ $t('Id') }}</strong></span\n      >\n      <span\n        v-if=\"!showTextOnly\"\n        class=\"inline-span\"\n        :style=\"`position:absolute; left: ${\n          this.margins.readingOrder + this.defaultTreeIndent / 4\n        }px`\"\n        ><strong>{{ $t('Order') }}</strong></span\n      >\n      <span\n        v-if=\"!showTextOnly\"\n        class=\"inline-span\"\n        :style=\"`position:absolute; left: ${\n          this.margins.structureType + this.defaultTreeIndent / 4\n        }px`\"\n        ><strong>{{ $t('Structure Type') }}</strong></span\n      >\n      <span\n        class=\"inline-span\"\n        :style=\"`position:absolute; left: ${\n          (this.showTextOnly ? this.margins.id : this.margins.text) +\n          this.defaultTreeIndent / 4\n        }px`\"\n        ><strong>{{ $t('Text') }}</strong></span\n      >\n    </div>\n    <div id=\"scroll-box\" @click=\"panelClick\">\n      <Tree\n        ref=\"tree\"\n        edgeScroll\n        :value=\"treeData\"\n        :ondragstart=\"layoutDragStart\"\n        :ondragend=\"layoutDragEnd\"\n      >\n        <div\n          slot-scope=\"{ node, path, tree }\"\n          class=\"node-container\"\n          :id=\"`node_${node.id}`\"\n          @click=\"layoutClick(node, path)\"\n        >\n          <span>\n            <b\n              v-if=\"node.children && node.children.length > 0\"\n              @click=\"tree.toggleFold(node, path)\"\n            >\n              {{ node.$folded ? '+' : '-' }}\n            </b>\n            <span\n              ><strong>{{\n                `${node.type === 'Baseline' ? $t('Line') : $t(node.type)} ${\n                  node.selected ? '' : ''\n                }`\n              }}</strong></span\n            >\n          </span>\n\n          <span\n            v-if=\"!showTextOnly\"\n            class=\"column-element\"\n            :style=\"getIdStyle(path)\"\n            ><p>{{ `#${node.id}` }}</p></span\n          >\n          <span\n            v-if=\"!showTextOnly\"\n            class=\"column-element\"\n            :style=\"getReadingOrderStyle(path)\"\n            ><p>{{ path[path.length - 1] + 1 }}</p></span\n          >\n          <span\n            v-if=\"!showTextOnly\"\n            class=\"column-element\"\n            :style=\"getStructureStyle(node.structureType, path)\"\n            ><p>{{ node.structureType }}</p></span\n          >\n\n          <span class=\"column-element\" :style=\"getTextStyle(path)\"\n            ><p>{{ node.text }}</p></span\n          >\n        </div>\n      </Tree>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { array_move } from '../geometryFunctions.js'\nimport { Singleton as Settings } from '../singletons/settings.js'\nimport 'he-tree-vue/dist/he-tree-vue.css'\nimport {\n  Tree, // Base tree\n  Fold,\n  Check,\n  Draggable, // plugins\n  foldAll,\n  unfoldAll,\n  cloneTreeData,\n  walkTreeData,\n  getPureTreeData, // utils\n} from 'he-tree-vue'\nimport {\n  Singleton as ActionHandler,\n  ACTION_TYPE,\n  SELECTION_TYPE,\n} from '../singletons/actionHandler.js'\nimport Editor from '../editor.js'\nimport Baseline from '../shapes/Baseline.js'\nimport Region from '../shapes/Region.js'\nimport Table from '../shapes/Table.js'\nimport { includes } from 'lodash'\n\nexport default {\n  components: { Tree: Tree.mixPlugins([Fold, Draggable]) },\n  props: {\n    initData: {\n      type: Array,\n      default: () => [],\n    },\n    settings: {\n      type: Object,\n      default: () => ({}),\n    },\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      showTextOnly: false,\n      treeData: [],\n      activeShapeIds: [],\n      controlPressed: false,\n      margins: {\n        readingOrder: 140,\n        structureType: 240,\n        text: 340,\n        id: 90,\n      },\n      //https://he-tree-vue.phphe.com/guide.html#ui-structure-and-csss\n      defaultTreeIndent: 20,\n    }\n  },\n  watch: {\n    settings(newSettings, oldSettings) {\n      const hasChanged = (key) => oldSettings?.[key] !== newSettings?.[key]\n      const tree = this.$refs.tree\n      if (tree == null) return\n\n      if (hasChanged('treeExpand')) {\n        if (newSettings.treeExpand) {\n          tree.unfoldAll()\n        } else {\n          tree.foldAll()\n        }\n      }\n      if (hasChanged('treeShowTextOnly')) {\n        this.showTextOnly = newSettings.treeShowTextOnly\n        // console.log(this.showTextOnly)\n      }\n    },\n    initData(newData) {\n      const treeData = JSON.parse(JSON.stringify(newData))\n      const tree = this.$refs.tree\n      this.extendTree(treeData)\n      if (tree) {\n        tree.rootNode.$droppable = () => {\n          if (this.dragType === 'Baseline') {\n            return false\n          }\n          return true\n        }\n      }\n      if (this.settings.treeExpand) {\n        unfoldAll(treeData)\n      }\n      setTimeout(() => this.scrollContainerByNodeId(this.activeShapeIds[0]), 0)\n      this.treeData = treeData\n    },\n    activeShapeIds(newId, oldId) {\n      // if (oldId != null) {\n      //   const info = this.getTreeNodeInfo(oldId)\n      //   if (info?.node) {\n      //     info.node.$nodeStyle = ''\n      //     info.node.$nodeBackClass = 'node-hover'\n      //     info.node.selected = false\n      //   }\n      // }\n      // if (newId != null) {\n      //   const info = this.getTreeNodeInfo(newId)\n      //   if (info?.node) {\n      //     info.node.$nodeStyle = info.node.styleSelected\n      //     info.node.$nodeBackClass = ''\n      //     info.node.selected = true\n      //     this.unFoldNodePath(newId)\n      //     this.$nextTick(() => {\n      //       this.scrollContainerByNodeId(newId)\n      //     })\n      //   }\n      // }\n    },\n  },\n  mounted() {\n    // console.log('tree mounted')\n    document.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Control': {\n          this.controlPressed = true\n        }\n      }\n    })\n    document.addEventListener('keyup', (event) => {\n      switch (event.key) {\n        case 'Control': {\n          this.controlPressed = false\n        }\n      }\n    })\n  },\n  methods: {\n    settingsUpdate(type) {},\n    extendTree(tree) {\n      walkTreeData(tree, (node) => {\n        const { id, children } = node\n        const isSelected = (id) => this.activeShapeIds.includes(id)\n        const expand = children?.some(\n          (c) => isSelected(c.id) || c.children?.some((c2) => isSelected(c2.id))\n        )\n        //console.log(expand)\n        this.addProperties(node, expand, isSelected(id))\n        // console.log(node)\n      })\n    },\n    unFoldNodePath(id) {\n      // console.log(id)\n      const tree = this.$refs.tree\n      const info = this.getTreeNodeInfo(id)\n      if (info?.parent) {\n        //  console.log('unfold')\n        tree.unfold(info.parent)\n        this.unFoldNodePath(info.parent.id)\n      }\n    },\n    getTreeNodeInfo(id) {\n      let found\n      this.$refs.tree.walkTreeData((node, index, parent, path) => {\n        if (node.id === id) {\n          found = { node, index, parent, path }\n          return false\n        }\n      })\n      return found\n    },\n    getStructureStyle(type, path) {\n      const color = Settings.instance().structureTypes.find(\n        (t) => t.name === type\n      )?.color\n      //console.log(path.length)\n      const shift = (path.length - 1) * this.defaultTreeIndent\n      return `color: ${color}; left: ${this.margins.structureType - shift}px`\n    },\n    getIdStyle(path) {\n      const shift = (path.length - 1) * this.defaultTreeIndent\n      return `left: ${this.margins.id - shift}px`\n    },\n    getReadingOrderStyle(path) {\n      const shift = (path.length - 1) * this.defaultTreeIndent\n      return `left: ${this.margins.readingOrder - shift}px`\n    },\n    getTextStyle(path) {\n      const shift = (path.length - 1) * this.defaultTreeIndent\n      return `left: ${\n        (this.showTextOnly ? this.margins.id : this.margins.text) - shift\n      }px`\n    },\n    scrollContainerByNodeId(id) {\n      const node = document.querySelector(`#node_${id}`)\n      if (node == null) return\n      const offset = node.offsetTop\n      const container = document.querySelector(`#scroll-box`)\n      if (container == null) return\n      let halfContainerHeight = container.clientHeight / 2\n      // halfContainerHeight = 180\n      const newScrollTop = offset - halfContainerHeight\n      //checks if node is already visible\n      if (Math.abs(container.scrollTop - newScrollTop) < halfContainerHeight) {\n        return\n      }\n      container.scrollTop = newScrollTop\n    },\n    performSelection(selection) {\n      const removeNode = (id) => {\n        if (this.activeShapeIds.includes(id) === false) return\n        const info = this.getTreeNodeInfo(id)\n        if (info?.node) {\n          info.node.$nodeStyle = ''\n          info.node.$nodeBackClass = 'node-hover'\n          info.node.selected = false\n          this.activeShapeIds.splice(this.activeShapeIds.indexOf(id), 1)\n        }\n      }\n      const addNode = (id) => {\n        if (this.activeShapeIds.includes(id)) return\n        const info = this.getTreeNodeInfo(id)\n        if (info?.node) {\n          info.node.$nodeStyle = info.node.styleSelected\n          info.node.$nodeBackClass = ''\n          info.node.selected = true\n          this.activeShapeIds.push(id)\n        }\n      }\n\n      switch (selection.type) {\n        case SELECTION_TYPE.REMOVE: {\n          const newIds = selection.ids\n          newIds.map((id) => {\n            removeNode(id)\n          })\n          break\n        }\n        case SELECTION_TYPE.ADD: {\n          const newIds = selection.ids\n          newIds.map((id) => {\n            addNode(id)\n            this.unFoldNodePath(id)\n          })\n          this.$nextTick(() => {\n            this.scrollContainerByNodeId(newIds[0])\n          })\n          break\n        }\n        case SELECTION_TYPE.CLEAR: {\n          const ids = [...this.activeShapeIds]\n          ids.map((id) => removeNode(id))\n          break\n        }\n      }\n    },\n    performAction(action) {\n      if (action == null) return\n      const tree = this.$refs.tree\n      switch (action.type) {\n        case ACTION_TYPE.MULTI_ACTION:\n          action.actions.map((action) => {\n            this.performAction(action)\n          })\n          break\n        case ACTION_TYPE.ADD_SHAPE: {\n          const info = this.getTreeNodeInfo(action.parent_id)\n          if (action.shape instanceof Baseline) {\n            const parent = info?.node\n            if (parent == null) break\n            const subTree = action.shape.getLayout()\n            this.extendTree(subTree)\n            parent.children.splice(action.index, 0, subTree)\n            this.unFoldNodePath(action.shape.id)\n            break\n          }\n          if (action.shape instanceof Region) {\n            const subTree = action.shape.getLayout()\n            this.extendTree(subTree)\n            tree.rootNode.children.splice(action.index, 0, subTree)\n            break\n          }\n          if (action.shape instanceof Table) {\n            const subTree = action.shape.getLayout()\n            this.extendTree(subTree)\n            tree.rootNode.children.splice(action.index, 0, subTree)\n            break\n          }\n          break\n        }\n        case ACTION_TYPE.REMOVE_SHAPE: {\n          const info = this.getTreeNodeInfo(action.shape.id)\n          if (info == null) break\n          const parent = info.parent\n          if (action.shape instanceof Baseline) {\n            parent.children.splice(action.index, 1)\n          }\n          if (action.shape instanceof Region || action.shape instanceof Table) {\n            tree.rootNode.children.splice(action.index, 1)\n          }\n          break\n        }\n        case ACTION_TYPE.CHANGE_READING_ORDER: {\n          const info = this.getTreeNodeInfo(action.shape_id)\n          if (info == null) break\n          const { node, parent } = info\n          if (node.type === 'Region' || node.type === 'Table') {\n            array_move(\n              tree.rootNode.children,\n              action.old_index,\n              action.new_index\n            )\n          }\n          if (node.type === 'Baseline') {\n            array_move(parent.children, action.old_index, action.new_index)\n          }\n          break\n        }\n        case ACTION_TYPE.CHANGE_PARENT: {\n          const oldInfo = this.getTreeNodeInfo(action.old_parent_id)\n          const newInfo = this.getTreeNodeInfo(action.new_parent_id)\n          if (oldInfo == null || newInfo == null) break\n          const oldParent = oldInfo.node\n          const newParent = newInfo.node\n          const movedNodes = oldParent.children.splice(\n            action.old_index,\n            action.shape_count\n          )\n          newParent.children.splice(action.new_index, 0, ...movedNodes)\n          break\n        }\n        case ACTION_TYPE.REMOVE_CELL:\n        case ACTION_TYPE.ADD_CELL: {\n          //the entire table gets redrawn. Not perfect, but a work around\n          //Other possible solution: trigger this using the multiAction Object\n          //Achtung: this depends on the fact that the editor recieves the action earlier\n          const info = this.getTreeNodeInfo(action.shape_id)\n          if (info == null) break\n          const tableIndex = info?.index\n          const subTree = action.table.getLayout()\n          this.extendTree(subTree)\n          tree.rootNode.children.splice(tableIndex, 1, subTree)\n          this.unFoldNodePath(action.cell.id)\n          break\n        }\n        case ACTION_TYPE.SET_STRUCTUR_TYPE: {\n          const info = this.getTreeNodeInfo(action.shape_id)\n          if (info == null) break\n          const { node } = info\n          node.structureType = action.new_type\n          if (action.new_type === 'none') {\n            node.structureType = null\n          }\n          break\n        }\n        case ACTION_TYPE.POSITION_MOVE: {\n          const info = this.getTreeNodeInfo(action.shape_id)\n          if (info == null) break\n          const { index } = info\n          const parent = info.parent || tree.rootNode\n          array_move(parent.children, index, index + action.distance)\n          break\n        }\n      }\n    },\n    addProperties(node, expand, selected) {\n      const type = node.type\n      const styleSelected = `background-color: ${\n        type === 'Baseline'\n          ? 'rgba(0, 0, 255, 0.3)'\n          : type === 'Region'\n          ? 'rgba(0, 128, 0, 0.3)'\n          : type === 'Table'\n          ? 'rgba(249, 180, 45, 0.3)'\n          : 'rgba(255,255, 0, 0.3)'\n      };`\n      node.selected = selected\n      node.styleSelected = styleSelected\n      node.$nodeStyle = selected ? styleSelected : ''\n      node.$nodeBackClass = !selected ? 'node-hover' : ''\n      node.$folded = !expand\n      node.$droppable = () => {\n        if (this.dragType === 'Baseline') {\n          if (type === 'Region' || type === 'Cell') {\n            return true\n          }\n          return false\n        }\n        if (this.dragType === 'Region' || this.dragType === 'Table') {\n          return false\n        }\n      }\n    },\n    selectionAddShape(id) {\n      const tree = this.$refs.tree\n      ActionHandler.instance().select({\n        type: SELECTION_TYPE.ADD,\n        ids: [id],\n      })\n      const { node, path } = this.getTreeNodeInfo(id)\n      if (node.type === 'Cell') {\n        const parent = tree.getNodeByPath(path.slice(0, -1))\n        if (this.activeShapeIds.includes(parent.id) === false) {\n          ActionHandler.instance().select({\n            type: SELECTION_TYPE.ADD,\n            ids: [parent.id],\n          })\n        }\n      }\n    },\n    selectionRemoveShape(id) {\n      const tree = this.$refs.tree\n      ActionHandler.instance().select({\n        type: SELECTION_TYPE.REMOVE,\n        ids: [id],\n      })\n      const { node, path } = this.getTreeNodeInfo(id)\n      if (node.type === 'Table') {\n        node.children.map((c) => {\n          if (this.activeShapeIds.includes(c.id)) {\n            ActionHandler.instance().select({\n              type: SELECTION_TYPE.REMOVE,\n              ids: [c.id],\n            })\n          }\n        })\n      }\n    },\n    layoutDragStart(tree, { dragNode }) {\n      this.dragType = dragNode.type\n      if (!this.activeShapeIds.includes(dragNode.id)) {\n        ActionHandler.instance().select({\n          type: SELECTION_TYPE.CLEAR,\n        })\n        this.selectionAddShape(dragNode.id)\n      }\n      if (dragNode.type === 'Cell') {\n        return false\n      }\n      return true\n    },\n    layoutDragEnd(tree, { startPath, targetPath, dragNode: { id } }) {\n      //https://www.tutorialspoint.com/javascript-to-check-consecutive-numbers-in-array#:~:text=To%20check%20for%20consecutive%20numbers,false%20is%20the%20return%20value.\n      const sequceIsConsecutive = (array) =>\n        array.length <= 1 ||\n        Boolean(\n          array.reduce((output, lastest) =>\n            !isNaN(output) ? (output + 1 === lastest ? lastest : false) : false\n          )\n        )\n\n      const differentParents = (ids) => {\n        let areDifferent = false\n        ids.reduce((first, second) => {\n          log(first)\n          const pPathFirst = this.getTreeNodeInfo(first).path.slice(0, -1)\n          const pPathSecond = this.getTreeNodeInfo(second).path.slice(0, -1)\n          if (JSON.stringify(pPathFirst) !== JSON.stringify(pPathSecond)) {\n            areDifferent = true\n          }\n          return second\n        })\n        return areDifferent\n      }\n\n      const activeIndices = this.activeShapeIds.map(\n        (id) => this.getTreeNodeInfo(id).index\n      )\n      activeIndices.sort((a, b) => a - b)\n\n      const shapeId = id\n      const oldIndex = startPath[startPath.length - 1]\n      const parent = tree.getNodeByPath(startPath.slice(0, -1)) || tree.rootNode\n      const oldParentId = parent?.id\n      let newIndex = targetPath[targetPath.length - 1]\n      const newParentId = tree.getNodeByPath(targetPath.slice(0, -1))?.id\n      //this is a correction\n      if (oldParentId === newParentId && newIndex > oldIndex) {\n        newIndex--\n      }\n\n      let action = this.getDragAction(\n        oldParentId,\n        newParentId,\n        oldIndex,\n        newIndex,\n        shapeId\n      )\n\n      if (\n        this.activeShapeIds.length > 1 &&\n        !differentParents(this.activeShapeIds) &&\n        sequceIsConsecutive(activeIndices)\n      ) {\n        let distance = newIndex - oldIndex\n        const ids = [...this.activeShapeIds]\n\n        const isTooBig = (ids, distance, parent) =>\n          ids\n            .map((id) => this.getTreeNodeInfo(id).index)\n            .some((index) => index + distance > parent.children.length - 1)\n\n        const isTooSmall = (ids, distance) =>\n          ids\n            .map((id) => this.getTreeNodeInfo(id).index)\n            .some((index) => index + distance < 0)\n\n        const correctDistance = (ids, distance, parent) => {\n          if (isTooBig(ids, distance, parent)) {\n            return correctDistance(ids, distance - 1, parent)\n          }\n          if (isTooSmall(ids, distance)) {\n            return correctDistance(ids, distance + 1, parent)\n          }\n          return distance\n        }\n        if (oldParentId === newParentId) {\n          if (distance > 0) {\n            ids.sort(\n              (a, b) =>\n                this.getTreeNodeInfo(b).index - this.getTreeNodeInfo(a).index\n            )\n          } else {\n            ids.sort(\n              (a, b) =>\n                this.getTreeNodeInfo(a).index - this.getTreeNodeInfo(b).index\n            )\n          }\n          distance = correctDistance(ids, distance, parent)\n          action = {\n            type: ACTION_TYPE.MULTI_ACTION,\n            actions: ids.map((id) => this.getMoveAction(id, distance)),\n          }\n        } else {\n          ids.sort(\n            (a, b) =>\n              this.getTreeNodeInfo(a).index - this.getTreeNodeInfo(b).index\n          )\n          action = {\n            type: ACTION_TYPE.CHANGE_PARENT,\n            shape_count: ids.length,\n            old_parent_id: oldParentId,\n            new_parent_id: newParentId,\n            old_index: this.getTreeNodeInfo(ids[0]).index,\n            new_index: newIndex,\n          }\n        }\n      }\n      ActionHandler.instance().doAction(action)\n      ActionHandler.instance().addAction(action)\n      return false\n    },\n    layoutClick(node) {\n      if (!this.controlPressed) {\n        ActionHandler.instance().select({\n          type: SELECTION_TYPE.CLEAR,\n        })\n        this.selectionAddShape(node.id)\n        return\n      }\n      if (this.activeShapeIds.includes(node.id)) {\n        this.selectionRemoveShape(node.id)\n        return\n      }\n      this.selectionAddShape(node.id)\n    },\n    panelClick(e) {\n      if (e.target !== e.currentTarget) return\n      ActionHandler.instance().select({\n        type: SELECTION_TYPE.CLEAR,\n      })\n    },\n    getDragAction(oldParentId, newParentId, oldIndex, newIndex, shapeId) {\n      if (oldParentId != newParentId) {\n        return {\n          type: ACTION_TYPE.CHANGE_PARENT,\n          shape_count: 1,\n          old_parent_id: oldParentId,\n          new_parent_id: newParentId,\n          old_index: oldIndex,\n          new_index: newIndex,\n        }\n      } else {\n        return {\n          type: ACTION_TYPE.CHANGE_READING_ORDER,\n          shape_id: shapeId,\n          old_index: oldIndex,\n          new_index: newIndex,\n        }\n      }\n    },\n    // getMultiDragAction(oldParentId, newParentId, oldIndex, newIndex, ids) {\n    //   if (oldParentId != newParentId) {\n    //     return {\n    //       type: ACTION_TYPE.MULTI_CHANGE_PARENT,\n    //       shape_ids: ids,\n    //       old_parent_id: oldParentId,\n    //       new_parent_id: newParentId,\n    //       old_index: oldIndex,\n    //       new_index: newIndex,\n    //     }\n    //   } else {\n    //     return {\n    //       type: ACTION_TYPE.MULTI_CHANGE_READING_ORDER,\n    //       shape_ids: ids,\n    //       old_index: oldIndex,\n    //       new_index: newIndex,\n    //     }\n    //   }\n    // },\n    getMoveAction(id, distance) {\n      return {\n        type: ACTION_TYPE.POSITION_MOVE,\n        shape_id: id,\n        distance: distance,\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.node-container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  cursor: pointer;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\n\n.column-element {\n  position: absolute;\n  overflow-x: hidden;\n  white-space: nowrap;\n}\n\n// .readingorder-span {\n//   position: absolute;\n//   left: 120px;\n// }\n\n.node-hover :hover {\n  background-color: #f9f9f9;\n}\n\n.inline-span {\n  position: absolute;\n  // margin-left: 100px;\n}\n\n#layout-panel {\n  position: relative;\n  overflow-x: hidden;\n  white-space: nowrap;\n\n  // display: flex;\n  // align-items: flex-start;\n  // justify-content: center;\n  // flex-direction: column;\n  // padding-left: 5px;\n}\n\n#scroll-box {\n  width: 450px;\n  height: 360px;\n  overflow-y: auto;\n  resize: both;\n}\n\n#scroll-box::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  background-color: #f5f5f5;\n}\n\n#scroll-box::-webkit-scrollbar {\n  width: 12px;\n  background-color: #f5f5f5;\n}\n\n#scroll-box::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  background-color: grey;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayoutTree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayoutTree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LayoutTree.vue?vue&type=template&id=32baf444&\"\nimport script from \"./LayoutTree.vue?vue&type=script&lang=js&\"\nexport * from \"./LayoutTree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LayoutTree.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div\n    id=\"box\"\n    v-bind:style=\"{\n      'min-width': windowWidth + 'px',\n      width: windowWidth + 'px',\n    }\"\n    class=\"is-relative\"\n  >\n    <!-- <div id=\"box\" class=\"is-relative\"> -->\n    <div id=\"osd\" ref=\"osd\" class=\"is-relative has-background-dark\"></div>\n    <div id=\"navigator-overlay\">\n      <div style=\"margin-top: 2px\">\n        <b-tooltip position=\"is-left\" :label=\"$t('Increase zoom level')\">\n          <b-button @click=\"zoomIn\">\n            <b-icon class=\"button-icon\" icon=\"plus-box-outline\"></b-icon>\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-left\" :label=\"$t('Decrease zoom level')\">\n          <b-button @click=\"zoomOut\">\n            <b-icon class=\"button-icon\" icon=\"minus-box-outline\"></b-icon>\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-left\" :label=\"$t('Center')\">\n          <b-button @click=\"setHome\">\n            <b-icon\n              class=\"button-icon\"\n              icon=\"image-filter-center-focus\"\n            ></b-icon>\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-left\" :label=\"$t('Fit to width')\">\n          <b-button @click=\"fitToWidth\">\n            <b-icon class=\"button-icon\" icon=\"arrow-left-right\"></b-icon>\n          </b-button>\n        </b-tooltip>\n      </div>\n      <!-- <div>\n        <b-tooltip position=\"is-left\" :label=\"$t('Fullscreen')\">\n          <b-button v-fullscreen.teleport=\"options\" @click=\"fullscreen\">\n            <b-icon class=\"button-icon\" icon=\"fullscreen\"></b-icon>\n          </b-button>\n        </b-tooltip>\n      </div> -->\n    </div>\n    <div id=\"editor-overlay\">\n      <div style=\"margin-bottom: 20px\">\n        <b-tooltip position=\"is-right\" :label=\"$t('Save')\">\n          <b-button\n            icon-left=\"content-save\"\n            @click=\"save\"\n            style=\"background-color: #48c774\"\n            class=\"editor-button\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Selection Mode')\">\n          <b-button\n            @click=\"buttonClick(Editor.BUTTON.POINTER)\"\n            :style=\"getButtonStyle(Editor.BUTTON.POINTER)\"\n            class=\"editor-button\"\n            id=\"pointer\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Add Line')\">\n          <b-button\n            @click=\"buttonClick(Editor.BUTTON.ADD_BASELINES)\"\n            :style=\"getButtonStyle(Editor.BUTTON.ADD_BASELINES)\"\n            class=\"editor-button\"\n            id=\"add-textline\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Add Region')\">\n          <b-button\n            @click=\"buttonClick(Editor.BUTTON.ADD_REGIONS)\"\n            :style=\"getButtonStyle(Editor.BUTTON.ADD_REGIONS)\"\n            class=\"editor-button\"\n            id=\"add-textregion\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Add Table')\">\n          <b-button\n            @click=\"buttonClick(Editor.BUTTON.ADD_TABLES)\"\n            :style=\"getButtonStyle(Editor.BUTTON.ADD_TABLES)\"\n            class=\"editor-button\"\n            id=\"add-table\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <!-- <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Add Relation')\">\n          <b-button\n            icon-left=\"transit-connection-horizontal\"\n            @click=\"buttonClick(Editor.BUTTON.ADD_RELATION)\"\n            :style=\"getButtonStyle(Editor.BUTTON.ADD_RELATION)\"\n            class=\"editor-button\"\n            id=\"add-relation\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div> -->\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Undo')\">\n          <b-button\n            icon-left=\"undo\"\n            @click=\"buttonClick(Editor.BUTTON.UNDO)\"\n            class=\"editor-button\"\n            id=\"undo-button\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Redo')\">\n          <b-button\n            icon-left=\"redo\"\n            @click=\"buttonClick(Editor.BUTTON.REDO)\"\n            class=\"editor-button\"\n            id=\"redo-button\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div style=\"margin-top: 20px\">\n        <b-tooltip position=\"is-right\" :label=\"$t('References')\">\n          <b-dropdown position=\"is-top-right\">\n            <template #trigger=\"{}\">\n              <b-button\n                icon-left=\"message-outline\"\n                class=\"editor-button\"\n                id=\"shortcut-button\"\n              >\n              </b-button>\n            </template>\n            <b-dropdown-item :custom=\"true\">\n              <div class=\"description\">\n                <span :style=\"{ 'margin-bottom': '10px' }\">{{\n                  `${$t('References')}:`\n                }}</span>\n                <ul>\n                  <li v-for=\"shortcut in instructions\" :key=\"shortcut.string\">\n                    <span v-html=\"shortcut.string\"></span>\n                  </li>\n                </ul></div\n            ></b-dropdown-item>\n          </b-dropdown>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip position=\"is-right\" :label=\"$t('Settings')\">\n          <b-button\n            icon-left=\"cogs\"\n            @click=\"openSettingsModal\"\n            class=\"editor-button\"\n            id=\"settings-button\"\n          >\n          </b-button>\n        </b-tooltip>\n      </div>\n      <div>\n        <b-tooltip\n          position=\"is-bottom\"\n          :label=\"$t('Layout')\"\n          id=\"tree-dropdown\"\n        >\n          <b-dropdown\n            position=\"is-bottom-right\"\n            :can-close=\"false\"\n            @active-change=\"\n              (open) => {\n                treeOpen = open\n              }\n            \"\n          >\n            <template #trigger=\"{}\">\n              <b-button\n                @click=\"fetchLayout\"\n                icon-left=\"format-list-bulleted-square\"\n                class=\"editor-button\"\n                id=\"layout-button\"\n              >\n              </b-button>\n            </template>\n            <b-dropdown-item :custom=\"true\">\n              <LayoutTree\n                ref=\"layoutTree\"\n                :initData=\"layout\"\n                :settings=\"settings\"\n                :isOpen=\"treeOpen\"\n              ></LayoutTree>\n            </b-dropdown-item>\n          </b-dropdown>\n        </b-tooltip>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Editor from './editor.js'\nimport StructureTypeManager from './vueComponents/StructureTypeManager.vue'\nimport SettingsModal from './vueComponents/SettingsModal.vue'\nimport Modal from './vueComponents/Modal.vue'\nimport { Singleton as Settings } from './singletons/settings.js'\nimport { mapState } from 'vuex'\nimport 'he-tree-vue/dist/he-tree-vue.css'\nimport {\n  Tree, // Base tree\n  Fold,\n  Check,\n  Draggable, // plugins\n  foldAll,\n  unfoldAll,\n  cloneTreeData,\n  walkTreeData,\n  getPureTreeData, // utils\n} from 'he-tree-vue'\nimport LayoutTree from './vueComponents/LayoutTree.vue'\n\n// Vue.use(VueTreeList)\n\nvar that = this\n\nimport {\n  OpenSeadragon,\n  fabric,\n  initOverlay,\n} from 'openseadragon-fabricjs-overlay-jk'\n\n//import OpenSeadragon from 'openseadragon'\n//const OpenSeadragon = require('openseadragon')\n\nexport default {\n  data() {\n    return {\n      treeOpen: false,\n      canvas: {},\n      layout: [],\n      overlay: {},\n      editor: {},\n      editorState: null,\n      Editor,\n      vueFunctions: {},\n      windowWidth: null,\n      canvasHeight: null,\n      leftClickTracker: null,\n      drag: null,\n      dragType: null,\n      treeData: [\n        { text: 'node 1' },\n        { text: 'node 2', children: [{ text: 'node 2-1' }] },\n      ],\n      settings: {},\n      // data: new Tree([]),\n\n      instructions: [\n        {\n          string: this.$t(\n            `New <strong>points</strong> can be added by clicking in the middle of a line and dragging the new point to a new position`\n          ),\n        },\n        {\n          string: this.$t(\n            `Edit Shapes using the <strong>context menu</strong> (right click)`\n          ),\n        },\n        {\n          string: this.$t(\n            `Hold <div class='description-icon' id='shift-icon'></div> to <strong>move</strong> and <strong>scale</strong> shapes`\n          ),\n        },\n        {\n          string: this.$t(\n            `Press <div class='description-icon' id='ctrl-icon'></div> + L to select all lines of a selected region`\n          ),\n        },\n        {\n          string: this.$t(\n            `Hold <div class='description-icon' id='ctrl-icon'></div> or <div class='description-icon' id='cmd-icon'></div> to select <strong>multiple</strong> shapes`\n          ),\n        },\n        {\n          string: this.$t(\n            `Press <div class='description-icon' id='tab-icon' ></div> to select the <strong>next</strong> shape (following the reading order)`\n          ),\n        },\n      ],\n      options: {\n        callback(isFullscreen) {\n          that.$store.dispatch('detail/content/update', {\n            fullScreen: isFullscreen,\n          })\n        },\n      },\n    }\n  },\n  components: { Tree: Tree.mixPlugins([Fold, Draggable]), LayoutTree },\n  computed: {\n    ...mapState('detail/content', ['fullScreen']),\n  },\n  watch: {\n    structureTypes: {\n      deep: true,\n      handler(newTypes) {\n        Settings.instance().structureTypes = newTypes\n      },\n    },\n  },\n  props: {\n    pageXml: {\n      key: String,\n    },\n    tileSource: {\n      key: Object,\n    },\n    structureTypes: {\n      key: Array,\n    },\n  },\n\n  created() {\n    let width = this.tileSource.width\n    let viewerWidth = window.innerWidth\n    this.scaleFactor = viewerWidth / width\n    const rounded = (x) => Math.round(x * 1000000) / 1000000\n    this.scaleFactor = rounded(this.scaleFactor)\n    this.windowWidth = window.innerWidth\n  },\n  mounted() {\n    const showLog = true\n    const showWarn = true\n    const showProtocolLog = true\n    if (showLog) {\n      window.log = console.log.bind(window.console)\n    } else {\n      window.log = () => {}\n    }\n    if (showProtocolLog) {\n      window.protocolLog = console.log.bind(window.console)\n    } else {\n      window.protocolLog = () => {}\n    }\n    if (showWarn) {\n      window.warn = console.warn.bind(window.console)\n    } else {\n      window.warn = () => {}\n    }\n\n    that = this\n    let viewer = OpenSeadragon({\n      id: 'osd',\n      prefixUrl: 'openseadragon/images/',\n      tabIndex: '',\n      tileSources: [\n        {\n          tileSource: this.tileSource,\n        },\n      ],\n      controlsFadeDelay: 60000,\n      showZoomControl: false,\n      showHomeControl: false,\n      showFullPageControl: false,\n      minZoomImageRatio: 0.5,\n      maxZoomPixelRatio: 10,\n      visibilityRatio: 0,\n    })\n\n    viewer.addOnceHandler('open', () => {\n      this.fitToWidth()\n      // console.log('viewer opened')\n      this.$emit('hasLoaded')\n    })\n\n    initOverlay(OpenSeadragon, fabric)\n    let overlay = viewer.fabricjsOverlay({\n      scale: 1000,\n    })\n    let canvas = overlay.fabricCanvas()\n    //this.canvas.renderOnAddRemove = false;\n    canvas.uniformScaling = false\n    canvas.fireRightClick = true\n    // canvas.preserveObjectStacking = true\n    canvas.uniScaleKey = 'null'\n    canvas.centeredKey = 'null'\n    canvas.selectionKey = 'null'\n    canvas.altActionKey = 'null'\n    canvas.altSelectionKey = 'null'\n\n    let tileSourceRatio2 = this.tileSource.height / this.tileSource.width\n\n    this.canvasHeight = canvas.width * tileSourceRatio2\n\n    viewer.zoomPerClick = 1\n    viewer.setControlsEnabled(false)\n    this.vueFunctions = {\n      setEditorState: this.setEditorState,\n      save: this.save,\n      setEdited: this.setEdited,\n      openModal: this.openModal,\n      getRouterBase: this.getRouterBase,\n      getCanvasHeight: this.getCanvasHeight,\n      getTileSourceWidth: () => this.tileSource.width,\n      performAction: this.performAction,\n      performSelection: this.performSelection,\n      $t: this.$t.bind(this),\n      setDrag: this.setDrag,\n    }\n\n    Settings.instance().on('update', (settings) => {\n      this.saveSettingsToCookie(settings)\n      this.settings = settings\n    })\n    if (this.structureTypes != null) {\n      Settings.instance().structureTypes = this.structureTypes\n    }\n    const settings = this.getSettingsFromCookie()\n    Settings.instance().set(settings)\n\n    this.viewer = viewer\n    window.layouteditor = new Editor(\n      canvas,\n      this.pageXml,\n      this.scaleFactor,\n      this.vueFunctions\n    )\n    window.layouteditor.render()\n    let buffer = 0\n    viewer.addHandler('canvas-drag', function () {\n      if (buffer++ % 20 === 0) {\n        if (!window.layouteditor.canvasDrag) {\n          window.layouteditor.canvasDrag = true\n        }\n      }\n    })\n    this.fetchLayout()\n  },\n\n  beforeDestroy() {\n    window.layouteditor.removeKeyListeners()\n  },\n\n  methods: {\n    setDrag(enable) {\n      // new OpenSeadragon.MouseTracker({\n      //   element: this.viewer.canvas,\n      //   pressHandler: () => this.viewer.setMouseNavEnabled(false),\n      //   releaseHandler: () => this.viewer.setMouseNavEnabled(true),\n      // })\n      this.viewer.setMouseNavEnabled(enable)\n      return\n\n      if (this.dragStopper == null) {\n        this.dragStopper = (event) => {\n          event.preventDefaultAction = true\n        }\n      }\n      if (enable) {\n        this.viewer.removeHandler('canvas-drag', this.dragStopper)\n      } else {\n        this.viewer.addHandler('canvas-drag', this.dragStopper)\n      }\n    },\n    getSettingsFromCookie() {\n      if (this.$cookies == null) return\n      return this.$cookies.get('transkribus-config')?.layoutSettings\n    },\n    saveSettingsToCookie(settings) {\n      // console.log(settings)\n      if (this.$cookies == null) return\n      const config = this.$cookies.get('transkribus-config') || {}\n      config.layoutSettings = { ...config?.layoutSettings, ...settings }\n      this.$cookies.set('transkribus-config', JSON.stringify(config))\n    },\n\n    openSettingsModal() {\n      this.$buefy.modal.open({\n        parent: this,\n        component: SettingsModal,\n        props: {\n          structureTypes: this.structureTypes,\n        },\n        events: {\n          save: (structureTypes) => {\n            this.$emit('publishStructureTypes', structureTypes)\n          },\n        },\n      })\n    },\n    // handleTreeNodeClick(id) {\n    //   const editor = window.layouteditor\n    //   const shape = editor.getShape(id)\n    //   editor.selectNewShape(shape)\n    // },\n    // setActiveShape(shape) {\n    //   this.activeShapeId = shape?.id\n    // },\n    performAction(action) {\n      this.$refs.layoutTree.performAction(action)\n    },\n    performSelection(selection) {\n      this.$refs.layoutTree.performSelection(selection)\n    },\n    fetchLayout() {\n      this.layout = window.layouteditor.getLayout()\n    },\n\n    // drop({ node, src, target }) {\n    //   console.log('drop')\n    //   console.log(node, src, target)\n    // },\n    // dropBefore({ node, src, target }) {\n    //   console.log('drop-before')\n    //   console.log(node, src, target)\n    // },\n    // dropAfter({ node, src, target }) {\n    //   console.log('drop-after')\n    //   console.log(node, src, target)\n    // },\n    setLeftClickDrag(activate) {\n      // console.log(activate)\n      // this.drag = null\n      // if (this.leftClickTracker == null) {\n      //   this.leftClickTracker = new OpenSeadragon.MouseTracker({\n      //     element: this.viewer.container,\n      //     nonPrimaryPressHandler: (event) => {\n      //       if (event.button === 2) {\n      //         // Middle\n      //         // console.log('press')\n      //         this.drag = {\n      //           lastPos: event.position.clone(),\n      //         }\n      //       }\n      //     },\n      //     moveHandler: (event) => {\n      //       if (this.drag) {\n      //         // console.log('drag')\n      //         var deltaPixels = this.drag.lastPos.minus(event.position)\n      //         var deltaPoints =\n      //           this.viewer.viewport.deltaPointsFromPixels(deltaPixels)\n      //         this.viewer.viewport.panBy(deltaPoints)\n      //         this.drag.lastPos = event.position.clone()\n      //       }\n      //     },\n      //     nonPrimaryReleaseHandler: (event) => {\n      //       if (event.button === 2) {\n      //         // console.log('release')\n      //         this.drag = null\n      //       }\n      //     },\n      //   })\n      // }\n      // if (activate) {\n      //   this.leftClickTracker.setTracking(true)\n      //   console.log('called')\n      //   return\n      // }\n      // this.leftClickTracker.setTracking(false)\n    },\n\n    openModal(heading, text) {\n      this.$buefy.modal.open({\n        parent: this,\n        component: Modal,\n        props: {\n          heading: heading,\n          text: text,\n        },\n      })\n    },\n    getRouterBase() {\n      return this.$router?.options?.base || ''\n    },\n    getCanvasHeight() {\n      return this.canvasHeight\n    },\n    buttonClick(editorButton) {\n      window.layouteditor.buttonClick(editorButton)\n    },\n    setEditorState(state) {\n      this.editorState = state\n    },\n    save() {\n      const xml = window.layouteditor.createPageXML()\n      //console.log(xml)\n      this.$emit('publishXml', xml)\n    },\n    setEdited(boolean) {\n      this.$emit('setEdited', boolean)\n    },\n    restartEditor(xml) {\n      window.layouteditor.canvas.clear()\n      window.layouteditor.removeCanvasListeners()\n      window.layouteditor = new Editor(\n        window.layouteditor.canvas,\n        xml,\n        this.scaleFactor,\n        this.vueFunctions\n      )\n      window.layouteditor.render()\n    },\n    getButtonStyle(button) {\n      if (\n        ((this.editorState === Editor.STATE.EDIT ||\n          this.editorState === Editor.STATE.MULTI_SELECT ||\n          this.editorState === Editor.STATE.GROUP_SELECTION) &&\n          button === Editor.BUTTON.POINTER) ||\n        (this.editorState === Editor.STATE.ADD_BASELINES &&\n          button === Editor.BUTTON.ADD_BASELINES) ||\n        (this.editorState === Editor.STATE.ADD_REGIONS &&\n          button === Editor.BUTTON.ADD_REGIONS) ||\n        (this.editorState === Editor.STATE.ADD_TABLES &&\n          button === Editor.BUTTON.ADD_TABLES) ||\n        (this.editorState === Editor.STATE.ADD_RELATION &&\n          button === Editor.BUTTON.ADD_RELATION)\n      ) {\n        return {\n          'background-color': '\t#C0C0C0',\n        }\n      }\n      return {\n        'background-color': 'white',\n      }\n    },\n    setHome() {\n      this.viewer.viewport.goHome()\n    },\n    fullscreen() {\n      this.$fullscreen.toggle()\n    },\n    fitToWidth() {\n      /*\n       ** as seen on https://github.com/openseadragon/openseadragon/issues/839#issuecomment-181968800\n       */\n      const viewportBounds = this.viewer.viewport.getBounds()\n      const viewportAspect = viewportBounds.height / viewportBounds.width\n      const newBounds = this.viewer.world.getHomeBounds()\n      newBounds.height = newBounds.width * viewportAspect\n      this.viewer.viewport.fitBounds(newBounds, false)\n    },\n    zoomIn() {\n      this.viewer.viewport.zoomBy(1.2)\n    },\n    zoomOut() {\n      this.viewer.viewport.zoomBy(0.8)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.is-relative {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n#sidebar {\n  margin: 5px;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n}\n\n#settings-panel {\n  width: 300px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  line-height: 1.2;\n\n  ul {\n    list-style: none;\n    font-size: 15px;\n    margin-left: 10px;\n    li {\n      margin-top: 10px;\n    }\n  }\n}\n\n#tree-dropdown .dropdown-menu {\n  left: 50px;\n  top: -390px;\n  z-index: 1;\n}\n\n#tree-dropdown .dropdown-item {\n  outline: none;\n}\n\n.description {\n  width: 800px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  padding-left: 5px;\n  line-height: 1.2;\n  font-size: 20px;\n\n  ul {\n    list-style: circle;\n    margin-left: 10px;\n  }\n}\n\n.description p {\n  font-size: 8px;\n}\n\n#navigator-overlay {\n  position: absolute;\n  z-index: 10;\n  right: 1.25rem;\n  top: 1.25rem;\n  div {\n    margin-bottom: 2px;\n  }\n  background-color: rgba(122, 122, 122, 0.3);\n  display: flex;\n  flex-direction: column;\n  border-radius: 4px;\n}\n\n#editor-overlay {\n  position: absolute;\n  z-index: 10;\n  top: 1.25rem;\n  left: 1.25em;\n  display: flex;\n  /* width: 100%; */\n  /* height: 100%; */\n  /* padding: 1em; */\n  /* align-items: center; */\n  /* justify-content: center; */\n  flex-direction: column;\n  background-color: rgba(122, 122, 122, 0.3);\n\n  border-radius: 4px;\n}\n\n#select-button {\n  width: 50px;\n  height: 50px;\n}\n\n.button-icon {\n  vertical-align: middle;\n}\n\n.editor-icon {\n  width: 100px;\n  height: 100px;\n}\n\n.editor-button {\n  position: relative;\n  margin: 3px 3px 3px 3px;\n  width: 40px;\n  height: 40px;\n  background-repeat: no-repeat;\n  background-size: 30px;\n  background-position: center;\n}\n\n$prefix: '../../../../../';\n@if not variable-exists(editor-only) {\n  $prefix: '~';\n}\n\n#pointer {\n  background-image: url($prefix + 'assets/images/Selection-Tool.svg');\n}\n\n#add-textline {\n  background-image: url($prefix + 'assets/images/Pen-Tool.svg');\n}\n\n#add-textregion {\n  background-image: url($prefix + 'assets/images/Region-Tool.svg');\n}\n\n#add-table {\n  background-image: url($prefix + 'assets/images/Table-Tool.svg');\n}\n\n#shift-icon {\n  background: url($prefix + 'assets/images/Shift.svg');\n}\n\n#a-icon {\n  background: url($prefix + 'assets/images/A.svg');\n}\n\n#backspace-icon {\n  background: url($prefix + 'assets/images/Backspace.svg');\n}\n\n#ctrl-icon {\n  background: url($prefix + 'assets/images/CTRL.svg');\n}\n\n#cmd-icon {\n  background: url($prefix + 'assets/images/Cmd.svg');\n}\n\n#d-icon {\n  background: url($prefix + 'assets/images/D.svg');\n}\n\n#delete-icon {\n  background: url($prefix + 'assets/images/Del.svg');\n}\n\n#escape-icon {\n  background: url($prefix + 'assets/images/Esc.svg');\n}\n\n#m-icon {\n  background: url($prefix + 'assets/images/M.svg');\n}\n\n#r-icon {\n  background: url($prefix + 'assets/images/R.svg');\n}\n\n#tab-icon {\n  background: url($prefix + 'assets/images/Tab.svg');\n}\n\n#esc-icon {\n  background: url($prefix + 'assets/images/Esc.svg');\n}\n\n#arrowUp-icon {\n  background: url($prefix + 'assets/images/arrowUp.svg');\n}\n#arrowDown-icon {\n  background: url($prefix + 'assets/images/arrowDown.svg');\n}\n#arrowLeft-icon {\n  background: url($prefix + 'assets/images/arrowLeft.svg');\n}\n#arrowRight-icon {\n  background: url($prefix + 'assets/images/arrowRight.svg');\n}\n\n.description-icon {\n  display: inline-block;\n  width: 25px;\n  height: 25px;\n  margin-bottom: -3px;\n}\n.ctx-menu-icon {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-bottom: -3px;\n  margin-right: 12px;\n  margin-left: -3px;\n}\n.ctxmenu {\n  border-radius: 4px;\n}\n\n// .selected-node {\n//   background-color: #e9e9e9;\n// }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayoutEditor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayoutEditor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LayoutEditor.vue?vue&type=template&id=2507d4d9&\"\nimport script from \"./LayoutEditor.vue?vue&type=script&lang=js&\"\nexport * from \"./LayoutEditor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LayoutEditor.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\\n<PcGts xmlns=\\\"http://schema.primaresearch.org/PAGE/gts/pagecontent/2013-07-15\\\"\\n    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://schema.primaresearch.org/PAGE/gts/pagecontent/2013-07-15 http://schema.primaresearch.org/PAGE/gts/pagecontent/2013-07-15/pagecontent.xsd\\\">\\n    <Metadata>\\n        <Creator>prov=READ-COOP:name=PyLaia@TranskribusPlatform:version=0.7.1:model_id=42712:lm=none:date=17_06_2022_10:01 prov=READ-COOP:name=PyLaia@Transkribus:version=0.7.1:model_id=42712:date=17_06_2022_10:01 prov=University of Rostock/Institute of Mathematics/CITlab|PLANET AI GmbH/Tobias Gruening/tobias.gruening@planet-ai.de:name=de.uros.citlab.module.baseline2polygon.B2PSeamMultiOriented:v=2.6.7</Creator>\\n        <Created>2016-06-22T11:44:42.893+07:00</Created>\\n        <LastChange>2022-06-17T10:01:28.475+02:00</LastChange>\\n        <TranskribusMetadata docId=\\\"675140\\\" pageId=\\\"25929391\\\" pageNr=\\\"1\\\" tsid=\\\"88363093\\\" status=\\\"IN_PROGRESS\\\" userId=\\\"88244\\\" imgUrl=\\\"https://files.transkribus.eu/Get?id=UYFUAQYSQFSHIZJUHQKFBVHE&amp;fileType=view\\\" xmlUrl=\\\"https://files.transkribus.eu/Get?id=XIZXUJMSNUZCQJMQANBEWKPR\\\" imageId=\\\"813424\\\"/>\\n    </Metadata>\\n    <Page imageFilename=\\\"25929391.jpg\\\" imageWidth=\\\"5188\\\" imageHeight=\\\"4088\\\" type=\\\"front-cover\\\">\\n        <ReadingOrder>\\n            <OrderedGroup id=\\\"ro_1655452888492\\\" caption=\\\"Regions reading order\\\">\\n                <RegionRefIndexed index=\\\"0\\\" regionRef=\\\"r1\\\"/>\\n                <RegionRefIndexed index=\\\"1\\\" regionRef=\\\"r2\\\"/>\\n                <RegionRefIndexed index=\\\"2\\\" regionRef=\\\"r3\\\"/>\\n                <RegionRefIndexed index=\\\"3\\\" regionRef=\\\"r4\\\"/>\\n                <RegionRefIndexed index=\\\"4\\\" regionRef=\\\"r5\\\"/>\\n                <RegionRefIndexed index=\\\"5\\\" regionRef=\\\"r6\\\"/>\\n                <RegionRefIndexed index=\\\"6\\\" regionRef=\\\"r7\\\"/>\\n                <RegionRefIndexed index=\\\"7\\\" regionRef=\\\"r8\\\"/>\\n                <RegionRefIndexed index=\\\"8\\\" regionRef=\\\"r9\\\"/>\\n                <RegionRefIndexed index=\\\"9\\\" regionRef=\\\"r10\\\"/>\\n                <RegionRefIndexed index=\\\"10\\\" regionRef=\\\"r11\\\"/>\\n                <RegionRefIndexed index=\\\"11\\\" regionRef=\\\"r12\\\"/>\\n                <RegionRefIndexed index=\\\"12\\\" regionRef=\\\"r13\\\"/>\\n                <RegionRefIndexed index=\\\"13\\\" regionRef=\\\"r14\\\"/>\\n                <RegionRefIndexed index=\\\"14\\\" regionRef=\\\"r15\\\"/>\\n                <RegionRefIndexed index=\\\"15\\\" regionRef=\\\"r16\\\"/>\\n                <RegionRefIndexed index=\\\"16\\\" regionRef=\\\"r17\\\"/>\\n                <RegionRefIndexed index=\\\"17\\\" regionRef=\\\"r18\\\"/>\\n                <RegionRefIndexed index=\\\"18\\\" regionRef=\\\"r19\\\"/>\\n                <RegionRefIndexed index=\\\"19\\\" regionRef=\\\"r20\\\"/>\\n            </OrderedGroup>\\n        </ReadingOrder>\\n        <TextRegion orientation=\\\"0.0\\\" id=\\\"r1\\\" custom=\\\"readingOrder {index:0;}\\\">\\n            <Coords points=\\\"314,697 314,995 452,995 452,697\\\"/>\\n            <TextLine id=\\\"r1l1\\\" custom=\\\"readingOrder {index:0;}\\\">\\n                <Coords points=\\\"326,730 341,729 346,735 360,727 378,737 395,731 432,733 435,662 427,660 409,674 396,670 391,675 382,674 350,698 328,701\\\"/>\\n                <Baseline points=\\\"334,720 364,722 395,723 426,724\\\"/>\\n                <Word id=\\\"r1l1w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"348,682 348,742 388,742 388,682\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἵν</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἵν</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r1l2\\\" custom=\\\"readingOrder {index:1;}\\\">\\n                <Coords points=\\\"353,776 363,775 383,790 407,776 424,780 432,787 446,778 456,780 458,729 443,730 425,745 405,738 384,749 373,742 354,739\\\"/>\\n                <Baseline points=\\\"360,770 389,771 418,771 448,774\\\"/>\\n                <Word id=\\\"r1l2w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"363,731 363,791 463,791 463,731\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>κμίκ.</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>κμίκ.</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r1l3\\\" custom=\\\"readingOrder {index:2;}\\\">\\n                <Coords points=\\\"357,828 371,832 381,826 390,833 395,826 401,829 405,825 411,829 425,823 456,825 455,797 439,799 419,792 404,801 395,799 377,806 369,802 356,805\\\"/>\\n                <Baseline points=\\\"364,824 392,821 420,819 448,820\\\"/>\\n                <Word id=\\\"r1l3w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"358,780 358,840 454,840 454,780\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>νη</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>νη</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r1l4\\\" custom=\\\"readingOrder {index:3;}\\\">\\n                <Coords points=\\\"338,892 365,886 380,891 397,886 409,889 425,878 436,887 444,882 460,885 458,844 434,846 406,835 390,847 386,843 364,844 350,857 337,855\\\"/>\\n                <Baseline points=\\\"344,878 371,880 398,877 425,876 452,878\\\"/>\\n                <Word id=\\\"r1l4w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"338,836 338,896 461,896 461,836\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>σιατα.</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>σιατα.</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r1l5\\\" custom=\\\"readingOrder {index:4;}\\\">\\n                <Coords points=\\\"306,945 335,942 373,950 383,940 400,939 406,933 428,943 453,940 454,898 432,898 415,884 383,894 348,877 308,883\\\"/>\\n                <Baseline points=\\\"314,930 340,928 366,928 393,930 419,932 446,930\\\"/>\\n                <Word id=\\\"r1l5w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"314,889 314,949 320,949 320,889\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>·</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <Word id=\\\"r1l5w2\\\" custom=\\\"readingOrder {index:1;}\\\" readingOrderIndex=\\\"1\\\">\\n                    <Coords points=\\\"339,888 339,948 419,948 419,888\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>καὶ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>· καὶ</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r1l6\\\" custom=\\\"readingOrder {index:5;}\\\">\\n                <Coords points=\\\"339,997 364,1004 391,983 397,987 404,984 420,995 437,996 436,941 410,934 387,948 375,948 351,971 338,971\\\"/>\\n                <Baseline points=\\\"346,984 374,979 402,981 430,980\\\"/>\\n                <Word id=\\\"r1l6w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"342,940 342,1000 441,1000 441,940\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>δἀκη.</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>δἀκη.</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextEquiv>\\n                <Unicode/>\\n            </TextEquiv>\\n        </TextRegion>\\n        <TextRegion orientation=\\\"0.0\\\" id=\\\"r2\\\" custom=\\\"readingOrder {index:1;}\\\">\\n            <Coords points=\\\"508,454 508,726 588,726 588,454\\\"/>\\n            <TextLine id=\\\"r2l1\\\" custom=\\\"readingOrder {index:0;}\\\">\\n                <Coords points=\\\"520,486 535,484 539,489 549,490 553,486 569,489 578,484 586,494 595,495 599,450 576,447 572,451 562,445 542,456 523,451\\\"/>\\n                <Baseline points=\\\"528,478 558,483 588,484\\\"/>\\n                <Word id=\\\"r2l1w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"530,443 530,503 598,503 598,443\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>οοος</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>οοος</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r2l2\\\" custom=\\\"readingOrder {index:1;}\\\">\\n                <Coords points=\\\"501,549 528,550 537,543 557,553 572,543 595,540 595,514 570,512 554,506 544,514 531,514 527,509 521,515 511,512 501,514\\\"/>\\n                <Baseline points=\\\"508,534 534,534 561,534 588,534\\\"/>\\n                <Word id=\\\"r2l2w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"500,494 500,554 605,554 605,494\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἡςκῆς.</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἡςκῆς.</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r2l3\\\" custom=\\\"readingOrder {index:2;}\\\">\\n                <Coords points=\\\"512,711 522,710 537,717 547,713 588,718 588,640 551,637 538,640 533,646 528,644 520,653 512,653\\\"/>\\n                <Baseline points=\\\"520,704 550,704 580,704\\\"/>\\n                <Word id=\\\"r2l3w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"531,664 531,724 538,724 538,664\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἴ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἴ</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextEquiv>\\n                <Unicode/>\\n            </TextEquiv>\\n        </TextRegion>\\n        <TextRegion orientation=\\\"0.0\\\" id=\\\"r3\\\" custom=\\\"readingOrder {index:2;}\\\">\\n            <Coords points=\\\"626,423 626,3247 812,3247 812,423\\\"/>\\n            <TextLine id=\\\"r3l1\\\" custom=\\\"readingOrder {index:0;}\\\">\\n                <Coords points=\\\"660,469 713,480 729,469 750,466 774,473 783,469 791,478 803,475 806,415 789,410 761,420 736,413 720,421 702,410 685,421 662,418\\\"/>\\n                <Baseline points=\\\"668,454 693,457 719,458 744,458 770,460 796,462\\\"/>\\n                <Word id=\\\"r3l1w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"729,420 729,480 816,480 816,420\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ο·</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ο·</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l2\\\" custom=\\\"readingOrder {index:1;}\\\">\\n                <Coords points=\\\"708,531 729,527 750,540 763,538 763,475 752,473 742,479 729,480 721,488 708,488\\\"/>\\n                <Baseline points=\\\"716,520 756,520\\\"/>\\n                <Word id=\\\"r3l2w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"710,480 710,540 755,540 755,480\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>σος</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>σος</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l3\\\" custom=\\\"readingOrder {index:2;}\\\">\\n                <Coords points=\\\"643,579 678,578 685,584 704,577 753,578 768,590 795,576 818,584 819,541 794,547 784,536 771,542 739,536 718,544 681,538 643,551\\\"/>\\n                <Baseline points=\\\"650,574 677,571 704,570 731,570 758,572 785,573 812,576\\\"/>\\n                <Word id=\\\"r3l3w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"643,532 643,592 690,592 690,532\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>οσ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <Word id=\\\"r3l3w2\\\" custom=\\\"readingOrder {index:1;}\\\" readingOrderIndex=\\\"1\\\">\\n                    <Coords points=\\\"705,532 705,592 814,592 814,532\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>σεηωος</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>οσ σεηωος</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l4\\\" custom=\\\"readingOrder {index:3;}\\\">\\n                <Coords points=\\\"686,662 734,661 754,640 769,644 774,639 790,639 786,588 767,590 753,578 730,578 680,596\\\"/>\\n                <Baseline points=\\\"690,630 720,627 751,625 782,622\\\"/>\\n                <Word id=\\\"r3l4w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"704,588 704,648 712,648 712,588\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ὧ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ὧ</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l5\\\" custom=\\\"readingOrder {index:4;}\\\">\\n                <Coords points=\\\"660,727 694,713 713,729 739,718 759,726 782,710 795,710 795,655 775,659 756,650 727,665 702,662 660,672\\\"/>\\n                <Baseline points=\\\"668,708 698,708 728,708 758,708 788,708\\\"/>\\n                <Word id=\\\"r3l5w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"668,668 668,728 779,728 779,668\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἢκκκ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἢκκκ</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l6\\\" custom=\\\"readingOrder {index:5;}\\\">\\n                <Coords points=\\\"637,1347 656,1350 673,1335 692,1335 734,1344 746,1337 769,1350 787,1342 807,1350 807,1296 788,1290 779,1296 758,1277 720,1296 704,1296 692,1286 668,1290 659,1281 637,1292\\\"/>\\n                <Baseline points=\\\"644,1330 670,1330 696,1330 722,1330 748,1330 774,1330 800,1330\\\"/>\\n                <Word id=\\\"r3l6w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"654,1290 654,1350 799,1350 799,1290\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἢκκη</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἢκκη</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l7\\\" custom=\\\"readingOrder {index:6;}\\\">\\n                <Coords points=\\\"735,1532 745,1533 750,1538 768,1535 788,1561 807,1562 816,1493 795,1489 788,1483 770,1487 754,1468 744,1467\\\"/>\\n                <Baseline points=\\\"744,1518 774,1522 804,1526\\\"/>\\n                <Word id=\\\"r3l7w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"743,1479 743,1539 766,1539 766,1479\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>-τ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>-τ</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l8\\\" custom=\\\"readingOrder {index:7;}\\\">\\n                <Coords points=\\\"641,1530 649,1530 652,1527 657,1533 663,1531 672,1533 686,1527 695,1527 695,1476 682,1477 678,1482 673,1483 656,1473 649,1477 641,1477\\\"/>\\n                <Baseline points=\\\"648,1524 688,1524\\\"/>\\n                <Word id=\\\"r3l8w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"655,1484 655,1544 663,1544 663,1484\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἡ</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἡ</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l9\\\" custom=\\\"readingOrder {index:8;}\\\">\\n                <Coords points=\\\"644,1807 673,1795 731,1795 757,1780 773,1789 820,1785 820,1716 740,1753 698,1730 683,1737 663,1731 644,1736\\\"/>\\n                <Baseline points=\\\"652,1774 678,1774 705,1776 732,1776 758,1775 785,1774 812,1774\\\"/>\\n                <Word id=\\\"r3l9w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"726,1734 726,1794 820,1794 820,1734\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>κν</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>κν</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l10\\\" custom=\\\"readingOrder {index:9;}\\\">\\n                <Coords points=\\\"627,2165 648,2168 675,2154 693,2157 704,2167 746,2159 796,2164 795,2126 782,2125 748,2099 725,2101 711,2114 661,2115 638,2136 627,2136\\\"/>\\n                <Baseline points=\\\"634,2154 659,2156 685,2156 711,2156 736,2155 762,2154 788,2152\\\"/>\\n                <Word id=\\\"r3l10w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"645,2115 645,2175 783,2175 783,2115\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>ἵα</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>ἵα</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l11\\\" custom=\\\"readingOrder {index:10;}\\\">\\n                <Coords points=\\\"619,2844 669,2851 703,2847 719,2852 728,2863 765,2864 768,2807 753,2808 720,2796 702,2803 694,2797 683,2804 661,2795 643,2803 622,2793\\\"/>\\n                <Baseline points=\\\"626,2844 652,2842 678,2842 705,2845 731,2848 758,2848\\\"/>\\n                <Word id=\\\"r3l11w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"635,2803 635,2863 754,2863 754,2803\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>τθα.</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>τθα.</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l12\\\" custom=\\\"readingOrder {index:11;}\\\">\\n                <Coords points=\\\"641,3113 657,3117 686,3098 698,3097 765,3108 795,3102 797,3051 780,3052 765,3038 753,3034 716,3047 645,3045\\\"/>\\n                <Baseline points=\\\"650,3084 677,3087 705,3089 732,3091 760,3092 788,3090\\\"/>\\n                <Word id=\\\"r3l12w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"663,3048 663,3108 735,3108 735,3048\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>α</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>α</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextLine id=\\\"r3l13\\\" custom=\\\"readingOrder {index:12;}\\\">\\n                <Coords points=\\\"637,3230 656,3238 684,3226 700,3240 722,3231 735,3237 762,3221 780,3232 800,3230 798,3178 768,3189 753,3179 733,3186 683,3165 653,3179 635,3175\\\"/>\\n                <Baseline points=\\\"644,3220 673,3217 703,3216 732,3216 762,3215 792,3212\\\"/>\\n                <Word id=\\\"r3l13w1\\\" custom=\\\"readingOrder {index:0;}\\\" readingOrderIndex=\\\"0\\\">\\n                    <Coords points=\\\"647,3177 647,3237 694,3237 694,3177\\\"/>\\n                    <TextEquiv>\\n                        <Unicode>κα</Unicode>\\n                    </TextEquiv>\\n                </Word>\\n                <TextEquiv>\\n                    <Unicode>κα</Unicode>\\n                </TextEquiv>\\n            </TextLine>\\n            <TextEquiv>\\n                <Unicode/>\\n            </TextEquiv>\\n        </TextRegion>\\n    </Page>\\n</PcGts>\";","import cypressTest from './xml-examples/cypressTest.xml'\nimport dutchHandwriting from './xml-examples/dutch-handwriting.xml'\nimport table from './xml-examples/table.xml'\nimport links from './xml-examples/links.xml'\nimport links2 from './xml-examples/links2.xml'\nimport customAttributes from './xml-examples/customAttributes.xml'\n\nexport default dutchHandwriting\n","const source = {\n  '@context': 'http://iiif.io/api/image/2/context.json',\n  '@id': 'https://files.transkribus.eu/iiif/2/UYFUAQYSQFSHIZJUHQKFBVHE',\n  protocol: 'http://iiif.io/api/image',\n  width: 5188,\n  height: 4088,\n  sizes: [\n    {\n      width: 162,\n      height: 128,\n    },\n    {\n      width: 324,\n      height: 256,\n    },\n    {\n      width: 649,\n      height: 511,\n    },\n    {\n      width: 1297,\n      height: 1022,\n    },\n    {\n      width: 2594,\n      height: 2044,\n    },\n    {\n      width: 5188,\n      height: 4088,\n    },\n  ],\n  tiles: [\n    {\n      width: 512,\n      height: 512,\n      scaleFactors: [1, 2, 4, 8, 16, 32],\n    },\n  ],\n  profile: [\n    'http://iiif.io/api/image/2/level2.json',\n    {\n      formats: ['jpg', 'tif', 'gif', 'png'],\n      maxArea: 21208544,\n      qualities: ['bitonal', 'default', 'gray', 'color'],\n      supports: [\n        'regionByPx',\n        'sizeByW',\n        'sizeByWhListed',\n        'cors',\n        'regionSquare',\n        'sizeByDistortedWh',\n        'canonicalLinkHeader',\n        'sizeByConfinedWh',\n        'sizeByPct',\n        'jsonldMediaType',\n        'regionByPct',\n        'rotationArbitrary',\n        'sizeByH',\n        'baseUriRedirect',\n        'rotationBy90s',\n        'profileLinkHeader',\n        'sizeByForcedWh',\n        'sizeByWh',\n        'mirroring',\n      ],\n    },\n  ],\n}\n\nexport default source\n","<template>\n  <div style=\"width: 100vw; height: 100vh\">\n    <LayoutEditor\n      :pageXml=\"pageXml\"\n      :tileSource=\"tileSource\"\n      :structureTypes=\"[\n        { name: 'paragraph', color: '#1CE6FF', default: 'true' },\n        { name: 'heading', color: '#FF34FF', default: 'true' },\n        { name: 'caption', color: '#008941', default: 'true' },\n        { name: 'header', color: '#006FA6', default: 'true' },\n        { name: 'footer', color: '#A30059', default: 'true' },\n        { name: 'page-number', color: '#FFFF00', default: 'true' },\n        { name: 'drop-capital', color: '#00846F', default: 'true' },\n        { name: 'credit', color: '#FFDBE5', default: 'true' },\n        { name: 'floating', color: '#7A4900', default: 'true' },\n        { name: 'signature-mark', color: '#0000A6', default: 'true' },\n        { name: 'catch-word', color: '#63FFAC', default: 'true' },\n        { name: 'marginalia', color: '#B79762', default: 'true' },\n        { name: 'footnote', color: '#004D43', default: 'true' },\n        { name: 'footnote-continued', color: '#8FB0FF', default: 'true' },\n        { name: 'endnote', color: '#997D87', default: 'true' },\n        { name: 'TOC-entry', color: '#5A0007', default: 'true' },\n      ]\"\n      @publishXml=\"save\"\n    ></LayoutEditor>\n  </div>\n</template>\n\n<script>\nimport LayoutEditor from './components/LayoutEditor'\nimport pageXml from './pageXML'\nimport tileSource from './tileSource'\nexport default {\n  name: 'App',\n\n  data() {\n    return {\n      pageXml: pageXml,\n      tileSource: tileSource,\n    }\n  },\n\n  created() {\n    const xml = window.layoutEditorConfig?.xml\n    const iiifString = window.layoutEditorConfig?.iiifJson\n    let iiifJson\n    try {\n      iiifJson = JSON.parse(iiifString)\n    } catch (error) {\n      console.log('Error: iiifJson in not in JSON format')\n    }\n\n    if (xml) {\n      this.pageXml = xml\n    }\n\n    if (iiifJson) {\n      this.tileSource = iiifJson\n    }\n  },\n\n  components: {\n    LayoutEditor,\n  },\n  methods: {\n    save(xml) {\n      if (window.onLayoutSave) {\n        window.onLayoutSave(xml)\n      }\n    },\n  },\n}\n</script>\n\n<style></style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=254e1c8d&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueI18n from 'vue-i18n'\n\nVue.use(VueI18n)\n\n// function loadLocaleMessages() {\n//   const locales = require.context(\n//     './locales',\n//     true,\n//     /[A-Za-z0-9-_,\\s]+\\.json$/i\n//   )\n//   const messages = {}\n//   locales.keys().forEach((key) => {\n//     const matched = key.match(/([A-Za-z0-9-_]+)\\./i)\n//     if (matched && matched.length > 1) {\n//       const locale = matched[1]\n//       messages[locale] = locales(key)\n//     }\n//   })\n//   return messages\n// }\n\nexport default new VueI18n({\n  locale: process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  // messages: loadLocaleMessages(),\n  messages: [],\n  silentTranslationWarn: true,\n})\n","import Vue from 'vue'\nimport App from './App.vue'\nimport Buefy from 'buefy'\nimport 'buefy/dist/buefy.css'\nimport i18n from './i18n'\n\nVue.use(Buefy)\n\nnew Vue({\n  i18n,\n  render: (h) => h(App),\n}).$mount('#app')\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StructureTypeManager.vue?vue&type=style&index=0&id=7b3dceef&scoped=true&lang=css&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayoutTree.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayoutEditor.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingsModal.vue?vue&type=style&index=0&id=549c31c2&scoped=true&lang=scss&\""],"sourceRoot":""}