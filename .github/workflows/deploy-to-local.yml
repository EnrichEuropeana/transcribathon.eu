name: Deploy to LOCAL
run-name: ${{ github.actor }} is deploying to LOCAL...
on:
  workflow_dispatch:
env:
  HOST: 192.168.7.125
  PORT: 22
  REMOTE_PATH: /var/www/transcribathon.local/wp-content/themes
  LOCAL_PATH: public_html/wp-content/themes
  THEME_NAME: transcribathon
  SSH_USER: ${{secrets.LOCAL_SSH_USER}}
  SSH_PRIVATE_KEY: ${{secrets.LOCAL_SSH_PRIVATE_KEY}}
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup environment vars
        run: |
          echo "now=$(date +%s)" >> $GITHUB_ENV
          echo "theme_name=$THEME_NAME" >> $GITHUB_ENV
          echo "remote_path=$REMOTE_PATH" >> $GITHUB_ENV

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn

      - name: Setup VPN config
        run: |
          echo "${{ secrets.CLIENT_OVPN }}" > client.ovpn
          echo "${{ secrets.CLIENT_P12 }}" | base64 --decode > client.p12
          echo "${{ secrets.CLIENT_PASS }}" > client.pass

      - name: Connect VPN
        run: sudo openvpn --config "client.ovpn" --log "vpn.log" --daemon

      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 "$HOST"; do sleep 2; done

      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare files
        run: |
          mkdir ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/local_key
          chmod 600 ~/.ssh/local_key
          echo "deployfile=deploy.${{ env.now }}.tar.gz" >> $GITHUB_ENV

      - name: Upload files
        run: |
          cd "$LOCAL_PATH"
          tar -czf "${{ env.deployfile }}" "${{ env.theme_name}}"
          scp -i ~/.ssh/local_key -o StrictHostKeyChecking=no -P "$PORT" "${{ env.deployfile }}" "$SSH_USER@$HOST:$REMOTE_PATH"

      - name: Move and extract files
        run: |
          ssh -tt -i ~/.ssh/local_key -o StrictHostKeyChecking=no -p "$PORT" "$SSH_USER@$HOST" "sudo -i <<EOF
            cd ${{ env.remote_path }}
            tar -czf ${{ env.theme_name }}.${{ env.now }}.tar.gz ${{ env.theme_name }}
            rm -R ${{ env.theme_name }}
            tar -xf ${{ env.deployfile }}
            chown -R www-data:www-data ${{ env.theme_name }}
            rm ${{ env.deployfile }}
            exit
          EOF"

      - name: Kill VPN connection
        if: always()
        run: |
          sudo killall openvpn
