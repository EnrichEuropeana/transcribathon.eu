name: Deploy to DEV
run-name: ${{ github.actor }} is deploying to DEV...
on:
  workflow_dispatch
  # push:
    # branches:
      # - main
env:
  HOST: 192.168.7.123
  PORT: 2223
  USER: enrich-dev
  REMOTE_PATH: /var/www/transcribathon.local/wp-content/themes
  LOCAL_PATH: public_html/wp-content/themes
  THEME_NAME: transcribathon
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup environment vars
        run: |
          echo "now=$(date +%s)" >> $GITHUB_ENV
          echo "theme_name=$THEME_NAME" >> $GITHUB_ENV
          echo "remote_path=$REMOTE_PATH" >> $GITHUB_ENV
          echo "deployfile=deploy.${{ env.now }}.tar.gz" >> $GITHUB_ENV
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn

      - name: Setup VPN config
        run: |
          echo "${{ secrets.CLIENT_OVPN }}" > client.ovpn
          echo "${{ secrets.CLIENT_P12 }}" | base64 --decode > client.p12
          echo "${{ secrets.CLIENT_PASS }}" > client.pass

      - name: Connect VPN
        run: sudo openvpn --config "client.ovpn" --log "vpn.log" --daemon

      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 "$HOST"; do sleep 2; done

      - name: Setup SSH key and SSH passphrase
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          SSH_PASSPHRASE: ${{secrets.DEV_SSH_PASSPHRASE}}
          SSH_PRIVATE_KEY: ${{secrets.DEV_SSH_PRIVATE_KEY}}
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo 'echo $SSH_PASSPHRASE' > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - > /dev/null
          mkdir ~/.ssh

      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare files
        run: |
          cd "$LOCAL_PATH"
          tar -czf "${{ env.deployfile }}" "${{ env.theme_name}}"

      - name: Upload files
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          cd "$LOCAL_PATH"
          scp -o StrictHostKeyChecking=no -P "$PORT" "${{ env.deployfile }}" "$SSH_USER@$HOST:$REMOTE_PATH"

      # - name: Create and upload tarball
      #   env:
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #     echo "deploy"
          # tar zcvf - README.md | ssh -o StrictHostKeyChecking=no -p $PORT $USER@$HOST "cat > README.tar.gz"

      - name: Kill VPN connection
        if: always()
        run: |
          sudo killall openvpn
